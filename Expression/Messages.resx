<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EMBadArrayDimensions" xml:space="preserve">
    <value>The Arrays for function '{0}' do not have the same sizes (dimensions).</value>
  </data>
  <data name="EMBadArrayDimensionsDetail" xml:space="preserve">
    <value>First Array: {0}
Second Array: {1}</value>
  </data>
  <data name="EMBadAssignment" xml:space="preserve">
    <value>It is possible to assign only to variable or indexer, not to '{0}'.</value>
  </data>
  <data name="EMBadBoolValue" xml:space="preserve">
    <value>String '{0}' has not been determined as a bool value.</value>
  </data>
  <data name="EMBadGraphParamType" xml:space="preserve">
    <value>Parameter '{0}' in graph parameters has bad type.</value>
  </data>
  <data name="EMBadGraphParamTypeDetail" xml:space="preserve">
    <value>Correct type: {0}
Entered type: {1}</value>
  </data>
  <data name="EMBadHelpParameter" xml:space="preserve">
    <value>Help is provided only for functions, not for '{0}'.</value>
  </data>
  <data name="EMBadParameterName" xml:space="preserve">
    <value>The graph parameter '{0}' does not exist.</value>
  </data>
  <data name="EMBadParamType" xml:space="preserve">
    <value>Parameter '{0}' in function '{1}' has bad type.</value>
  </data>
  <data name="EMBadParamTypeDetail" xml:space="preserve">
    <value>Correct type: {0}
Entered type: {1}</value>
  </data>
  <data name="EMBadTypeName" xml:space="preserve">
    <value>String '{0}' has not been determined as a valid type.</value>
  </data>
  <data name="EMBadVariableName" xml:space="preserve">
    <value>The name '{0}' of a variable has not valid format.</value>
  </data>
  <data name="EMBadVariableNameInvalidCharacter" xml:space="preserve">
    <value>The name must not contain the character '{0}' at position {1}.</value>
  </data>
  <data name="EMBadVariableNameNoSpace" xml:space="preserve">
    <value>There must be no spaces in it.</value>
  </data>
  <data name="EMFewArgs" xml:space="preserve">
    <value>Function '{0}' has not enough arguments.</value>
  </data>
  <data name="EMFileNotExist" xml:space="preserve">
    <value>The file you '{0}' have specified does not exist.</value>
  </data>
  <data name="EMFunctionNotExist" xml:space="preserve">
    <value>Function '{0}' does not exist.</value>
  </data>
  <data name="EMInvalidBracketPosition" xml:space="preserve">
    <value>Invalid bracket position.</value>
  </data>
  <data name="EMInvalidBracketPositionDetail" xml:space="preserve">
    <value>Bracket of type '{0}' is placed on invalid position.</value>
  </data>
  <data name="EMInvalidBracketPositionDetailBracketMixing" xml:space="preserve">
    <value>Invalid mixing of brackets '{0}' and '{1}'.</value>
  </data>
  <data name="EMInvalidBracketPositionDetailCloseBeforeOpen" xml:space="preserve">
    <value>Close bracket '{0}' is placed before open bracket '{1}' or open bracket '{1}' is missing.</value>
  </data>
  <data name="EMInvalidCharacter" xml:space="preserve">
    <value>Invalid character.</value>
  </data>
  <data name="EMInvalidEndVariablePosition" xml:space="preserve">
    <value>Invalid '$' position. It can be placed only inside indexing brackets.</value>
  </data>
  <data name="EMInvalidExpressionEnd" xml:space="preserve">
    <value>The expression cannot finish with operator.</value>
  </data>
  <data name="EMInvalidNumberArgs" xml:space="preserve">
    <value>Function '{0}' has incorrect number of arguments.</value>
  </data>
  <data name="EMInvalidNumberArgsDetail" xml:space="preserve">
    <value>Arguments needed: {0}
Arguments number: {1}</value>
  </data>
  <data name="EMInvalidPosition" xml:space="preserve">
    <value>{0} is placed on invalid position.</value>
  </data>
  <data name="EMListToArrayConvert" xml:space="preserve">
    <value>List cannot be converted into an array. There are items of Incompatible types in the list.</value>
  </data>
  <data name="EMManyArgs" xml:space="preserve">
    <value>Function '{0}' has too many arguments.</value>
  </data>
  <data name="EMNoFile" xml:space="preserve">
    <value>You must specify the name of the file.</value>
  </data>
  <data name="EMNot1D" xml:space="preserve">
    <value>For the considered operation the rank of the Array must be equals to 1.</value>
  </data>
  <data name="EMNotEqualLength" xml:space="preserve">
    <value>Lengths of the given objects must be equal.</value>
  </data>
  <data name="EMNotEqualLengthDetail" xml:space="preserve">
    <value>Length of the first object: {0}
Length of the second object: {1}</value>
  </data>
  <data name="EMNotEqualTypes" xml:space="preserve">
    <value>The elements of the given list have not equal types.</value>
  </data>
  <data name="EMNotEqualVectorLength" xml:space="preserve">
    <value>Lengths of two vectors in the function '{0}' must be equal.</value>
  </data>
  <data name="EMNotEqualVectorLengthDetail" xml:space="preserve">
    <value>Length of the first vector: {0}
Length of the second vector: {1}</value>
  </data>
  <data name="EMNoVariable" xml:space="preserve">
    <value>Variable '{0}' has not been found in the context.</value>
  </data>
  <data name="EMNullValue" xml:space="preserve">
    <value>The result of a part of the expression is NULL. This cannot be assigned.</value>
  </data>
  <data name="EMObligatoryParameter" xml:space="preserve">
    <value>Parameter '{0}' (position {1}) of the function '{2}' is obligatory and cannot be omited.</value>
  </data>
  <data name="EMOperatorArrayLength" xml:space="preserve">
    <value>Using the operator '{0}' between array requires the length  ({1}, {2}) to be equals.</value>
  </data>
  <data name="EMOperatorUnknownType" xml:space="preserve">
    <value>It is not possible to use the operator '{0}' between these types: {1} {0} {2}.</value>
  </data>
  <data name="EMParametersCompatibility" xml:space="preserve">
    <value>The operator '{0}' cannot be used between types '{1}' and '{2}'.</value>
  </data>
  <data name="EMParametersDifferentLength" xml:space="preserve">
    <value>The operator '{0}' requires that all of the parameters of the type '{1}' must have the same length.</value>
  </data>
  <data name="EMParametersDifferentLengthDetail" xml:space="preserve">
    <value>Found lengths: {0}, {1}</value>
  </data>
  <data name="EMRankDetail" xml:space="preserve">
    <value>Rank of the Array = {0}.</value>
  </data>
  <data name="EMStringCharMissing" xml:space="preserve">
    <value>String character missing. String is opened, but not closed.</value>
  </data>
  <data name="EMVarCannotBeSet" xml:space="preserve">
    <value>Variable '{0}' cannot be set.</value>
  </data>
  <data name="EMZeroLengthList" xml:space="preserve">
    <value>The length of the list must not be zero.</value>
  </data>
  <data name="GPALabelColorX" xml:space="preserve">
    <value>alabelcolorx</value>
  </data>
  <data name="GPALabelColorXDescription" xml:space="preserve">
    <value>Color of the labels of the x-axis </value>
  </data>
  <data name="GPALabelColorY" xml:space="preserve">
    <value>alabelcolory</value>
  </data>
  <data name="GPALabelColorYDescription" xml:space="preserve">
    <value>Color of the labels of the y-axis </value>
  </data>
  <data name="GPALabelFSizeX" xml:space="preserve">
    <value>alabelfsizex</value>
  </data>
  <data name="GPALabelFSizeXDescription" xml:space="preserve">
    <value>Font size of the labels of the x-axis </value>
  </data>
  <data name="GPALabelFSizeY" xml:space="preserve">
    <value>alabelfsizey</value>
  </data>
  <data name="GPALabelFSizeYDescription" xml:space="preserve">
    <value>Font size of the labels of the y-axis </value>
  </data>
  <data name="GPALColorX" xml:space="preserve">
    <value>alcolorx</value>
  </data>
  <data name="GPALColorXDescription" xml:space="preserve">
    <value>Color of the line of the x-axis</value>
  </data>
  <data name="GPALColorY" xml:space="preserve">
    <value>alcolory</value>
  </data>
  <data name="GPALColorYDescription" xml:space="preserve">
    <value>Color of the line of the y-axis</value>
  </data>
  <data name="GPALWidthX" xml:space="preserve">
    <value>alwidthx</value>
  </data>
  <data name="GPALWidthXDescription" xml:space="preserve">
    <value>Width of the line of the x-axis</value>
  </data>
  <data name="GPALWidthY" xml:space="preserve">
    <value>alwidthy</value>
  </data>
  <data name="GPALWidthYDescription" xml:space="preserve">
    <value>Width of the line of the y-axis</value>
  </data>
  <data name="GPAnimCurve" xml:space="preserve">
    <value>animcurve</value>
  </data>
  <data name="GPAnimCurveDescription" xml:space="preserve">
    <value>True if the curves are to be animated</value>
  </data>
  <data name="GPAnimGroup" xml:space="preserve">
    <value>animgroup</value>
  </data>
  <data name="GPAnimGroupDescription" xml:space="preserve">
    <value>True if the groups are to be animated</value>
  </data>
  <data name="GPAPColorX" xml:space="preserve">
    <value>apcolorx</value>
  </data>
  <data name="GPAPColorXDescription" xml:space="preserve">
    <value>Color of the points of the x-axis</value>
  </data>
  <data name="GPAPColorY" xml:space="preserve">
    <value>apcolory</value>
  </data>
  <data name="GPAPColorYDescription" xml:space="preserve">
    <value>Color of the points of the y-axis</value>
  </data>
  <data name="GPAPSizeX" xml:space="preserve">
    <value>apsizex</value>
  </data>
  <data name="GPAPSizeXDescription" xml:space="preserve">
    <value>Size of the points of the x-axis</value>
  </data>
  <data name="GPAPSizeY" xml:space="preserve">
    <value>apsizey</value>
  </data>
  <data name="GPAPSizeYDescription" xml:space="preserve">
    <value>Size of the points of the y-axis</value>
  </data>
  <data name="GPAPStyleX" xml:space="preserve">
    <value>apstylex</value>
  </data>
  <data name="GPAPStyleXDescription" xml:space="preserve">
    <value>Style of the points of the x-axis</value>
  </data>
  <data name="GPAPStyleY" xml:space="preserve">
    <value>apstyley</value>
  </data>
  <data name="GPAPStyleYDescription" xml:space="preserve">
    <value>Style of the points of the y-axis</value>
  </data>
  <data name="GParamHelpCurveParam" xml:space="preserve">
    <value>Curve parameter</value>
  </data>
  <data name="GParamHelpGlobalParam" xml:space="preserve">
    <value>Global parameter</value>
  </data>
  <data name="GParamHelpGroupParam" xml:space="preserve">
    <value>Group parameter</value>
  </data>
  <data name="GPAShowB" xml:space="preserve">
    <value>ashowb</value>
  </data>
  <data name="GPAShowBDescription" xml:space="preserve">
    <value>True if the x-axis at the bottom is to be shown</value>
  </data>
  <data name="GPAShowL" xml:space="preserve">
    <value>ashowl</value>
  </data>
  <data name="GPAShowLabelX" xml:space="preserve">
    <value>ashowlabelx</value>
  </data>
  <data name="GPAShowLabelXDescription" xml:space="preserve">
    <value>True if the labels of the x-axis are to be shown</value>
  </data>
  <data name="GPAShowLabelY" xml:space="preserve">
    <value>ashowlabely</value>
  </data>
  <data name="GPAShowLabelYDescription" xml:space="preserve">
    <value>True if the labels of the y-axis are to be shown</value>
  </data>
  <data name="GPAShowLDescription" xml:space="preserve">
    <value>True if the y-axis on the left is to be shown</value>
  </data>
  <data name="GPAShowR" xml:space="preserve">
    <value>ashowr</value>
  </data>
  <data name="GPAShowRDescription" xml:space="preserve">
    <value>True if the y-axis on the right is to be shown</value>
  </data>
  <data name="GPAShowT" xml:space="preserve">
    <value>ashowt</value>
  </data>
  <data name="GPAShowTDescription" xml:space="preserve">
    <value>True if the x-axis at the top is to be shown</value>
  </data>
  <data name="GPATitleColorX" xml:space="preserve">
    <value>titlecolorx</value>
  </data>
  <data name="GPATitleColorXDescription" xml:space="preserve">
    <value>Color of the x-axis</value>
  </data>
  <data name="GPATitleColorY" xml:space="preserve">
    <value>titlecolory</value>
  </data>
  <data name="GPATitleColorYDescription" xml:space="preserve">
    <value>Color of the y-axis</value>
  </data>
  <data name="GPATitleFSizeX" xml:space="preserve">
    <value>titlefsizex</value>
  </data>
  <data name="GPATitleFSizeXDescription" xml:space="preserve">
    <value>Font size of the x-axis</value>
  </data>
  <data name="GPATitleFSizeY" xml:space="preserve">
    <value>titlefsizey</value>
  </data>
  <data name="GPATitleFSizeYDescription" xml:space="preserve">
    <value>Font size of the y-axis</value>
  </data>
  <data name="GPATitleX" xml:space="preserve">
    <value>atitlex</value>
  </data>
  <data name="GPATitleXDescription" xml:space="preserve">
    <value>Title of the x-axis</value>
  </data>
  <data name="GPATitleY" xml:space="preserve">
    <value>atitley</value>
  </data>
  <data name="GPATitleYDescription" xml:space="preserve">
    <value>Title of the y-axis</value>
  </data>
  <data name="GPBColor" xml:space="preserve">
    <value>bcolor</value>
  </data>
  <data name="GPBColorDescription" xml:space="preserve">
    <value>Color of the background</value>
  </data>
  <data name="GPBColorMinus" xml:space="preserve">
    <value>bcolorminus</value>
  </data>
  <data name="GPBColorMinusDescription" xml:space="preserve">
    <value>Color of the minimal negative value of the background image</value>
  </data>
  <data name="GPBColorPlus" xml:space="preserve">
    <value>bcolorplus</value>
  </data>
  <data name="GPBColorPlusDescription" xml:space="preserve">
    <value>Color of the maximal positive value of the background image</value>
  </data>
  <data name="GPBColorZero" xml:space="preserve">
    <value>bcolorzero</value>
  </data>
  <data name="GPBColorZeroDescription" xml:space="preserve">
    <value>Color of the zero value of the background image</value>
  </data>
  <data name="GPBLegend" xml:space="preserve">
    <value>blegend</value>
  </data>
  <data name="GPBLegendDescription" xml:space="preserve">
    <value>True if the legend of the background image are to be displayed</value>
  </data>
  <data name="GPBLegendFSize" xml:space="preserve">
    <value>blegendfsize</value>
  </data>
  <data name="GPBLegendFSizeDescription" xml:space="preserve">
    <value>Font size of the legend of the background image</value>
  </data>
  <data name="GPBLegendWidth" xml:space="preserve">
    <value>blegendwidth</value>
  </data>
  <data name="GPBLegendWidthDescription" xml:space="preserve">
    <value>Width of the legend of the background image</value>
  </data>
  <data name="GPBMaxX" xml:space="preserve">
    <value>bmaxx</value>
  </data>
  <data name="GPBMaxXDescription" xml:space="preserve">
    <value>Maximal x of the background image</value>
  </data>
  <data name="GPBMaxY" xml:space="preserve">
    <value>bmaxy</value>
  </data>
  <data name="GPBMaxYDescription" xml:space="preserve">
    <value>Maximal y of the background image</value>
  </data>
  <data name="GPBMinX" xml:space="preserve">
    <value>bminx</value>
  </data>
  <data name="GPBMinXDescription" xml:space="preserve">
    <value>Minimal x of the background image</value>
  </data>
  <data name="GPBMinY" xml:space="preserve">
    <value>bminy</value>
  </data>
  <data name="GPBMinYDescription" xml:space="preserve">
    <value>Minimal y of the background image</value>
  </data>
  <data name="GPBPSizeX" xml:space="preserve">
    <value>bpsizex</value>
  </data>
  <data name="GPBPSizeXDescription" xml:space="preserve">
    <value>Size of the points of the background image in the x-direction</value>
  </data>
  <data name="GPBPSizeY" xml:space="preserve">
    <value>bpsizey</value>
  </data>
  <data name="GPBPSizeYDescription" xml:space="preserve">
    <value>Size of the points of the background image in the y-direction</value>
  </data>
  <data name="GPFPColor" xml:space="preserve">
    <value>fpcolor</value>
  </data>
  <data name="GPFPColorDescription" xml:space="preserve">
    <value>Color of the first point of the curve</value>
  </data>
  <data name="GPFPSize" xml:space="preserve">
    <value>fpsize</value>
  </data>
  <data name="GPFPSizeDescription" xml:space="preserve">
    <value>Size of the first point of the curve</value>
  </data>
  <data name="GPFPStyle" xml:space="preserve">
    <value>fpstyle</value>
  </data>
  <data name="GPFPStyleDescription" xml:space="preserve">
    <value>Style of the first point of the curve</value>
  </data>
  <data name="GPGridColorX" xml:space="preserve">
    <value>gridcolorx</value>
  </data>
  <data name="GPGridColorXDescription" xml:space="preserve">
    <value>Color of vertical grid lines</value>
  </data>
  <data name="GPGridColorY" xml:space="preserve">
    <value>gridcolory</value>
  </data>
  <data name="GPGridColorYDescription" xml:space="preserve">
    <value>Color of horizontal grid lines</value>
  </data>
  <data name="GPGridWidthX" xml:space="preserve">
    <value>gridwidthx</value>
  </data>
  <data name="GPGridWidthXDescription" xml:space="preserve">
    <value>Width of vertical grid lines</value>
  </data>
  <data name="GPGridWidthY" xml:space="preserve">
    <value>gridwidthy</value>
  </data>
  <data name="GPGridWidthYDescription" xml:space="preserve">
    <value>Width of horizontal grid lines</value>
  </data>
  <data name="GPGTitle" xml:space="preserve">
    <value>gtitle</value>
  </data>
  <data name="GPGTitleColor" xml:space="preserve">
    <value>gtitlecolor</value>
  </data>
  <data name="GPGTitleColorDescription" xml:space="preserve">
    <value>Color of the title of the group</value>
  </data>
  <data name="GPGTitleDescription" xml:space="preserve">
    <value>Title of the group</value>
  </data>
  <data name="GPGTitleFSize" xml:space="preserve">
    <value>gtitlefsize</value>
  </data>
  <data name="GPGTitleFSizeDescription" xml:space="preserve">
    <value>Font size of the title of the group</value>
  </data>
  <data name="GPInterval" xml:space="preserve">
    <value>interval</value>
  </data>
  <data name="GPIntervalDescription" xml:space="preserve">
    <value>Interval of the animation (ms)</value>
  </data>
  <data name="GPLabelColor" xml:space="preserve">
    <value>labelcolor</value>
  </data>
  <data name="GPLabelColorDescription" xml:space="preserve">
    <value>Color of the label of the curve</value>
  </data>
  <data name="GPLabelFSize" xml:space="preserve">
    <value>labelfsize</value>
  </data>
  <data name="GPLabelFSizeDescription" xml:space="preserve">
    <value>Font size of the curve</value>
  </data>
  <data name="GPLColor" xml:space="preserve">
    <value>lcolor</value>
  </data>
  <data name="GPLColorDescription" xml:space="preserve">
    <value>Color of the line of curve</value>
  </data>
  <data name="GPLName" xml:space="preserve">
    <value>lname</value>
  </data>
  <data name="GPLNameDescription" xml:space="preserve">
    <value>Name of the curve</value>
  </data>
  <data name="GPLPColor" xml:space="preserve">
    <value>lpcolor</value>
  </data>
  <data name="GPLPColorDescription" xml:space="preserve">
    <value>Color of the last point of the curve</value>
  </data>
  <data name="GPLPSize" xml:space="preserve">
    <value>lpsize</value>
  </data>
  <data name="GPLPSizeDescription" xml:space="preserve">
    <value>Size of the last point of the curve</value>
  </data>
  <data name="GPLPStyle" xml:space="preserve">
    <value>lpstyle</value>
  </data>
  <data name="GPLPStyleDescription" xml:space="preserve">
    <value>Style of the last point of the curve</value>
  </data>
  <data name="GPLStyle" xml:space="preserve">
    <value>lstyle</value>
  </data>
  <data name="GPLStyleDescription" xml:space="preserve">
    <value>Style of the line of the curve</value>
  </data>
  <data name="GPLWidth" xml:space="preserve">
    <value>lwidth</value>
  </data>
  <data name="GPLWidthDescription" xml:space="preserve">
    <value>Width of the line of the curve</value>
  </data>
  <data name="GPMarginB" xml:space="preserve">
    <value>marginb</value>
  </data>
  <data name="GPMarginBDescription" xml:space="preserve">
    <value>Bottom margin (in promiles)</value>
  </data>
  <data name="GPMarginL" xml:space="preserve">
    <value>marginl</value>
  </data>
  <data name="GPMarginLDescription" xml:space="preserve">
    <value>Left margin (in promiles)</value>
  </data>
  <data name="GPMarginR" xml:space="preserve">
    <value>marginr</value>
  </data>
  <data name="GPMarginRDescription" xml:space="preserve">
    <value>Right margin (in promiles)</value>
  </data>
  <data name="GPMarginT" xml:space="preserve">
    <value>margint</value>
  </data>
  <data name="GPMarginTDescription" xml:space="preserve">
    <value>Top margin (in promiles)</value>
  </data>
  <data name="GPMaxX" xml:space="preserve">
    <value>maxx</value>
  </data>
  <data name="GPMaxXDescription" xml:space="preserve">
    <value>Maximal x of the group</value>
  </data>
  <data name="GPMaxY" xml:space="preserve">
    <value>maxy</value>
  </data>
  <data name="GPMaxYDescription" xml:space="preserve">
    <value>Maximal y of the group</value>
  </data>
  <data name="GPMinX" xml:space="preserve">
    <value>minx</value>
  </data>
  <data name="GPMinXDescription" xml:space="preserve">
    <value>Minimal x of the group</value>
  </data>
  <data name="GPMinY" xml:space="preserve">
    <value>miny</value>
  </data>
  <data name="GPMinYDescription" xml:space="preserve">
    <value>Minimal y of the group</value>
  </data>
  <data name="GPPColor" xml:space="preserve">
    <value>pcolor</value>
  </data>
  <data name="GPPColorDescription" xml:space="preserve">
    <value>Color of the points of the curve</value>
  </data>
  <data name="GPPSize" xml:space="preserve">
    <value>psize</value>
  </data>
  <data name="GPPSizeDescription" xml:space="preserve">
    <value>Size of the points of the curve</value>
  </data>
  <data name="GPPStyle" xml:space="preserve">
    <value>pstyle</value>
  </data>
  <data name="GPPStyleDescription" xml:space="preserve">
    <value>Style of the points of the curve</value>
  </data>
  <data name="GPRWindowH" xml:space="preserve">
    <value>rwindowh</value>
  </data>
  <data name="GPRWindowHDescription" xml:space="preserve">
    <value>Relative height of the window of the graph</value>
  </data>
  <data name="GPRWindowL" xml:space="preserve">
    <value>rwindowl</value>
  </data>
  <data name="GPRWindowLDescription" xml:space="preserve">
    <value>Left relative margin of the window of the graph</value>
  </data>
  <data name="GPRWindowT" xml:space="preserve">
    <value>rwindowt</value>
  </data>
  <data name="GPRWindowTDescription" xml:space="preserve">
    <value>Top relative margin of the window of the graph</value>
  </data>
  <data name="GPRWindowW" xml:space="preserve">
    <value>rwindoww</value>
  </data>
  <data name="GPRWindowWDescription" xml:space="preserve">
    <value>Relative width of the window of the graph</value>
  </data>
  <data name="GPScrollStep" xml:space="preserve">
    <value>scrollstep</value>
  </data>
  <data name="GPScrollStepDescription" xml:space="preserve">
    <value>Step between two pictures when a scroll wheel is used</value>
  </data>
  <data name="GPShift" xml:space="preserve">
    <value>shift</value>
  </data>
  <data name="GPShiftDescription" xml:space="preserve">
    <value>Shift of the curves</value>
  </data>
  <data name="GPShowGridX" xml:space="preserve">
    <value>showgridx</value>
  </data>
  <data name="GPShowGridXDescription" xml:space="preserve">
    <value>Show vertical grid</value>
  </data>
  <data name="GPShowGridY" xml:space="preserve">
    <value>showgridy</value>
  </data>
  <data name="GPShowGridYDescription" xml:space="preserve">
    <value>Show horizontal grid</value>
  </data>
  <data name="GPTitle" xml:space="preserve">
    <value>title</value>
  </data>
  <data name="GPTitleColor" xml:space="preserve">
    <value>titlecolor</value>
  </data>
  <data name="GPTitleColorDescription" xml:space="preserve">
    <value>Color of the main title of the graph</value>
  </data>
  <data name="GPTitleDescription" xml:space="preserve">
    <value>Title of the whole graph</value>
  </data>
  <data name="GPTitleFSize" xml:space="preserve">
    <value>titlefsize</value>
  </data>
  <data name="GPTitleFSizeDescription" xml:space="preserve">
    <value>Font size of the main title of the graph</value>
  </data>
  <data name="HelpAbbreviate" xml:space="preserve">
    <value>Abbreviates a fraction</value>
  </data>
  <data name="HelpAbs" xml:space="preserve">
    <value>Absolute value</value>
  </data>
  <data name="HelpAdd" xml:space="preserve">
    <value>Adds an element to the end of the list</value>
  </data>
  <data name="HelpAddBefore" xml:space="preserve">
    <value>Adds an element to the beginning of the list</value>
  </data>
  <data name="HelpAddGlobal" xml:space="preserve">
    <value>Adds an element to the end of the list in the global context</value>
  </data>
  <data name="HelpArcTan" xml:space="preserve">
    <value>Arcus tangens of the value</value>
  </data>
  <data name="HelpAssignment" xml:space="preserve">
    <value>Operator of assignment</value>
  </data>
  <data name="HelpBandWidth" xml:space="preserve">
    <value>Size of the band of a band matrix</value>
  </data>
  <data name="HelpBoolAnd" xml:space="preserve">
    <value>Operator &amp;&amp; (boolean product)</value>
  </data>
  <data name="HelpBoolOr" xml:space="preserve">
    <value>Operator || (boolean sum)</value>
  </data>
  <data name="HelpBounds" xml:space="preserve">
    <value>For given dynamical system and energy determines the bounds (higher limit) in which the solution can be found</value>
  </data>
  <data name="HelpCGCM" xml:space="preserve">
    <value>Creates a ClassicalGCM class (nonrotating case with simple kinetic term)</value>
  </data>
  <data name="HelpCGCMJ" xml:space="preserve">
    <value>Creates a ClassicalGCMJ class (case with nonzero angular momentum)</value>
  </data>
  <data name="HelpCIBM" xml:space="preserve">
    <value>Creates a ClassicalIBM class</value>
  </data>
  <data name="HelpClear" xml:space="preserve">
    <value>Erase variable from the context</value>
  </data>
  <data name="HelpClearAll" xml:space="preserve">
    <value>Delete all variables from the context</value>
  </data>
  <data name="HelpClearExcept" xml:space="preserve">
    <value>Erase all variables except specified ones from the context</value>
  </data>
  <data name="HelpClearGlobal" xml:space="preserve">
    <value>Erase variable from the global context</value>
  </data>
  <data name="HelpComputeSpectrum" xml:space="preserve">
    <value>Computes spectrum of a LHOQuantumGCM object</value>
  </data>
  <data name="HelpContext" xml:space="preserve">
    <value>Creates a new context</value>
  </data>
  <data name="HelpDeflate" xml:space="preserve">
    <value>Given array transforms into one dimensional array</value>
  </data>
  <data name="HelpDelta" xml:space="preserve">
    <value>Calculates statistics v_{i} - v_{0} - i</value>
  </data>
  <data name="HelpDenominator" xml:space="preserve">
    <value>Denominator of a fraction</value>
  </data>
  <data name="HelpDivide" xml:space="preserve">
    <value>Operator /</value>
  </data>
  <data name="HelpDivideItem" xml:space="preserve">
    <value>Operator //, items of vectors and matrices are divided among one another</value>
  </data>
  <data name="HelpDouble" xml:space="preserve">
    <value>Converts given value to a double precision number</value>
  </data>
  <data name="HelpEigenMatrix" xml:space="preserve">
    <value>Returns a matrix of components of eigenvectors arranged in matrix by indexes</value>
  </data>
  <data name="HelpEigenSystem" xml:space="preserve">
    <value>Eigensystem of a matrix calculated using LAPACK library (function dsyev); before calculation it makes symmetrization of a matrix</value>
  </data>
  <data name="HelpEnergy" xml:space="preserve">
    <value>For given dynamical system and position in the phase space calculates the energy</value>
  </data>
  <data name="HelpEnvelopeMatrixG" xml:space="preserve">
    <value>Generates an envelope matrix in Gaussian form (according to PRL 65, 529 (1990))</value>
  </data>
  <data name="HelpEquality" xml:space="preserve">
    <value>Operator == (equality)</value>
  </data>
  <data name="HelpEquipotential" xml:space="preserve">
    <value>For GCM system and given energy calculates equipotential contour</value>
  </data>
  <data name="HelpEvalArray" xml:space="preserve">
    <value>Array evaluation of an expression</value>
  </data>
  <data name="HelpExclude" xml:space="preserve">
    <value>From the first vector excludes values contained in the second vector</value>
  </data>
  <data name="HelpExit" xml:space="preserve">
    <value>Sends the request to close the program</value>
  </data>
  <data name="HelpExport" xml:space="preserve">
    <value>Saves a variable to a file</value>
  </data>
  <data name="HelpExtendedCGCM1" xml:space="preserve">
    <value>Creates an ExtendedClassicalGCM class with mass proportional to beta^2</value>
  </data>
  <data name="HelpExtendedCGCM2" xml:space="preserve">
    <value>Creates an ExtendedClassicalGCM class with kinetic term proportional to beta^2</value>
  </data>
  <data name="HelpFactorial" xml:space="preserve">
    <value>Factorial of the value</value>
  </data>
  <data name="HelpFFTSpectrum" xml:space="preserve">
    <value>Gives the spectrum of a vector using Fast Fourier Transform (FFT)</value>
  </data>
  <data name="HelpFraction" xml:space="preserve">
    <value>Exact fraction</value>
  </data>
  <data name="HelpFullHelp" xml:space="preserve">
    <value>Full help for the given function (including names and types of the parameters)</value>
  </data>
  <data name="HelpGEquality" xml:space="preserve">
    <value>Operator &gt;= (greater or equal)</value>
  </data>
  <data name="HelpGetColumns" xml:space="preserve">
    <value>Returns selected columns from a matrix</value>
  </data>
  <data name="HelpGetContext" xml:space="preserve">
    <value>Returns actual context</value>
  </data>
  <data name="HelpGetGlobalContext" xml:space="preserve">
    <value>Returns global context</value>
  </data>
  <data name="HelpGetGlobalVar" xml:space="preserve">
    <value>Gets out a variable from the global context</value>
  </data>
  <data name="HelpGetRows" xml:space="preserve">
    <value>Returns selected rows from a matrix</value>
  </data>
  <data name="HelpGetVar" xml:space="preserve">
    <value>Returns a variable from a given context</value>
  </data>
  <data name="HelpGetY" xml:space="preserve">
    <value>From point or pointvector separates coordinates y</value>
  </data>
  <data name="HelpGOE" xml:space="preserve">
    <value>Value of Wigner GOE distribution</value>
  </data>
  <data name="HelpGParamHelp" xml:space="preserve">
    <value>Help to one graph parameter</value>
  </data>
  <data name="HelpGParams" xml:space="preserve">
    <value>List of all graph parameters</value>
  </data>
  <data name="HelpGraph" xml:space="preserve">
    <value>Create graph</value>
  </data>
  <data name="HelpGreater" xml:space="preserve">
    <value>Operator &gt;</value>
  </data>
  <data name="HelpGSE" xml:space="preserve">
    <value>Value of Wigner GSE distribution</value>
  </data>
  <data name="HelpGUE" xml:space="preserve">
    <value>Value of Wigner GUE distribution</value>
  </data>
  <data name="HelpHamiltonianMatrixTrace" xml:space="preserve">
    <value>Returns the trace of the Hamiltonian matrix of a quantum system</value>
  </data>
  <data name="HelpHelp" xml:space="preserve">
    <value>Help to the function</value>
  </data>
  <data name="HelpHermite" xml:space="preserve">
    <value>Value of the Hermite polynomial</value>
  </data>
  <data name="HelpHH" xml:space="preserve">
    <value>Creates a HenonHeiles class</value>
  </data>
  <data name="HelpHistogram" xml:space="preserve">
    <value>Returns the histogram of a vector (on a given interval)</value>
  </data>
  <data name="HelpImport" xml:space="preserve">
    <value>Read a file to a variable</value>
  </data>
  <data name="HelpInequality" xml:space="preserve">
    <value>Operator != (inequality)</value>
  </data>
  <data name="HelpInitialCondition" xml:space="preserve">
    <value>For given dynamical system and energy generates initial condition of a trajectory and returns it as Vector</value>
  </data>
  <data name="HelpInt" xml:space="preserve">
    <value>Converts given value to an integer number</value>
  </data>
  <data name="HelpIntegrate" xml:space="preserve">
    <value>Calculates an integral under given curve</value>
  </data>
  <data name="HelpInterval" xml:space="preserve">
    <value>Returns an array of integer numbers beginning and ending with given numbers (and with given step)</value>
  </data>
  <data name="HelpIntervalA" xml:space="preserve">
    <value>Creates points for interval (as an array)</value>
  </data>
  <data name="HelpIntervalPV" xml:space="preserve">
    <value>Creates points for interval (in the form PointVector(0, interval points))</value>
  </data>
  <data name="HelpIntervalV" xml:space="preserve">
    <value>Creates points for interval</value>
  </data>
  <data name="HelpJacobi" xml:space="preserve">
    <value>Eigensystem of a matrix calculated using Jacobi method; before calculation it makes symmetrization of a matrix</value>
  </data>
  <data name="HelpJoin" xml:space="preserve">
    <value>Array of vectors or array of pointVectors joins into one Vector</value>
  </data>
  <data name="HelpLaguerre" xml:space="preserve">
    <value>Value of the Laguerre polynomial</value>
  </data>
  <data name="HelpLegendre" xml:space="preserve">
    <value>Value of the Legendre polynomial</value>
  </data>
  <data name="HelpLength" xml:space="preserve">
    <value>Returns length(s) or number of elements of a given object as an array</value>
  </data>
  <data name="HelpLEquality" xml:space="preserve">
    <value>Operator &lt;= (lesser or equal)</value>
  </data>
  <data name="HelpLesser" xml:space="preserve">
    <value>Operator &lt;</value>
  </data>
  <data name="HelpLHOQGCMA5D" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in 5D basis preparing the Hamiltonian matrix by using algebraic relations</value>
  </data>
  <data name="HelpLHOQGCMARE" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in radial 2D basis even in angular coordinate preparing the Hamiltonian matrix by using algebraic relations</value>
  </data>
  <data name="HelpLHOQGCMARO" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in radial 2D basis odd in angular coordinate preparing the Hamiltonian matrix by using algebraic relations</value>
  </data>
  <data name="HelpLHOQGCMI5D" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in 5D basis preparing the Hamiltonian matrix by integrating the basis functions in x-representation</value>
  </data>
  <data name="HelpLHOQGCMIC" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in 2D cartesian basis (direct product of two 1D harmonic oscillators) preparing the Hamiltonian matrix by integrating the basis functions in x-representation; states with all possible (also nonfysical) angular momentum are included</value>
  </data>
  <data name="HelpLHOQGCMIR" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in radial 2D basis in angular coordinate preparing the Hamiltonian matrix byintegrating the basis functions in x-representation; both odd and even states are included</value>
  </data>
  <data name="HelpLHOQGCMIRF" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in 2D radial basis preparing the Hamiltonian matrix by integrating the basis functions in x-representation; states with all possible (also nonfysical) angular momentum are included</value>
  </data>
  <data name="HelpLHOQGCMIRO" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in radial 2D basis odd in angular coordinate preparing the Hamiltonian matrix by integrating the basis functions in x-representation</value>
  </data>
  <data name="HelpLinearRegression" xml:space="preserve">
    <value>Linear regression of data (including uncertainities of estimated parameters)</value>
  </data>
  <data name="HelpLog" xml:space="preserve">
    <value>Logarithm of the value (with specified base)</value>
  </data>
  <data name="HelpLong" xml:space="preserve">
    <value>Converts given value to a long integer number (with arbitrary precision)</value>
  </data>
  <data name="HelpMatrixColumn" xml:space="preserve">
    <value>Given vectors put onto columns of a matrix</value>
  </data>
  <data name="HelpMatrixRow" xml:space="preserve">
    <value>Given vectors put onto rows of a matrix</value>
  </data>
  <data name="HelpMCD" xml:space="preserve">
    <value>Maximal common divisor of given numbers</value>
  </data>
  <data name="HelpMean" xml:space="preserve">
    <value>Calculates mean of a vector</value>
  </data>
  <data name="HelpMinus" xml:space="preserve">
    <value>Operator -</value>
  </data>
  <data name="HelpMute" xml:space="preserve">
    <value>Mutes the output of a function</value>
  </data>
  <data name="HelpNew" xml:space="preserve">
    <value>Creates new object of a given type</value>
  </data>
  <data name="HelpNorm" xml:space="preserve">
    <value>Norm of the vector</value>
  </data>
  <data name="HelpNotEvalArray" xml:space="preserve">
    <value>Disable array evaluation of an expression</value>
  </data>
  <data name="HelpNuDatReadKnownIsotopes" xml:space="preserve">
    <value>Reads all known isotopes from http://www-nds.iaea.org</value>
  </data>
  <data name="HelpNuDatReadNucleus" xml:space="preserve">
    <value>Reads all accessible pieces of information about a nucleus from http://www-nds.iaea.org</value>
  </data>
  <data name="HelpNumerator" xml:space="preserve">
    <value>Numerator of a fraction</value>
  </data>
  <data name="HelpOpJoin" xml:space="preserve">
    <value>Operator ~ (joins numbers together into vector, joins strings and lists)</value>
  </data>
  <data name="HelpPeresInvariantG" xml:space="preserve">
    <value>Creates matrix with Poincaré section by the plane y = 0 for 2D system; contours are determined by time averaged Peres invariant</value>
  </data>
  <data name="HelpPi" xml:space="preserve">
    <value>Value of Pi number</value>
  </data>
  <data name="HelpPlus" xml:space="preserve">
    <value>Operator +</value>
  </data>
  <data name="HelpPoincare" xml:space="preserve">
    <value>Calculates a Poincaré section for given energy or trajectory given by its initial condition</value>
  </data>
  <data name="HelpPoint" xml:space="preserve">
    <value>Creates a point from two given numbers</value>
  </data>
  <data name="HelpPointVector" xml:space="preserve">
    <value>Converts given data to a pointvector</value>
  </data>
  <data name="HelpPoisson" xml:space="preserve">
    <value>Value of Poisson distribution</value>
  </data>
  <data name="HelpPolynom" xml:space="preserve">
    <value>Data of input vector interprets as coeficients of polynom and return its value</value>
  </data>
  <data name="HelpPolynomIntegrate" xml:space="preserve">
    <value>Data of input vector interprets as coeficients of polynom and return its integral</value>
  </data>
  <data name="HelpPotentialRoots" xml:space="preserve">
    <value>For GCM system solves the equation Potential == Given energy</value>
  </data>
  <data name="HelpPower" xml:space="preserve">
    <value>Operator ^ (power)</value>
  </data>
  <data name="HelpPowerItem" xml:space="preserve">
    <value>Operator ^^, power is calculated among the items of vectors and matrices</value>
  </data>
  <data name="HelpPrimes" xml:space="preserve">
    <value>Returns given number of primes</value>
  </data>
  <data name="HelpPrint" xml:space="preserve">
    <value>Writes a text (or variable) to the writer</value>
  </data>
  <data name="HelpPrintLine" xml:space="preserve">
    <value>Writes a text (or variable) to the writer and begins new line</value>
  </data>
  <data name="HelpPT1" xml:space="preserve">
    <value>Creates a class PT1 for studying quantum phase transitions</value>
  </data>
  <data name="HelpPT1Potential" xml:space="preserve">
    <value>Value of the potential of the system PT1</value>
  </data>
  <data name="HelpPT2" xml:space="preserve">
    <value>Creates a class PT2 for studying quantum phase transitions</value>
  </data>
  <data name="HelpPT2Potential" xml:space="preserve">
    <value>Value of the potential of the system PT2</value>
  </data>
  <data name="HelpRandomG" xml:space="preserve">
    <value>Generates Gaussian distributed random numbers with given variance and mean</value>
  </data>
  <data name="HelpRandomGOE" xml:space="preserve">
    <value>Value with Wigner GOE distribution</value>
  </data>
  <data name="HelpRandomGSE" xml:space="preserve">
    <value>Value with Wigner GSE distribution</value>
  </data>
  <data name="HelpRandomGUE" xml:space="preserve">
    <value>Value with Wigner GUE distribution</value>
  </data>
  <data name="HelpRandomMatrixSG" xml:space="preserve">
    <value>Generates a symmetric matrix with Gaussian distributed components (according to PRL 65, 529 (1990))</value>
  </data>
  <data name="HelpRandomPoisson" xml:space="preserve">
    <value>Value with Poisson distribution</value>
  </data>
  <data name="HelpRandomU" xml:space="preserve">
    <value>Generates uniformly distributed random numbers between given limits</value>
  </data>
  <data name="HelpRandomVectorG" xml:space="preserve">
    <value>Generates a vector with Gaussian distributed components</value>
  </data>
  <data name="HelpRandomVectorGOE" xml:space="preserve">
    <value>Generates a vector with Wigner GOE distributed components</value>
  </data>
  <data name="HelpRandomVectorGSE" xml:space="preserve">
    <value>Generates a vector with Wigner GSE distributed components</value>
  </data>
  <data name="HelpRandomVectorGUE" xml:space="preserve">
    <value>Generates a vector with Wigner GUE distributed components</value>
  </data>
  <data name="HelpRandomVectorPoisson" xml:space="preserve">
    <value>Generates a vector with Poisson distributed components</value>
  </data>
  <data name="HelpRandomVectorU" xml:space="preserve">
    <value>Generates a vector with uniformly distributed components</value>
  </data>
  <data name="HelpRegression" xml:space="preserve">
    <value>Polynomial regression of data</value>
  </data>
  <data name="HelpRemoveBadPoints" xml:space="preserve">
    <value>Removes bad points (NaN, Infinity) from Vector or PointVector</value>
  </data>
  <data name="HelpReplaceBadPoints" xml:space="preserve">
    <value>Replaces bad points (NaN, Infinity) in Vector or PointVector by a given value</value>
  </data>
  <data name="HelpRWF5DLHO" xml:space="preserve">
    <value>Value of the radial part of basis wave function for 5D LHO</value>
  </data>
  <data name="HelpSafeValue" xml:space="preserve">
    <value>Gets the value of the variable from the context; If there the variable does not exist, returns default value.</value>
  </data>
  <data name="HelpSALI" xml:space="preserve">
    <value>Calculates SALI dependence on time for given trajectory</value>
  </data>
  <data name="HelpSALIG" xml:space="preserve">
    <value>Creates matrix with Poincaré section by the plane y = 0 for 2D system; contours are determined by SALI</value>
  </data>
  <data name="HelpSALIR" xml:space="preserve">
    <value>Distinguishes using SALI whether the trajectory is regular (1) or chaotic (0)</value>
  </data>
  <data name="HelpSave" xml:space="preserve">
    <value>Saves current document into a file</value>
  </data>
  <data name="HelpSecondInvariant" xml:space="preserve">
    <value>Returns the second invariant of a quantum system</value>
  </data>
  <data name="HelpSeparator" xml:space="preserve">
    <value>Operator ; (separator)</value>
  </data>
  <data name="HelpSetContext" xml:space="preserve">
    <value>Sets a new context</value>
  </data>
  <data name="HelpSetDiagonal" xml:space="preserve">
    <value>Given value or Vector of values put onto diagonal of square matrix</value>
  </data>
  <data name="HelpSetGlobalContext" xml:space="preserve">
    <value>Sets a new global context</value>
  </data>
  <data name="HelpSetGlobalVar" xml:space="preserve">
    <value>Sets a variable into the global context</value>
  </data>
  <data name="HelpSetNonDiagonal" xml:space="preserve">
    <value>Given value put onto nondiagonal elements of square matrix</value>
  </data>
  <data name="HelpShow" xml:space="preserve">
    <value>Shows a graph</value>
  </data>
  <data name="HelpSin" xml:space="preserve">
    <value>Sinus of the value</value>
  </data>
  <data name="HelpSmooth" xml:space="preserve">
    <value>Smooths a vector</value>
  </data>
  <data name="HelpSort" xml:space="preserve">
    <value>Ascending sort of the object (with keys according to the sorting will be done)</value>
  </data>
  <data name="HelpSortDesc" xml:space="preserve">
    <value>Descending sort of the object (with keys according to the sorting will be done)</value>
  </data>
  <data name="HelpSpacing" xml:space="preserve">
    <value>Calculates neighbour spacing of vector components v_{i+j} - v_{i}</value>
  </data>
  <data name="HelpSqrt" xml:space="preserve">
    <value>Square root of the value</value>
  </data>
  <data name="HelpSum" xml:space="preserve">
    <value>Sum of all elements in the object</value>
  </data>
  <data name="HelpSumAbs" xml:space="preserve">
    <value>Sum of absolute values of all elements in the object</value>
  </data>
  <data name="HelpSumSquare" xml:space="preserve">
    <value>Sum of squares of values of all elements in the object</value>
  </data>
  <data name="HelpTestWWW" xml:space="preserve">
    <value>Tries to read text from specified URI</value>
  </data>
  <data name="HelpTime" xml:space="preserve">
    <value>Returns the duration of the calculation</value>
  </data>
  <data name="HelpTimeNow" xml:space="preserve">
    <value>Returns the current time</value>
  </data>
  <data name="HelpTimes" xml:space="preserve">
    <value>Operator *</value>
  </data>
  <data name="HelpTimesItem" xml:space="preserve">
    <value>Operator **, items of vectors and matrices are multiplied among one another</value>
  </data>
  <data name="HelpToArray" xml:space="preserve">
    <value>Given non-array object change to an array.</value>
  </data>
  <data name="HelpTrace" xml:space="preserve">
    <value>Trace of a given matrix</value>
  </data>
  <data name="HelpTrajectoryM" xml:space="preserve">
    <value>For given energy or a trajectory given by its initial condition calculates the trajectory; the result is returned by a matrix in the form (time, x, y, ..., px, py, ...)</value>
  </data>
  <data name="HelpTrajectoryP" xml:space="preserve">
    <value>    For given energy or a trajectory given by its initial condition calculates the trajectory; the x, y coordinates of the result is returned by a PointVector</value>
  </data>
  <data name="HelpType" xml:space="preserve">
    <value>Type of the value</value>
  </data>
  <data name="HelpUseContext" xml:space="preserve">
    <value>Uses the given context for specified calculations</value>
  </data>
  <data name="HelpVariance" xml:space="preserve">
    <value>Calculates variance of a vector</value>
  </data>
  <data name="HelpVector" xml:space="preserve">
    <value>Convert given data to a vector</value>
  </data>
  <data name="HelpVMatrix" xml:space="preserve">
    <value>cal_{V} matrix (PRL 98, 234301 (2007), expression (27))</value>
  </data>
  <data name="HelpVMatrixZero1" xml:space="preserve">
    <value>For GCM system and given energy calculates the line where the lower eigenvalue of V matrix is zero</value>
  </data>
  <data name="HelpVMatrixZero2" xml:space="preserve">
    <value>For GCM system and given energy calculates the line where the higher eigenvalue of V matrix is zero</value>
  </data>
  <data name="MsgBytes" xml:space="preserve">
    <value>{0} Bytes</value>
  </data>
  <data name="MsgParsing" xml:space="preserve">
    <value>`</value>
  </data>
  <data name="MsgReadingPage" xml:space="preserve">
    <value>Reading page...</value>
  </data>
  <data name="NuDatReadNucleusPage" xml:space="preserve">
    <value>Reading page of nucleus {0}...</value>
  </data>
  <data name="P1Assignment" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="P1AssignmentDescription" xml:space="preserve">
    <value>Variable name or indexed item</value>
  </data>
  <data name="P1Exclude" xml:space="preserve">
    <value>exc</value>
  </data>
  <data name="P1ExcludeDescription" xml:space="preserve">
    <value>Values to be excluded</value>
  </data>
  <data name="P1GraphDescription" xml:space="preserve">
    <value>Data for curves</value>
  </data>
  <data name="P1Histogram" xml:space="preserve">
    <value>bin</value>
  </data>
  <data name="P1HistogramDescription" xml:space="preserve">
    <value>Number of bins or an interval</value>
  </data>
  <data name="P1Integrate" xml:space="preserve">
    <value>curve</value>
  </data>
  <data name="P1IntegrateDescription" xml:space="preserve">
    <value>Curve</value>
  </data>
  <data name="P1Join" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="P1JoinDescription" xml:space="preserve">
    <value>Data to be joined</value>
  </data>
  <data name="P1Norm" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="P1NormDescription" xml:space="preserve">
    <value>Vector which norm is calculated</value>
  </data>
  <data name="P1PointVector" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="P1PointVectorDescription" xml:space="preserve">
    <value>Values of the pointvector</value>
  </data>
  <data name="P1Regression" xml:space="preserve">
    <value>pv</value>
  </data>
  <data name="P1RegressionDescription" xml:space="preserve">
    <value>Input data for the regression</value>
  </data>
  <data name="P2Assignment" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="P2AssignmentDescription" xml:space="preserve">
    <value>Value to be assigned</value>
  </data>
  <data name="P2ContextDescription" xml:space="preserve">
    <value>Name of a variable that will be copied from actual context</value>
  </data>
  <data name="P2Graph" xml:space="preserve">
    <value>background</value>
  </data>
  <data name="P2GraphDescription" xml:space="preserve">
    <value>Data for background (mesh graph)</value>
  </data>
  <data name="P2Norm" xml:space="preserve">
    <value>normpow</value>
  </data>
  <data name="P2NormDescription" xml:space="preserve">
    <value>Power of items</value>
  </data>
  <data name="P2Poincare" xml:space="preserve">
    <value>ic</value>
  </data>
  <data name="P2PoincareDescription" xml:space="preserve">
    <value>Initial condition of a trajectory or energy if the trajectory is randomly chosen</value>
  </data>
  <data name="P2PointVector" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="P2PointVectorDescription" xml:space="preserve">
    <value>Y values of the pointvector</value>
  </data>
  <data name="P3Equipotential" xml:space="preserve">
    <value>points</value>
  </data>
  <data name="P3EquipotentialDescription" xml:space="preserve">
    <value>Number of points of the equipotential contour</value>
  </data>
  <data name="P3Graph" xml:space="preserve">
    <value>error</value>
  </data>
  <data name="P3GraphDescription" xml:space="preserve">
    <value>Error bars for data</value>
  </data>
  <data name="P3InitialCondition" xml:space="preserve">
    <value>param</value>
  </data>
  <data name="P3InitialConditionDescription" xml:space="preserve">
    <value>Additional parameter (angular momentum)</value>
  </data>
  <data name="P3Poincare" xml:space="preserve">
    <value>points</value>
  </data>
  <data name="P3PoincareDescription" xml:space="preserve">
    <value>Number of points of the final section</value>
  </data>
  <data name="P4Graph" xml:space="preserve">
    <value>pglobal</value>
  </data>
  <data name="P4GraphDescription" xml:space="preserve">
    <value>Parameters for the whole graph</value>
  </data>
  <data name="P4Poincare" xml:space="preserve">
    <value>sectionplane</value>
  </data>
  <data name="P4PoincareDescription" xml:space="preserve">
    <value>Plane of the section</value>
  </data>
  <data name="P5Graph" xml:space="preserve">
    <value>pgroups</value>
  </data>
  <data name="P5GraphDescription" xml:space="preserve">
    <value>Parameters for groups of data</value>
  </data>
  <data name="P5Poincare" xml:space="preserve">
    <value>c1</value>
  </data>
  <data name="P5PoincareDescription" xml:space="preserve">
    <value>First coordinate of the phase space which will be stored</value>
  </data>
  <data name="P6Graph" xml:space="preserve">
    <value>pcurves</value>
  </data>
  <data name="P6GraphDescription" xml:space="preserve">
    <value>Parameters for curves</value>
  </data>
  <data name="P6Poincare" xml:space="preserve">
    <value>c2</value>
  </data>
  <data name="P6PoincareDescription" xml:space="preserve">
    <value>Second coordinate of the phase space which will be stored</value>
  </data>
  <data name="PA" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="PA0" xml:space="preserve">
    <value>a0</value>
  </data>
  <data name="PA0Description" xml:space="preserve">
    <value>Stiffness of the harmonic basis</value>
  </data>
  <data name="PAddend" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="PAddendDescription" xml:space="preserve">
    <value>addend</value>
  </data>
  <data name="PADescription" xml:space="preserve">
    <value>A parameter of GCM</value>
  </data>
  <data name="PAssociatedOrder" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="PAssociatedOrderDetail" xml:space="preserve">
    <value>Associated order of the polynomial</value>
  </data>
  <data name="PB" xml:space="preserve">
    <value>b</value>
  </data>
  <data name="PBase" xml:space="preserve">
    <value>base</value>
  </data>
  <data name="PBaseDescription" xml:space="preserve">
    <value>Base of the logarithm</value>
  </data>
  <data name="PBDescription" xml:space="preserve">
    <value>B parameter of GCM</value>
  </data>
  <data name="PBool" xml:space="preserve">
    <value>b</value>
  </data>
  <data name="PBoolDescription" xml:space="preserve">
    <value>Boolean value</value>
  </data>
  <data name="PC" xml:space="preserve">
    <value>c</value>
  </data>
  <data name="PCDescription" xml:space="preserve">
    <value>C parameter of GCM</value>
  </data>
  <data name="PCoefficient" xml:space="preserve">
    <value>c</value>
  </data>
  <data name="PCoefficientDetail" xml:space="preserve">
    <value>coefficient</value>
  </data>
  <data name="PCommands" xml:space="preserve">
    <value>commands</value>
  </data>
  <data name="PCommandsDescription" xml:space="preserve">
    <value>Commands to be calculated</value>
  </data>
  <data name="PComputeMethod" xml:space="preserve">
    <value>method</value>
  </data>
  <data name="PComputeMethodDescription" xml:space="preserve">
    <value>Computing method (jacobi | LAPACKband)</value>
  </data>
  <data name="PContext" xml:space="preserve">
    <value>context</value>
  </data>
  <data name="PContext1Description" xml:space="preserve">
    <value>Commands that will be run on the new context</value>
  </data>
  <data name="PContextDescription" xml:space="preserve">
    <value>Given context</value>
  </data>
  <data name="PCount" xml:space="preserve">
    <value>c</value>
  </data>
  <data name="PCountDescription" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="PDefaultValue" xml:space="preserve">
    <value>default</value>
  </data>
  <data name="PDefaultValueDescription" xml:space="preserve">
    <value>Default value of the variable</value>
  </data>
  <data name="PDeflate1" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="PDeflate1Description" xml:space="preserve">
    <value>Array to be deflated</value>
  </data>
  <data name="PDenominator" xml:space="preserve">
    <value>d</value>
  </data>
  <data name="PDenominatorDescription" xml:space="preserve">
    <value>Denominator</value>
  </data>
  <data name="PDiagonalValue" xml:space="preserve">
    <value>d</value>
  </data>
  <data name="PDiagonalValueDescription" xml:space="preserve">
    <value>Value(s) to be put onto diagonal</value>
  </data>
  <data name="PDividend" xml:space="preserve">
    <value>d1</value>
  </data>
  <data name="PDividendDescription" xml:space="preserve">
    <value>Dividend</value>
  </data>
  <data name="PDivisor" xml:space="preserve">
    <value>d2</value>
  </data>
  <data name="PDivisorDescription" xml:space="preserve">
    <value>Divisor</value>
  </data>
  <data name="PDynamicalSystem" xml:space="preserve">
    <value>dynamicalsystem</value>
  </data>
  <data name="PDynamicalSystemDescription" xml:space="preserve">
    <value>Dynamical system</value>
  </data>
  <data name="PEndingPoint" xml:space="preserve">
    <value>endx</value>
  </data>
  <data name="PEndingPointDetail" xml:space="preserve">
    <value>Ending point of the interval</value>
  </data>
  <data name="PEnergy" xml:space="preserve">
    <value>energy</value>
  </data>
  <data name="PEnergyDescription" xml:space="preserve">
    <value>Energy of the system</value>
  </data>
  <data name="PEVectors" xml:space="preserve">
    <value>evectors</value>
  </data>
  <data name="PEvectorsDescription" xml:space="preserve">
    <value>True if the eigenvectors is to be calculated</value>
  </data>
  <data name="PEVIndex" xml:space="preserve">
    <value>evi</value>
  </data>
  <data name="PEVIndexDescription" xml:space="preserve">
    <value>Index of an eigenvalue (eigenvector)</value>
  </data>
  <data name="PExponent" xml:space="preserve">
    <value>e</value>
  </data>
  <data name="PExponentDescription" xml:space="preserve">
    <value>Exponent</value>
  </data>
  <data name="PExpression" xml:space="preserve">
    <value>expression</value>
  </data>
  <data name="PExpressionDescription" xml:space="preserve">
    <value>Expression (or variable)</value>
  </data>
  <data name="PExtendedGCM" xml:space="preserve">
    <value>p</value>
  </data>
  <data name="PExtendedGCMDescription" xml:space="preserve">
    <value>Parameter extending mass coeficient</value>
  </data>
  <data name="PFileName" xml:space="preserve">
    <value>filename</value>
  </data>
  <data name="PFileNameDescription" xml:space="preserve">
    <value>Name of the file</value>
  </data>
  <data name="PFileType" xml:space="preserve">
    <value>filetype</value>
  </data>
  <data name="PFileTypeDescription" xml:space="preserve">
    <value>Type of the file ("binary" or "text")</value>
  </data>
  <data name="PFnName" xml:space="preserve">
    <value>fnname</value>
  </data>
  <data name="PFnNameDescription" xml:space="preserve">
    <value>Name of a function</value>
  </data>
  <data name="PFraction" xml:space="preserve">
    <value>frac</value>
  </data>
  <data name="PFractionDescription" xml:space="preserve">
    <value>Fraction</value>
  </data>
  <data name="PGamma" xml:space="preserve">
    <value>gamma</value>
  </data>
  <data name="PGammaDetail" xml:space="preserve">
    <value>Gamma coordinate of the GCM</value>
  </data>
  <data name="PGCM" xml:space="preserve">
    <value>gcm</value>
  </data>
  <data name="PGCMDescription" xml:space="preserve">
    <value>GCM class</value>
  </data>
  <data name="PGraph" xml:space="preserve">
    <value>graph</value>
  </data>
  <data name="PGraph1" xml:space="preserve">
    <value>data</value>
  </data>
  <data name="PGraphDescription" xml:space="preserve">
    <value>Graph object (created usually by graph command)</value>
  </data>
  <data name="PGraphName" xml:space="preserve">
    <value>graphname</value>
  </data>
  <data name="PGraphNameDescription" xml:space="preserve">
    <value>Name of the graph (will be shown in the graph caption)</value>
  </data>
  <data name="PHBar" xml:space="preserve">
    <value>hbar</value>
  </data>
  <data name="PHBarDescription" xml:space="preserve">
    <value>Planck constant</value>
  </data>
  <data name="PIBMChi" xml:space="preserve">
    <value>chi</value>
  </data>
  <data name="PIBMChiDescription" xml:space="preserve">
    <value>Chi parameter of IBM</value>
  </data>
  <data name="PIBMEta" xml:space="preserve">
    <value>eta</value>
  </data>
  <data name="PIBMEtaDescription" xml:space="preserve">
    <value>Eta parameter of IBM</value>
  </data>
  <data name="PIndexColumn" xml:space="preserve">
    <value>ic</value>
  </data>
  <data name="PIndexColumnDescription" xml:space="preserve">
    <value>Indexes of columns</value>
  </data>
  <data name="PIndexRow" xml:space="preserve">
    <value>ir</value>
  </data>
  <data name="PIndexRowDescription" xml:space="preserve">
    <value>Indexes of rows</value>
  </data>
  <data name="PItem" xml:space="preserve">
    <value>item</value>
  </data>
  <data name="PItemDescription" xml:space="preserve">
    <value>Item to be added to the end of the list</value>
  </data>
  <data name="PItemVectorDescription" xml:space="preserve">
    <value>Items of vector</value>
  </data>
  <data name="PK" xml:space="preserve">
    <value>k</value>
  </data>
  <data name="PKDescription" xml:space="preserve">
    <value>K (mass) parameter of GCM</value>
  </data>
  <data name="PLength" xml:space="preserve">
    <value>l</value>
  </data>
  <data name="PLengthDescription" xml:space="preserve">
    <value>Length of the vector</value>
  </data>
  <data name="PLHOOmega" xml:space="preserve">
    <value>omega</value>
  </data>
  <data name="PLHOOmegaDescription" xml:space="preserve">
    <value>Angular frequency of the LHO basis</value>
  </data>
  <data name="PLHOQuantumGCM" xml:space="preserve">
    <value>q</value>
  </data>
  <data name="PLHOQuantumGCMDescription" xml:space="preserve">
    <value>LHOQuantumGCM object</value>
  </data>
  <data name="PLowerBound" xml:space="preserve">
    <value>lb</value>
  </data>
  <data name="PLowerBoundDescription" xml:space="preserve">
    <value>Lower bound</value>
  </data>
  <data name="PMatrix" xml:space="preserve">
    <value>matrix</value>
  </data>
  <data name="PMatrixColumn" xml:space="preserve">
    <value>column</value>
  </data>
  <data name="PMatrixColumnDescription" xml:space="preserve">
    <value>Data for a column</value>
  </data>
  <data name="PMatrixDescription" xml:space="preserve">
    <value>Matrix</value>
  </data>
  <data name="PMatrixRow" xml:space="preserve">
    <value>row</value>
  </data>
  <data name="PMatrixRowDescription" xml:space="preserve">
    <value>Data for a row</value>
  </data>
  <data name="PMaxEnergy" xml:space="preserve">
    <value>emax</value>
  </data>
  <data name="PMaxEnergyDescription" xml:space="preserve">
    <value>Maximum energy (in units of hbar)</value>
  </data>
  <data name="PMean" xml:space="preserve">
    <value>mean</value>
  </data>
  <data name="PMeanDescription" xml:space="preserve">
    <value>Mean of the distribution</value>
  </data>
  <data name="PMinuend" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="PMinuendDescription" xml:space="preserve">
    <value>Minuend</value>
  </data>
  <data name="PMixingParameter" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="PMixingParameterDescription" xml:space="preserve">
    <value>Mixing parameter of the two minima</value>
  </data>
  <data name="PMultiDimensions" xml:space="preserve">
    <value>item</value>
  </data>
  <data name="PMultiDimensionsDescription" xml:space="preserve">
    <value>Object with several dimensions</value>
  </data>
  <data name="PNonDiagonalValue" xml:space="preserve">
    <value>nd</value>
  </data>
  <data name="PNonDiagonalValueDescription" xml:space="preserve">
    <value>Value to be put instead of all nondiagonal elements</value>
  </data>
  <data name="PNucleus" xml:space="preserve">
    <value>nucleus</value>
  </data>
  <data name="PNucleusDescription" xml:space="preserve">
    <value>Labeling of a nucleus</value>
  </data>
  <data name="PNumberOfPoints" xml:space="preserve">
    <value>numx</value>
  </data>
  <data name="PNumberOfPointsDetail" xml:space="preserve">
    <value>Number of points in the interval</value>
  </data>
  <data name="PNumColumns" xml:space="preserve">
    <value>ncolumns</value>
  </data>
  <data name="PNumColumnsDescription" xml:space="preserve">
    <value>Number of columns in an array of graphs</value>
  </data>
  <data name="PNumerator" xml:space="preserve">
    <value>n</value>
  </data>
  <data name="PNumeratorDescription" xml:space="preserve">
    <value>Numerator</value>
  </data>
  <data name="PNumEV" xml:space="preserve">
    <value>numev</value>
  </data>
  <data name="PNumEVDescription" xml:space="preserve">
    <value>Number of computed eigenvalues (and eigenvectors)</value>
  </data>
  <data name="PNumSteps" xml:space="preserve">
    <value>steps</value>
  </data>
  <data name="PNumStepsDescription" xml:space="preserve">
    <value>Number of steps for numerical integration</value>
  </data>
  <data name="PObjectWithBadPoints" xml:space="preserve">
    <value>o</value>
  </data>
  <data name="PObjectWithBadPointsDescription" xml:space="preserve">
    <value>Object that contains bad points (NaN, Infinity)</value>
  </data>
  <data name="POrder" xml:space="preserve">
    <value>n</value>
  </data>
  <data name="POrderDetail" xml:space="preserve">
    <value>Order of the polynomial</value>
  </data>
  <data name="PParamName" xml:space="preserve">
    <value>pname</value>
  </data>
  <data name="PParamNameDescription" xml:space="preserve">
    <value>Parameter name</value>
  </data>
  <data name="PPhaseSpacePosition" xml:space="preserve">
    <value>psposition</value>
  </data>
  <data name="PPhaseSpacePositionDescription" xml:space="preserve">
    <value>Position in the phase space</value>
  </data>
  <data name="PPoint" xml:space="preserve">
    <value>p</value>
  </data>
  <data name="PPointDescription" xml:space="preserve">
    <value>Point-type object</value>
  </data>
  <data name="PPolynomCoef" xml:space="preserve">
    <value>pcoef</value>
  </data>
  <data name="PPolynomCoefDescription" xml:space="preserve">
    <value>Coeficients of polynom</value>
  </data>
  <data name="PPositionWindow" xml:space="preserve">
    <value>position</value>
  </data>
  <data name="PPositionWindowDescription" xml:space="preserve">
    <value>Position of the window</value>
  </data>
  <data name="PPrecision" xml:space="preserve">
    <value>precision</value>
  </data>
  <data name="PPrecisionDescription" xml:space="preserve">
    <value>Precision of the calculation</value>
  </data>
  <data name="PRoot" xml:space="preserve">
    <value>r</value>
  </data>
  <data name="PRootDescription" xml:space="preserve">
    <value>Root</value>
  </data>
  <data name="PRungeKuttaDescription" xml:space="preserve">
    <value>Method of Runge-Kutta calculation (Normal | Adapted | Energy)</value>
  </data>
  <data name="PRungeKuttaMethod" xml:space="preserve">
    <value>rungekutta</value>
  </data>
  <data name="PSamplingRate" xml:space="preserve">
    <value>sr</value>
  </data>
  <data name="PSamplingRateDescription" xml:space="preserve">
    <value>Sampling rate of the signal</value>
  </data>
  <data name="PSCoef" xml:space="preserve">
    <value>s</value>
  </data>
  <data name="PSCoefDescription" xml:space="preserve">
    <value>Parameter s</value>
  </data>
  <data name="PSignal" xml:space="preserve">
    <value>signal</value>
  </data>
  <data name="PSignalDescription" xml:space="preserve">
    <value>Sampled signal </value>
  </data>
  <data name="PSize" xml:space="preserve">
    <value>size</value>
  </data>
  <data name="PSizeDescription" xml:space="preserve">
    <value>Size of the matrix</value>
  </data>
  <data name="PSizeWindow" xml:space="preserve">
    <value>size</value>
  </data>
  <data name="PSizeWindowDescription" xml:space="preserve">
    <value>Size of the window</value>
  </data>
  <data name="PSizeX" xml:space="preserve">
    <value>sizex</value>
  </data>
  <data name="PSizeXDescription" xml:space="preserve">
    <value>Number of points in the X direction</value>
  </data>
  <data name="PSizeY" xml:space="preserve">
    <value>sizey</value>
  </data>
  <data name="PSizeYDescription" xml:space="preserve">
    <value>Number of points in the Y direction</value>
  </data>
  <data name="PSort1" xml:space="preserve">
    <value>item</value>
  </data>
  <data name="PSort1Description" xml:space="preserve">
    <value>Object to be sorted</value>
  </data>
  <data name="PSort2" xml:space="preserve">
    <value>keys</value>
  </data>
  <data name="PSort2Description" xml:space="preserve">
    <value>Keys for sorting</value>
  </data>
  <data name="PSpacing" xml:space="preserve">
    <value>spacing</value>
  </data>
  <data name="PSpacingDescription" xml:space="preserve">
    <value>Distance of the neigbour components</value>
  </data>
  <data name="PSquareMatrix" xml:space="preserve">
    <value>sqrmatrix</value>
  </data>
  <data name="PSquareMatrixDescription" xml:space="preserve">
    <value>Square matrix</value>
  </data>
  <data name="PStartingPoint" xml:space="preserve">
    <value>startx</value>
  </data>
  <data name="PStartingPointDetail" xml:space="preserve">
    <value>Starting point of the interval</value>
  </data>
  <data name="PStep" xml:space="preserve">
    <value>step</value>
  </data>
  <data name="PStepDescription" xml:space="preserve">
    <value>Step if the interval</value>
  </data>
  <data name="PSymmetricMatrix" xml:space="preserve">
    <value>smatrix</value>
  </data>
  <data name="PSymmetricMatrixDescription" xml:space="preserve">
    <value>Symmetrix matrix (in other hand the matrix will be symmetrized)</value>
  </data>
  <data name="PTime" xml:space="preserve">
    <value>time</value>
  </data>
  <data name="PTimeDescription" xml:space="preserve">
    <value>Time of the evaluation</value>
  </data>
  <data name="PTimeStep" xml:space="preserve">
    <value>timestep</value>
  </data>
  <data name="PTimeStepDescription" xml:space="preserve">
    <value>Time step for the result</value>
  </data>
  <data name="PToArray1" xml:space="preserve">
    <value>item</value>
  </data>
  <data name="PToArray1Description" xml:space="preserve">
    <value>Object to be converted to array</value>
  </data>
  <data name="PType" xml:space="preserve">
    <value>type</value>
  </data>
  <data name="PTypeDescription" xml:space="preserve">
    <value>Type of a variable</value>
  </data>
  <data name="PUpperBound" xml:space="preserve">
    <value>ub</value>
  </data>
  <data name="PUpperBoundDescription" xml:space="preserve">
    <value>Upper bound</value>
  </data>
  <data name="PURI" xml:space="preserve">
    <value>uri</value>
  </data>
  <data name="PURIDescription" xml:space="preserve">
    <value>URI (link)</value>
  </data>
  <data name="PValue" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="PValueDescription" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="PVariable" xml:space="preserve">
    <value>var</value>
  </data>
  <data name="PVariableDescription" xml:space="preserve">
    <value>Variable</value>
  </data>
  <data name="PVariance" xml:space="preserve">
    <value>var</value>
  </data>
  <data name="PVarianceDescription" xml:space="preserve">
    <value>Variance of the distribution</value>
  </data>
  <data name="PVarName" xml:space="preserve">
    <value>varname</value>
  </data>
  <data name="PVarNameDescription" xml:space="preserve">
    <value>Name of the variable</value>
  </data>
  <data name="PVector" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="PVectorDescription" xml:space="preserve">
    <value>Vector</value>
  </data>
  <data name="PX" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="PXDetail" xml:space="preserve">
    <value>Variable x</value>
  </data>
  <data name="PY" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="PYDescription" xml:space="preserve">
    <value>Variable y</value>
  </data>
  <data name="SMCC_file" xml:space="preserve">
    <value>If you do want to compute an effective interaction for coupled-cluster calculations you need to specify three files, one for the interaction itself, one for the kinetic energies of all sp orbits and one for sp data declarations. These files are in turn used as input to coupled-cluster calculations.</value>
  </data>
  <data name="SMCib_choice" xml:space="preserve">
    <value>Here you specify if you wish to exclude CIB.</value>
  </data>
  <data name="SMCoulomb_included" xml:space="preserve">
    <value>Determine if you wish to include the Coulomb interaction or not.</value>
  </data>
  <data name="SMCsb_choice" xml:space="preserve">
    <value>Here you specify if you wish to exclude CSB.</value>
  </data>
  <data name="SMHbar_omega" xml:space="preserve">
    <value>The oscillator energy in MeV (We can change a look, if there is some change)</value>
  </data>
  <data name="SMHf_iterations" xml:space="preserve">
    <value>Determine whether you want to do Hartree-Fock or not. Options are 1) hf_iterations = 0 or 2) hf_iterations = 1 or any number larger than 0.</value>
  </data>
  <data name="SMHFrenorminteraction_file" xml:space="preserve">
    <value>If you do Hartree-Fock, the new interaction is given by this file.</value>
  </data>
  <data name="SMHFspdata_file" xml:space="preserve">
    <value>The new single-particle in case you do a Hartree-Fock calculation.</value>
  </data>
  <data name="SMJminmax" xml:space="preserve">
    <value>For the NN interaction you need to define the min and max value of J for the partial waves. Typical values are 0 and 6. For the argonne interactions Jmax &lt;= 4. For waves greater than J_max, the Hamiltonian is set to zero in this version of the program.</value>
  </data>
  <data name="SMLab_lmax" xml:space="preserve">
    <value>Define the maximum values of l for the model space. For square the model space 2n+l is entirely defined by lab_lmax.</value>
  </data>
  <data name="SMLab_nmax" xml:space="preserve">
    <value>Define the maximum values of n for the model space. For square the model space 2n+l is entirely defined by lab_lmax.</value>
  </data>
  <data name="SMMass_nucleus" xml:space="preserve">
    <value>Give the number of nucleons, recall that for nocore the results depend on A.</value>
  </data>
  <data name="SMMax_space" xml:space="preserve">
    <value>If you do nocore, you need also to specify the cut in 2n+l for the huge space, use 200-300 for interactions like cdbonn or argonne  use 300.</value>
  </data>
  <data name="SMOrder_of_interaction" xml:space="preserve">
    <value>You can also compute results to a given order in many-body perturbation theory, in this case to third order. For coupled-cluster you have to stay with first order.</value>
  </data>
  <data name="SMOutput_run" xml:space="preserve">
    <value>output_run is prefixed to output file for optional printouts, tests etc.</value>
  </data>
  <data name="SMPauli_operator" xml:space="preserve">
    <value>Specify the type of model space, three choices: square, triangular or wings. For the nocore calculation you can only use the triangular choice</value>
  </data>
  <data name="SMRenorminteraction_fileI" xml:space="preserve">
    <value>Input file for the renormalized NN interaction.</value>
  </data>
  <data name="SMRenorminteraction_fileO" xml:space="preserve">
    <value>Output file for the renormalized NN interaction.</value>
  </data>
  <data name="SMSpdata_fileI" xml:space="preserve">
    <value>Input file for the set of single-particle orbits, this file can be further manipulated by the effective interaction part.</value>
  </data>
  <data name="SMSpdata_fileO" xml:space="preserve">
    <value>Output file for the set of single-particle orbits, this file can be further manipulated by the effective interaction part.</value>
  </data>
  <data name="SMStartenergy_g" xml:space="preserve">
    <value>If you do the g-matrix you need to specify the number of starting energies and their corresponding values. Typically you would use some 5 or more starting energies and they should all be smaller than the binding energy of the deuteron in order to avoid poles in the computation of G(w). The present code does not allow you to use positive starting energies. Typical start and end values are listed here. Based on the endpoints of the interval, the next values are generated by the simple algo first_value + interval*i where interval is just end-start/number of values.</value>
  </data>
  <data name="SMStartingEnergy" xml:space="preserve">
    <value>You can compute the various diagrams for a given starting energy and then sum folded diagrams to infinite order. Typical starting energies for calculation should correspond to roughly the two-body energy of the valence nucleons. It should be negative since you are dealing with bound systems. If you choose just one  starting energy, then no folded diagrams are summed up.</value>
  </data>
  <data name="SMType_of_interaction" xml:space="preserve">
    <value>Determine what kind of effective interaction you want and the type of calculation. If you type shell-model, the code will produce an effective interaction taylored to the Oslo shell-model code, separated in three files, one for the pp case, one for pn and one for nn. For coupled-cluster calculations you will produce a file containing the effective interaction, one containing the kinetic energy and one for the total single-particle energies. You can also compute the binding energy of various closed core nuclei. The options are thus  1) open-diagrams for shell-model, 2) coupled-cluster and 3) core-diagrams.</value>
  </data>
  <data name="SMType_of_pot" xml:space="preserve">
    <value>Specify the type of NN interaction, here you can use Idaho-A, Idaho-B, CD-bonn, argonnev18, n3lo, argonnev8. There is an important point concerning the different interaction models. Idaho-A and Idaho-B have NO charge-symmetry (CSB) or charge-independence breaking terms (ISB). The Argonne potentials run only with full CSB and CIB. The N3LO and CD-bonn models allow you to run with or without one or both of these terms. NO CSB means that for a given set of qauntum numbers ( a specific partial wave) the neutron-neutron and proton-proton parts are identical. NO CIB  means that the proton-proton, neutron-neutron and proton-neutron interactions are equal. Isospin symmetry.</value>
  </data>
  <data name="SMType_of_renormv" xml:space="preserve">
    <value>Determine the renormalization procedure you want to do, only one at the time.</value>
  </data>
  <data name="SMVeff_xx" xml:space="preserve">
    <value>If you wan to compute an effective interaction for the Oslo shell-model codes, you need to define the names of three files, one for the proton-proton case one for the proton-neutron case and finally one for the neutron-neutron case.</value>
  </data>
  <data name="SMVlowk" xml:space="preserve">
    <value>If you do Vlowk you need to specify the number of mesh points for the model space and the large space. You need also to define the cutoff for the model in space in fm^- 1 and the in principal infinite integration limit set it to 20 fm^-1.  Recall that the NN interactions is fitted up to 350 MeV.</value>
  </data>
  <data name="ToArrayEMNotTextFile" xml:space="preserve">
    <value>Given file must be text file, not binary.</value>
  </data>
</root>