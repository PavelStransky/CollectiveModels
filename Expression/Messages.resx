<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EMBadArrayDimensions" xml:space="preserve">
    <value>The Arrays for function '{0}' do not have the same sizes (dimensions).</value>
  </data>
  <data name="EMBadArrayDimensionsDetail" xml:space="preserve">
    <value>First Array: {0}
Second Array: {1}</value>
  </data>
  <data name="EMBadAssignment" xml:space="preserve">
    <value>It is possible to assign only to variable or indexer, not to '{0}'.</value>
  </data>
  <data name="EMBadBoolValue" xml:space="preserve">
    <value>String '{0}' has not been determined as a bool value.</value>
  </data>
  <data name="EMBadGraphParamType" xml:space="preserve">
    <value>Parameter '{0}' in graph parameters has bad type.</value>
  </data>
  <data name="EMBadGraphParamTypeDetail" xml:space="preserve">
    <value>Correct type: {0}
Entered type: {1}</value>
  </data>
  <data name="EMBadHelpParameter" xml:space="preserve">
    <value>Help is provided only for functions, not for '{0}'.</value>
  </data>
  <data name="EMBadParameterName" xml:space="preserve">
    <value>The graph parameter '{0}' does not exist.</value>
  </data>
  <data name="EMBadParamType" xml:space="preserve">
    <value>Parameter '{0}' in function '{1}' has bad type.</value>
  </data>
  <data name="EMBadParamTypeDetail" xml:space="preserve">
    <value>Correct type: {0}
Entered type: {1}</value>
  </data>
  <data name="EMBadTypeName" xml:space="preserve">
    <value>String '{0}' has not been determined as a valid type.</value>
  </data>
  <data name="EMBadVariableName" xml:space="preserve">
    <value>The name '{0}' of a variable has not valid format.</value>
  </data>
  <data name="EMBadVariableNameInvalidCharacter" xml:space="preserve">
    <value>The name must not contain the character '{0}' at position {1}.</value>
  </data>
  <data name="EMBadVariableNameNoSpace" xml:space="preserve">
    <value>There must be no spaces in it.</value>
  </data>
  <data name="EMFewArgs" xml:space="preserve">
    <value>Function '{0}' has not enough arguments.</value>
  </data>
  <data name="EMFileNotExist" xml:space="preserve">
    <value>The file you '{0}' have specified does not exist.</value>
  </data>
  <data name="EMFunctionNotExist" xml:space="preserve">
    <value>Function '{0}' does not exist.</value>
  </data>
  <data name="EMInvalidBracketPosition" xml:space="preserve">
    <value>Invalid bracket position.</value>
  </data>
  <data name="EMInvalidBracketPositionDetail" xml:space="preserve">
    <value>Bracket of type '{0}' is placed on invalid position.</value>
  </data>
  <data name="EMInvalidBracketPositionDetailBracketMixing" xml:space="preserve">
    <value>Invalid mixing of brackets '{0}' and '{1}'.</value>
  </data>
  <data name="EMInvalidBracketPositionDetailCloseBeforeOpen" xml:space="preserve">
    <value>Close bracket '{0}' is placed before open bracket '{1}' or open bracket '{1}' is missing.</value>
  </data>
  <data name="EMInvalidCharacter" xml:space="preserve">
    <value>Invalid character.</value>
  </data>
  <data name="EMInvalidEndVariablePosition" xml:space="preserve">
    <value>Invalid '$' position. It can be placed only inside indexing brackets.</value>
  </data>
  <data name="EMInvalidExpressionEnd" xml:space="preserve">
    <value>The expression cannot finish with operator.</value>
  </data>
  <data name="EMInvalidNumberArgs" xml:space="preserve">
    <value>Function '{0}' has incorrect number of arguments.</value>
  </data>
  <data name="EMInvalidNumberArgsDetail" xml:space="preserve">
    <value>Arguments needed: {0}
Arguments number: {1}</value>
  </data>
  <data name="EMInvalidPosition" xml:space="preserve">
    <value>{0} is placed on invalid position.</value>
  </data>
  <data name="EMListToArrayConvert" xml:space="preserve">
    <value>List cannot be converted into an array. There are items of Incompatible types in the list.</value>
  </data>
  <data name="EMManyArgs" xml:space="preserve">
    <value>Function '{0}' has too many arguments.</value>
  </data>
  <data name="EMNoFile" xml:space="preserve">
    <value>You must specify the name of the file.</value>
  </data>
  <data name="EMNot1D" xml:space="preserve">
    <value>For the considered operation the rank of the Array must be equals to 1.</value>
  </data>
  <data name="EMNotEqualLength" xml:space="preserve">
    <value>Lengths of the given objects must be equal.</value>
  </data>
  <data name="EMNotEqualLengthDetail" xml:space="preserve">
    <value>Length of the first object: {0}
Length of the second object: {1}</value>
  </data>
  <data name="EMNotEqualTypes" xml:space="preserve">
    <value>The elements of the given list have not equal types.</value>
  </data>
  <data name="EMNotEqualVectorLength" xml:space="preserve">
    <value>Lengths of two vectors in the function '{0}' must be equal.</value>
  </data>
  <data name="EMNotEqualVectorLengthDetail" xml:space="preserve">
    <value>Length of the first vector: {0}
Length of the second vector: {1}</value>
  </data>
  <data name="EMNoVariable" xml:space="preserve">
    <value>Variable '{0}' has not been found in the context.</value>
  </data>
  <data name="EMNullValue" xml:space="preserve">
    <value>The result of a part of the expression is NULL. This cannot be assigned.</value>
  </data>
  <data name="EMObligatoryParameter" xml:space="preserve">
    <value>Parameter '{0}' (position {1}) of the function '{2}' is obligatory and cannot be omited.</value>
  </data>
  <data name="EMOperatorArrayLength" xml:space="preserve">
    <value>Using the operator '{0}' between array requires the length  ({1}, {2}) to be equals.</value>
  </data>
  <data name="EMOperatorUnknownType" xml:space="preserve">
    <value>It is not possible to use the operator '{0}' between these types: {1} {0} {2}.</value>
  </data>
  <data name="EMParametersCompatibility" xml:space="preserve">
    <value>The operator '{0}' cannot be used between types '{1}' and '{2}'.</value>
  </data>
  <data name="EMParametersDifferentLength" xml:space="preserve">
    <value>The operator '{0}' requires that all of the parameters of the type '{1}' must have the same length.</value>
  </data>
  <data name="EMParametersDifferentLengthDetail" xml:space="preserve">
    <value>Found lengths: {0}, {1}</value>
  </data>
  <data name="EMRankDetail" xml:space="preserve">
    <value>Rank of the Array = {0}.</value>
  </data>
  <data name="EMStringCharMissing" xml:space="preserve">
    <value>String character missing. String is opened, but not closed.</value>
  </data>
  <data name="EMVarCannotBeSet" xml:space="preserve">
    <value>Variable '{0}' cannot be set.</value>
  </data>
  <data name="EMZeroLengthList" xml:space="preserve">
    <value>The length of the list must not be zero.</value>
  </data>
  <data name="GPALabelColorX" xml:space="preserve">
    <value>alabelcolorx</value>
  </data>
  <data name="GPALabelColorXDescription" xml:space="preserve">
    <value>Color of the labels of the x-axis </value>
  </data>
  <data name="GPALabelColorY" xml:space="preserve">
    <value>alabelcolory</value>
  </data>
  <data name="GPALabelColorYDescription" xml:space="preserve">
    <value>Color of the labels of the y-axis </value>
  </data>
  <data name="GPALabelFSizeX" xml:space="preserve">
    <value>alabelfsizex</value>
  </data>
  <data name="GPALabelFSizeXDescription" xml:space="preserve">
    <value>Font size of the labels of the x-axis </value>
  </data>
  <data name="GPALabelFSizeY" xml:space="preserve">
    <value>alabelfsizey</value>
  </data>
  <data name="GPALabelFSizeYDescription" xml:space="preserve">
    <value>Font size of the labels of the y-axis </value>
  </data>
  <data name="GPALColorX" xml:space="preserve">
    <value>alcolorx</value>
  </data>
  <data name="GPALColorXDescription" xml:space="preserve">
    <value>Color of the line of the x-axis</value>
  </data>
  <data name="GPALColorY" xml:space="preserve">
    <value>alcolory</value>
  </data>
  <data name="GPALColorYDescription" xml:space="preserve">
    <value>Color of the line of the y-axis</value>
  </data>
  <data name="GPALWidthX" xml:space="preserve">
    <value>alwidthx</value>
  </data>
  <data name="GPALWidthXDescription" xml:space="preserve">
    <value>Width of the line of the x-axis</value>
  </data>
  <data name="GPALWidthY" xml:space="preserve">
    <value>alwidthy</value>
  </data>
  <data name="GPALWidthYDescription" xml:space="preserve">
    <value>Width of the line of the y-axis</value>
  </data>
  <data name="GPAnimCurve" xml:space="preserve">
    <value>animcurve</value>
  </data>
  <data name="GPAnimCurveDescription" xml:space="preserve">
    <value>True if the curves are to be animated</value>
  </data>
  <data name="GPAnimGroup" xml:space="preserve">
    <value>animgroup</value>
  </data>
  <data name="GPAnimGroupDescription" xml:space="preserve">
    <value>True if the groups are to be animated</value>
  </data>
  <data name="GPAPColorX" xml:space="preserve">
    <value>apcolorx</value>
  </data>
  <data name="GPAPColorXDescription" xml:space="preserve">
    <value>Color of the points of the x-axis</value>
  </data>
  <data name="GPAPColorY" xml:space="preserve">
    <value>apcolory</value>
  </data>
  <data name="GPAPColorYDescription" xml:space="preserve">
    <value>Color of the points of the y-axis</value>
  </data>
  <data name="GPAPSizeX" xml:space="preserve">
    <value>apsizex</value>
  </data>
  <data name="GPAPSizeXDescription" xml:space="preserve">
    <value>Size of the points of the x-axis</value>
  </data>
  <data name="GPAPSizeY" xml:space="preserve">
    <value>apsizey</value>
  </data>
  <data name="GPAPSizeYDescription" xml:space="preserve">
    <value>Size of the points of the y-axis</value>
  </data>
  <data name="GPAPStyleX" xml:space="preserve">
    <value>apstylex</value>
  </data>
  <data name="GPAPStyleXDescription" xml:space="preserve">
    <value>Style of the points of the x-axis</value>
  </data>
  <data name="GPAPStyleY" xml:space="preserve">
    <value>apstyley</value>
  </data>
  <data name="GPAPStyleYDescription" xml:space="preserve">
    <value>Style of the points of the y-axis</value>
  </data>
  <data name="GParamHelpCurveParam" xml:space="preserve">
    <value>Curve parameter</value>
  </data>
  <data name="GParamHelpGlobalParam" xml:space="preserve">
    <value>Global parameter</value>
  </data>
  <data name="GParamHelpGroupParam" xml:space="preserve">
    <value>Group parameter</value>
  </data>
  <data name="GPAShowB" xml:space="preserve">
    <value>ashowb</value>
  </data>
  <data name="GPAShowBDescription" xml:space="preserve">
    <value>True if the x-axis at the bottom is to be shown</value>
  </data>
  <data name="GPAShowL" xml:space="preserve">
    <value>ashowl</value>
  </data>
  <data name="GPAShowLabelX" xml:space="preserve">
    <value>ashowlabelx</value>
  </data>
  <data name="GPAShowLabelXDescription" xml:space="preserve">
    <value>True if the labels of the x-axis are to be shown</value>
  </data>
  <data name="GPAShowLabelY" xml:space="preserve">
    <value>ashowlabely</value>
  </data>
  <data name="GPAShowLabelYDescription" xml:space="preserve">
    <value>True if the labels of the y-axis are to be shown</value>
  </data>
  <data name="GPAShowLDescription" xml:space="preserve">
    <value>True if the y-axis on the left is to be shown</value>
  </data>
  <data name="GPAShowR" xml:space="preserve">
    <value>ashowr</value>
  </data>
  <data name="GPAShowRDescription" xml:space="preserve">
    <value>True if the y-axis on the right is to be shown</value>
  </data>
  <data name="GPAShowT" xml:space="preserve">
    <value>ashowt</value>
  </data>
  <data name="GPAShowTDescription" xml:space="preserve">
    <value>True if the x-axis at the top is to be shown</value>
  </data>
  <data name="GPATitleColorX" xml:space="preserve">
    <value>atitlecolorx</value>
  </data>
  <data name="GPATitleColorXDescription" xml:space="preserve">
    <value>Color of the x-axis</value>
  </data>
  <data name="GPATitleColorY" xml:space="preserve">
    <value>atitlecolory</value>
  </data>
  <data name="GPATitleColorYDescription" xml:space="preserve">
    <value>Color of the y-axis</value>
  </data>
  <data name="GPATitleFSizeX" xml:space="preserve">
    <value>atitlefsizex</value>
  </data>
  <data name="GPATitleFSizeXDescription" xml:space="preserve">
    <value>Font size of the x-axis</value>
  </data>
  <data name="GPATitleFSizeY" xml:space="preserve">
    <value>atitlefsizey</value>
  </data>
  <data name="GPATitleFSizeYDescription" xml:space="preserve">
    <value>Font size of the y-axis</value>
  </data>
  <data name="GPATitleX" xml:space="preserve">
    <value>atitlex</value>
  </data>
  <data name="GPATitleXDescription" xml:space="preserve">
    <value>Title of the x-axis</value>
  </data>
  <data name="GPATitleY" xml:space="preserve">
    <value>atitley</value>
  </data>
  <data name="GPATitleYDescription" xml:space="preserve">
    <value>Title of the y-axis</value>
  </data>
  <data name="GPBColor" xml:space="preserve">
    <value>bcolor</value>
  </data>
  <data name="GPBColorDescription" xml:space="preserve">
    <value>Color of the background</value>
  </data>
  <data name="GPBColorMax" xml:space="preserve">
    <value>bcolormax</value>
  </data>
  <data name="GPBColorMaxDescription" xml:space="preserve">
    <value>Color of the maximal value of the background image</value>
  </data>
  <data name="GPBColorMaxValue" xml:space="preserve">
    <value>bcolormaxvalue</value>
  </data>
  <data name="GPBColorMaxValueDescription" xml:space="preserve">
    <value>Maximal value of the background image</value>
  </data>
  <data name="GPBColorMiddle" xml:space="preserve">
    <value>bcolormiddle</value>
  </data>
  <data name="GPBColorMiddleDescription" xml:space="preserve">
    <value>Color of the middle value of the background image</value>
  </data>
  <data name="GPBColorMiddleValue" xml:space="preserve">
    <value>bcolormiddlevalue</value>
  </data>
  <data name="GPBColorMiddleValueDescription" xml:space="preserve">
    <value>Middle value of the background image</value>
  </data>
  <data name="GPBColorMin" xml:space="preserve">
    <value>bcolormin</value>
  </data>
  <data name="GPBColorMinDescription" xml:space="preserve">
    <value>Color of the minimal value of the background image</value>
  </data>
  <data name="GPBColorMinValue" xml:space="preserve">
    <value>bcolorminvalue</value>
  </data>
  <data name="GPBColorMinValueDescription" xml:space="preserve">
    <value>Minimal value of the background image</value>
  </data>
  <data name="GPBColorSpecial" xml:space="preserve">
    <value>bcolorspecial</value>
  </data>
  <data name="GPBColorSpecialDescription" xml:space="preserve">
    <value>Color of a special value of the background image</value>
  </data>
  <data name="GPBColorSpecialValue" xml:space="preserve">
    <value>bcolorspecialvalue</value>
  </data>
  <data name="GPBColorSpecialValueDescription" xml:space="preserve">
    <value>Special value of the background image</value>
  </data>
  <data name="GPBLegend" xml:space="preserve">
    <value>blegend</value>
  </data>
  <data name="GPBLegendDescription" xml:space="preserve">
    <value>True if the legend of the background image are to be displayed</value>
  </data>
  <data name="GPBLegendFColor" xml:space="preserve">
    <value>blegendfcolor</value>
  </data>
  <data name="GPBLegendFColorDescription" xml:space="preserve">
    <value>Font color of the legend of the background image</value>
  </data>
  <data name="GPBLegendFSize" xml:space="preserve">
    <value>blegendfsize</value>
  </data>
  <data name="GPBLegendFSizeDescription" xml:space="preserve">
    <value>Font size of the legend of the background image</value>
  </data>
  <data name="GPBLegendLabel" xml:space="preserve">
    <value>blegendlabel</value>
  </data>
  <data name="GPBLegendLabelDescription" xml:space="preserve">
    <value>True if the label of the legend is to be shown</value>
  </data>
  <data name="GPBLegendMaxY" xml:space="preserve">
    <value>blegendmaxy</value>
  </data>
  <data name="GPBLegendMaxYDescription" xml:space="preserve">
    <value>Maximal y value of the position of the legend</value>
  </data>
  <data name="GPBLegendMinY" xml:space="preserve">
    <value>blegendminy</value>
  </data>
  <data name="GPBLegendMinYDescription" xml:space="preserve">
    <value>Minimal y value of the position of the legend</value>
  </data>
  <data name="GPBLegendWidth" xml:space="preserve">
    <value>blegendwidth</value>
  </data>
  <data name="GPBLegendWidthDescription" xml:space="preserve">
    <value>Width of the legend of the background image</value>
  </data>
  <data name="GPBMaxX" xml:space="preserve">
    <value>bmaxx</value>
  </data>
  <data name="GPBMaxXDescription" xml:space="preserve">
    <value>Maximal x of the background image</value>
  </data>
  <data name="GPBMaxY" xml:space="preserve">
    <value>bmaxy</value>
  </data>
  <data name="GPBMaxYDescription" xml:space="preserve">
    <value>Maximal y of the background image</value>
  </data>
  <data name="GPBMinX" xml:space="preserve">
    <value>bminx</value>
  </data>
  <data name="GPBMinXDescription" xml:space="preserve">
    <value>Minimal x of the background image</value>
  </data>
  <data name="GPBMinY" xml:space="preserve">
    <value>bminy</value>
  </data>
  <data name="GPBMinYDescription" xml:space="preserve">
    <value>Minimal y of the background image</value>
  </data>
  <data name="GPBPSizeX" xml:space="preserve">
    <value>bpsizex</value>
  </data>
  <data name="GPBPSizeXDescription" xml:space="preserve">
    <value>Size of the points of the background image in the x-direction</value>
  </data>
  <data name="GPBPSizeY" xml:space="preserve">
    <value>bpsizey</value>
  </data>
  <data name="GPBPSizeYDescription" xml:space="preserve">
    <value>Size of the points of the background image in the y-direction</value>
  </data>
  <data name="GPCLegend" xml:space="preserve">
    <value>clegend</value>
  </data>
  <data name="GPCLegendDescription" xml:space="preserve">
    <value>True if the legend of the curves are to be displayed</value>
  </data>
  <data name="GPCLegendFColor" xml:space="preserve">
    <value>clegendfcolor</value>
  </data>
  <data name="GPCLegendFColorDescription" xml:space="preserve">
    <value>Font color of the legend of the curves</value>
  </data>
  <data name="GPCLegendFSize" xml:space="preserve">
    <value>clegendfsize</value>
  </data>
  <data name="GPCLegendFSizeDescription" xml:space="preserve">
    <value>Font size of the legend of the curves</value>
  </data>
  <data name="GPCLegendWidth" xml:space="preserve">
    <value>clegendwidth</value>
  </data>
  <data name="GPCLegendWidthDescription" xml:space="preserve">
    <value>Width of the legend of the curves</value>
  </data>
  <data name="GPClip" xml:space="preserve">
    <value>clip</value>
  </data>
  <data name="GPClipDescription" xml:space="preserve">
    <value>True if the curve should be clipped inside the graph region</value>
  </data>
  <data name="GPFPColor" xml:space="preserve">
    <value>fpcolor</value>
  </data>
  <data name="GPFPColorDescription" xml:space="preserve">
    <value>Color of the first point of the curve</value>
  </data>
  <data name="GPFPSize" xml:space="preserve">
    <value>fpsize</value>
  </data>
  <data name="GPFPSizeDescription" xml:space="preserve">
    <value>Size of the first point of the curve</value>
  </data>
  <data name="GPFPStyle" xml:space="preserve">
    <value>fpstyle</value>
  </data>
  <data name="GPFPStyleDescription" xml:space="preserve">
    <value>Style of the first point of the curve</value>
  </data>
  <data name="GPGridColorX" xml:space="preserve">
    <value>gridcolorx</value>
  </data>
  <data name="GPGridColorXDescription" xml:space="preserve">
    <value>Color of vertical grid lines</value>
  </data>
  <data name="GPGridColorY" xml:space="preserve">
    <value>gridcolory</value>
  </data>
  <data name="GPGridColorYDescription" xml:space="preserve">
    <value>Color of horizontal grid lines</value>
  </data>
  <data name="GPGridWidthX" xml:space="preserve">
    <value>gridwidthx</value>
  </data>
  <data name="GPGridWidthXDescription" xml:space="preserve">
    <value>Width of vertical grid lines</value>
  </data>
  <data name="GPGridWidthY" xml:space="preserve">
    <value>gridwidthy</value>
  </data>
  <data name="GPGridWidthYDescription" xml:space="preserve">
    <value>Width of horizontal grid lines</value>
  </data>
  <data name="GPGTitle" xml:space="preserve">
    <value>gtitle</value>
  </data>
  <data name="GPGTitleColor" xml:space="preserve">
    <value>gtitlecolor</value>
  </data>
  <data name="GPGTitleColorDescription" xml:space="preserve">
    <value>Color of the title of the group</value>
  </data>
  <data name="GPGTitleDescription" xml:space="preserve">
    <value>Title of the group</value>
  </data>
  <data name="GPGTitleFSize" xml:space="preserve">
    <value>gtitlefsize</value>
  </data>
  <data name="GPGTitleFSizeDescription" xml:space="preserve">
    <value>Font size of the title of the group</value>
  </data>
  <data name="GPInterval" xml:space="preserve">
    <value>interval</value>
  </data>
  <data name="GPIntervalDescription" xml:space="preserve">
    <value>Interval of the animation (ms)</value>
  </data>
  <data name="GPLColor" xml:space="preserve">
    <value>lcolor</value>
  </data>
  <data name="GPLColorDescription" xml:space="preserve">
    <value>Color of the line of curve</value>
  </data>
  <data name="GPLDash" xml:space="preserve">
    <value>ldash</value>
  </data>
  <data name="GPLDashDescription" xml:space="preserve">
    <value>Line dashing (dash, dot, dashdot, vector(...))</value>
  </data>
  <data name="GPLName" xml:space="preserve">
    <value>lname</value>
  </data>
  <data name="GPLNameDescription" xml:space="preserve">
    <value>Name of the curve</value>
  </data>
  <data name="GPLPColor" xml:space="preserve">
    <value>lpcolor</value>
  </data>
  <data name="GPLPColorDescription" xml:space="preserve">
    <value>Color of the last point of the curve</value>
  </data>
  <data name="GPLPSize" xml:space="preserve">
    <value>lpsize</value>
  </data>
  <data name="GPLPSizeDescription" xml:space="preserve">
    <value>Size of the last point of the curve</value>
  </data>
  <data name="GPLPStyle" xml:space="preserve">
    <value>lpstyle</value>
  </data>
  <data name="GPLPStyleDescription" xml:space="preserve">
    <value>Style of the last point of the curve</value>
  </data>
  <data name="GPLStyle" xml:space="preserve">
    <value>lstyle</value>
  </data>
  <data name="GPLStyleDescription" xml:space="preserve">
    <value>Style of the line of the curve</value>
  </data>
  <data name="GPLWidth" xml:space="preserve">
    <value>lwidth</value>
  </data>
  <data name="GPLWidthDescription" xml:space="preserve">
    <value>Width of the line of the curve</value>
  </data>
  <data name="GPMarginB" xml:space="preserve">
    <value>marginb</value>
  </data>
  <data name="GPMarginBDescription" xml:space="preserve">
    <value>Bottom margin (in promiles)</value>
  </data>
  <data name="GPMarginL" xml:space="preserve">
    <value>marginl</value>
  </data>
  <data name="GPMarginLDescription" xml:space="preserve">
    <value>Left margin (in promiles)</value>
  </data>
  <data name="GPMarginR" xml:space="preserve">
    <value>marginr</value>
  </data>
  <data name="GPMarginRDescription" xml:space="preserve">
    <value>Right margin (in promiles)</value>
  </data>
  <data name="GPMarginT" xml:space="preserve">
    <value>margint</value>
  </data>
  <data name="GPMarginTDescription" xml:space="preserve">
    <value>Top margin (in promiles)</value>
  </data>
  <data name="GPMaxX" xml:space="preserve">
    <value>maxx</value>
  </data>
  <data name="GPMaxXDescription" xml:space="preserve">
    <value>Maximal x of the group</value>
  </data>
  <data name="GPMaxY" xml:space="preserve">
    <value>maxy</value>
  </data>
  <data name="GPMaxYDescription" xml:space="preserve">
    <value>Maximal y of the group</value>
  </data>
  <data name="GPMinX" xml:space="preserve">
    <value>minx</value>
  </data>
  <data name="GPMinXDescription" xml:space="preserve">
    <value>Minimal x of the group</value>
  </data>
  <data name="GPMinY" xml:space="preserve">
    <value>miny</value>
  </data>
  <data name="GPMinYDescription" xml:space="preserve">
    <value>Minimal y of the group</value>
  </data>
  <data name="GPPColor" xml:space="preserve">
    <value>pcolor</value>
  </data>
  <data name="GPPColorDescription" xml:space="preserve">
    <value>Color of the points of the curve</value>
  </data>
  <data name="GPPColorFnc" xml:space="preserve">
    <value>pcolorfnc</value>
  </data>
  <data name="GPPColorFncDescription" xml:space="preserve">
    <value>Name of the point color function</value>
  </data>
  <data name="GPPSize" xml:space="preserve">
    <value>psize</value>
  </data>
  <data name="GPPSizeDescription" xml:space="preserve">
    <value>Size of the points of the curve</value>
  </data>
  <data name="GPPStyle" xml:space="preserve">
    <value>pstyle</value>
  </data>
  <data name="GPPStyleDescription" xml:space="preserve">
    <value>Style of the points of the curve</value>
  </data>
  <data name="GPRWindowH" xml:space="preserve">
    <value>rwindowh</value>
  </data>
  <data name="GPRWindowHDescription" xml:space="preserve">
    <value>Relative height of the window of the graph</value>
  </data>
  <data name="GPRWindowL" xml:space="preserve">
    <value>rwindowl</value>
  </data>
  <data name="GPRWindowLDescription" xml:space="preserve">
    <value>Left relative margin of the window of the graph</value>
  </data>
  <data name="GPRWindowT" xml:space="preserve">
    <value>rwindowt</value>
  </data>
  <data name="GPRWindowTDescription" xml:space="preserve">
    <value>Top relative margin of the window of the graph</value>
  </data>
  <data name="GPRWindowW" xml:space="preserve">
    <value>rwindoww</value>
  </data>
  <data name="GPRWindowWDescription" xml:space="preserve">
    <value>Relative width of the window of the graph</value>
  </data>
  <data name="GPScrollStep" xml:space="preserve">
    <value>scrollstep</value>
  </data>
  <data name="GPScrollStepDescription" xml:space="preserve">
    <value>Step between two pictures when a scroll wheel is used</value>
  </data>
  <data name="GPShift" xml:space="preserve">
    <value>shift</value>
  </data>
  <data name="GPShiftDescription" xml:space="preserve">
    <value>Shift of the curves</value>
  </data>
  <data name="GPShowGridX" xml:space="preserve">
    <value>showgridx</value>
  </data>
  <data name="GPShowGridXDescription" xml:space="preserve">
    <value>Show vertical grid</value>
  </data>
  <data name="GPShowGridY" xml:space="preserve">
    <value>showgridy</value>
  </data>
  <data name="GPShowGridYDescription" xml:space="preserve">
    <value>Show horizontal grid</value>
  </data>
  <data name="GPTitle" xml:space="preserve">
    <value>title</value>
  </data>
  <data name="GPTitleColor" xml:space="preserve">
    <value>titlecolor</value>
  </data>
  <data name="GPTitleColorDescription" xml:space="preserve">
    <value>Color of the main title of the graph</value>
  </data>
  <data name="GPTitleDescription" xml:space="preserve">
    <value>Title of the whole graph</value>
  </data>
  <data name="GPTitleFSize" xml:space="preserve">
    <value>titlefsize</value>
  </data>
  <data name="GPTitleFSizeDescription" xml:space="preserve">
    <value>Font size of the main title of the graph</value>
  </data>
  <data name="HelpAbbreviate" xml:space="preserve">
    <value>Abbreviates a fraction</value>
  </data>
  <data name="HelpAbs" xml:space="preserve">
    <value>Absolute value</value>
  </data>
  <data name="HelpAdd" xml:space="preserve">
    <value>Adds an element to the end of the list</value>
  </data>
  <data name="HelpAddBefore" xml:space="preserve">
    <value>Adds an element to the beginning of the list</value>
  </data>
  <data name="HelpAddGlobal" xml:space="preserve">
    <value>Adds an element to the end of the list in the global context</value>
  </data>
  <data name="HelpArcTan" xml:space="preserve">
    <value>Arcus tangens of the value</value>
  </data>
  <data name="HelpAssignment" xml:space="preserve">
    <value>Operator of assignment</value>
  </data>
  <data name="HelpBandWidth" xml:space="preserve">
    <value>Size of the band of a band matrix</value>
  </data>
  <data name="HelpBoolAnd" xml:space="preserve">
    <value>Operator &amp;&amp; (boolean product)</value>
  </data>
  <data name="HelpBoolOr" xml:space="preserve">
    <value>Operator || (boolean sum)</value>
  </data>
  <data name="HelpBounds" xml:space="preserve">
    <value>For given dynamical system and energy determines the bounds (higher limit) in which the solution can be found</value>
  </data>
  <data name="HelpCGCM" xml:space="preserve">
    <value>Creates a ClassicalGCM class (nonrotating case with simple kinetic term)</value>
  </data>
  <data name="HelpCGCMJ" xml:space="preserve">
    <value>Creates a ClassicalGCMJ class (case with nonzero angular momentum)</value>
  </data>
  <data name="HelpCIBM" xml:space="preserve">
    <value>Creates a ClassicalIBM class</value>
  </data>
  <data name="HelpClear" xml:space="preserve">
    <value>Erase variable from the context</value>
  </data>
  <data name="HelpClearAll" xml:space="preserve">
    <value>Delete all variables from the context</value>
  </data>
  <data name="HelpClearExcept" xml:space="preserve">
    <value>Erase all variables except specified ones from the context</value>
  </data>
  <data name="HelpClearGlobal" xml:space="preserve">
    <value>Erase variable from the global context</value>
  </data>
  <data name="HelpComputeSpectrum" xml:space="preserve">
    <value>Computes spectrum of a LHOQuantumGCM object</value>
  </data>
  <data name="HelpContext" xml:space="preserve">
    <value>Creates a new context</value>
  </data>
  <data name="HelpCos" xml:space="preserve">
    <value>Cosine of the value</value>
  </data>
  <data name="HelpCosh" xml:space="preserve">
    <value>Hyperbolic cosine of the value</value>
  </data>
  <data name="HelpCot" xml:space="preserve">
    <value>Cotangent of the value</value>
  </data>
  <data name="HelpCoth" xml:space="preserve">
    <value>Hyperbolic cotangent of the value</value>
  </data>
  <data name="HelpDeflate" xml:space="preserve">
    <value>Given array transforms into one dimensional array</value>
  </data>
  <data name="HelpDelta" xml:space="preserve">
    <value>Calculates statistics v_{i} - v_{0} - i</value>
  </data>
  <data name="HelpDenominator" xml:space="preserve">
    <value>Denominator of a fraction</value>
  </data>
  <data name="HelpDivide" xml:space="preserve">
    <value>Operator /</value>
  </data>
  <data name="HelpDivideItem" xml:space="preserve">
    <value>Operator //, items of vectors and matrices are divided among one another</value>
  </data>
  <data name="HelpDouble" xml:space="preserve">
    <value>Converts given value to a double precision number</value>
  </data>
  <data name="HelpEigenMatrix" xml:space="preserve">
    <value>Returns a matrix of components of eigenvectors arranged in matrix by indexes</value>
  </data>
  <data name="HelpEigenSystem" xml:space="preserve">
    <value>Eigensystem of a general square matrix calculated using LAPACK library;</value>
  </data>
  <data name="HelpEnergy" xml:space="preserve">
    <value>For given dynamical system and position in the phase space calculates the energy</value>
  </data>
  <data name="HelpEntropy" xml:space="preserve">
    <value>Entropy of eigenvalues</value>
  </data>
  <data name="HelpEnvelopeMatrixG" xml:space="preserve">
    <value>Generates an envelope matrix in Gaussian form (according to PRL 65, 529 (1990))</value>
  </data>
  <data name="HelpEquality" xml:space="preserve">
    <value>Operator == (equality)</value>
  </data>
  <data name="HelpEquipotential" xml:space="preserve">
    <value>For GCM system and given energy calculates equipotential contour</value>
  </data>
  <data name="HelpEvalArray" xml:space="preserve">
    <value>Array evaluation of an expression</value>
  </data>
  <data name="HelpExclude" xml:space="preserve">
    <value>From the first vector excludes values contained in the second vector</value>
  </data>
  <data name="HelpExit" xml:space="preserve">
    <value>Sends the request to close the program</value>
  </data>
  <data name="HelpExp" xml:space="preserve">
    <value>Exponential of the value</value>
  </data>
  <data name="HelpExport" xml:space="preserve">
    <value>Saves a variable to a file</value>
  </data>
  <data name="HelpExtendedCGCM1" xml:space="preserve">
    <value>Creates an ExtendedClassicalGCM class with mass proportional to beta^2</value>
  </data>
  <data name="HelpExtendedCGCM2" xml:space="preserve">
    <value>Creates an ExtendedClassicalGCM class with kinetic term proportional to beta^2</value>
  </data>
  <data name="HelpFactorial" xml:space="preserve">
    <value>Factorial of the value</value>
  </data>
  <data name="HelpFFTSpectrum" xml:space="preserve">
    <value>Gives the spectrum of a vector using Fast Fourier Transform (FFT)</value>
  </data>
  <data name="HelpFNames" xml:space="preserve">
    <value>Returns names of all registered functions which begin with specified string</value>
  </data>
  <data name="HelpFraction" xml:space="preserve">
    <value>Exact fraction</value>
  </data>
  <data name="HelpFullHelp" xml:space="preserve">
    <value>Full help for the given function (including names and types of the parameters)</value>
  </data>
  <data name="HelpGEquality" xml:space="preserve">
    <value>Operator &gt;= (greater or equal)</value>
  </data>
  <data name="HelpGetColumns" xml:space="preserve">
    <value>Returns selected columns from a matrix</value>
  </data>
  <data name="HelpGetContext" xml:space="preserve">
    <value>Returns actual context</value>
  </data>
  <data name="HelpGetGlobalContext" xml:space="preserve">
    <value>Returns global context</value>
  </data>
  <data name="HelpGetGlobalVar" xml:space="preserve">
    <value>Gets out a variable from the global context</value>
  </data>
  <data name="HelpGetRows" xml:space="preserve">
    <value>Returns selected rows from a matrix</value>
  </data>
  <data name="HelpGetVar" xml:space="preserve">
    <value>Returns a variable from a given context</value>
  </data>
  <data name="HelpGetY" xml:space="preserve">
    <value>From point or pointvector separates coordinates y</value>
  </data>
  <data name="HelpGOE" xml:space="preserve">
    <value>Value of Wigner GOE distribution</value>
  </data>
  <data name="HelpGParamHelp" xml:space="preserve">
    <value>Help to one graph parameter</value>
  </data>
  <data name="HelpGParams" xml:space="preserve">
    <value>List of all graph parameters</value>
  </data>
  <data name="HelpGraph" xml:space="preserve">
    <value>Create graph</value>
  </data>
  <data name="HelpGreater" xml:space="preserve">
    <value>Operator &gt;</value>
  </data>
  <data name="HelpGSE" xml:space="preserve">
    <value>Value of Wigner GSE distribution</value>
  </data>
  <data name="HelpGUE" xml:space="preserve">
    <value>Value of Wigner GUE distribution</value>
  </data>
  <data name="HelpHamiltonianMatrixTrace" xml:space="preserve">
    <value>Returns the trace of the Hamiltonian matrix of a quantum system</value>
  </data>
  <data name="HelpHelp" xml:space="preserve">
    <value>Help to the function</value>
  </data>
  <data name="HelpHermite" xml:space="preserve">
    <value>Value of the Hermite polynomial</value>
  </data>
  <data name="HelpHH" xml:space="preserve">
    <value>Creates a HenonHeiles class</value>
  </data>
  <data name="HelpHistogram" xml:space="preserve">
    <value>Returns the histogram of a vector (on a given interval)</value>
  </data>
  <data name="HelpImport" xml:space="preserve">
    <value>Read a file to a variable</value>
  </data>
  <data name="HelpInequality" xml:space="preserve">
    <value>Operator != (inequality)</value>
  </data>
  <data name="HelpInitialCondition" xml:space="preserve">
    <value>For given dynamical system and energy generates initial condition of a trajectory and returns it as Vector</value>
  </data>
  <data name="HelpInt" xml:space="preserve">
    <value>Converts given value to an integer number</value>
  </data>
  <data name="HelpIntegrate" xml:space="preserve">
    <value>Calculates an integral under given curve</value>
  </data>
  <data name="HelpInterval" xml:space="preserve">
    <value>Returns an array of integer numbers beginning and ending with given numbers (and with given step)</value>
  </data>
  <data name="HelpIntervalA" xml:space="preserve">
    <value>Creates points for interval (as an array)</value>
  </data>
  <data name="HelpIntervalPV" xml:space="preserve">
    <value>Creates points for interval (in the form PointVector(0, interval points))</value>
  </data>
  <data name="HelpIntervalV" xml:space="preserve">
    <value>Creates points for interval</value>
  </data>
  <data name="HelpIsEqual" xml:space="preserve">
    <value>Returns true if the values are equal within given difference</value>
  </data>
  <data name="HelpJacobi" xml:space="preserve">
    <value>Eigensystem of a matrix calculated using Jacobi method; before calculation it makes symmetrization of a matrix</value>
  </data>
  <data name="HelpJoinArray" xml:space="preserve">
    <value>Joins 1D Arrays into one array</value>
  </data>
  <data name="HelpLaguerre" xml:space="preserve">
    <value>Value of the Laguerre polynomial</value>
  </data>
  <data name="HelpLastEVElements" xml:space="preserve">
    <value>Returns last elements of components of eigenvectors; all quantum numbers are taken into account</value>
  </data>
  <data name="HelpLastEVElementsSumAbs" xml:space="preserve">
    <value>Returns absolute value of the sum of last elements of components of eigenvectors</value>
  </data>
  <data name="HelpLegendre" xml:space="preserve">
    <value>Value of the Legendre polynomial</value>
  </data>
  <data name="HelpLength" xml:space="preserve">
    <value>Returns length(s) or number of elements of a given object as an array</value>
  </data>
  <data name="HelpLEquality" xml:space="preserve">
    <value>Operator &lt;= (lesser or equal)</value>
  </data>
  <data name="HelpLesser" xml:space="preserve">
    <value>Operator &lt;</value>
  </data>
  <data name="HelpLHOQGCMA5D" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in 5D basis preparing the Hamiltonian matrix by using algebraic relations</value>
  </data>
  <data name="HelpLHOQGCMARE" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in radial 2D basis even in angular coordinate preparing the Hamiltonian matrix by using algebraic relations</value>
  </data>
  <data name="HelpLHOQGCMARO" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in radial 2D basis odd in angular coordinate preparing the Hamiltonian matrix by using algebraic relations</value>
  </data>
  <data name="HelpLHOQGCMI5D" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in 5D basis preparing the Hamiltonian matrix by integrating the basis functions in x-representation</value>
  </data>
  <data name="HelpLHOQGCMIC" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in 2D cartesian basis (direct product of two 1D harmonic oscillators) preparing the Hamiltonian matrix by integrating the basis functions in x-representation; states with all possible (also nonfysical) angular momentum are included</value>
  </data>
  <data name="HelpLHOQGCMIR" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in radial 2D basis in angular coordinate preparing the Hamiltonian matrix byintegrating the basis functions in x-representation; both odd and even states are included</value>
  </data>
  <data name="HelpLHOQGCMIRF" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in 2D radial basis preparing the Hamiltonian matrix by integrating the basis functions in x-representation; states with all possible (also nonfysical) angular momentum are included</value>
  </data>
  <data name="HelpLHOQGCMIRO" xml:space="preserve">
    <value>Creates an object that calculates eigenenergies of QuantumGCM in radial 2D basis odd in angular coordinate preparing the Hamiltonian matrix by integrating the basis functions in x-representation</value>
  </data>
  <data name="HelpLinearRegression" xml:space="preserve">
    <value>Linear regression of data (including uncertainities of estimated parameters)</value>
  </data>
  <data name="HelpLog" xml:space="preserve">
    <value>Logarithm of the value (with specified base)</value>
  </data>
  <data name="HelpLong" xml:space="preserve">
    <value>Converts given value to a long integer number (with arbitrary precision)</value>
  </data>
  <data name="HelpMatrixColumn" xml:space="preserve">
    <value>Given vectors put onto columns of a matrix</value>
  </data>
  <data name="HelpMatrixRow" xml:space="preserve">
    <value>Given vectors put onto rows of a matrix</value>
  </data>
  <data name="HelpMCD" xml:space="preserve">
    <value>Maximal common divisor of given numbers</value>
  </data>
  <data name="HelpMean" xml:space="preserve">
    <value>Calculates mean of a vector</value>
  </data>
  <data name="HelpMerge" xml:space="preserve">
    <value>Merges lists into one list</value>
  </data>
  <data name="HelpMinus" xml:space="preserve">
    <value>Operator minus (subtraction)</value>
  </data>
  <data name="HelpMute" xml:space="preserve">
    <value>Mutes the output of a function</value>
  </data>
  <data name="HelpNew" xml:space="preserve">
    <value>Creates new object of a given type</value>
  </data>
  <data name="HelpNorm" xml:space="preserve">
    <value>Norm of the vector</value>
  </data>
  <data name="HelpNotEvalArray" xml:space="preserve">
    <value>Disable the array evaluation of the following expression</value>
  </data>
  <data name="HelpNuDatReadKnownIsotopes" xml:space="preserve">
    <value>Reads all known isotopes from http://www-nds.iaea.org</value>
  </data>
  <data name="HelpNuDatReadNucleus" xml:space="preserve">
    <value>Reads all accessible pieces of information about a nucleus from http://www-nds.iaea.org</value>
  </data>
  <data name="HelpNumerator" xml:space="preserve">
    <value>Numerator of a fraction</value>
  </data>
  <data name="HelpOpJoin" xml:space="preserve">
    <value>Operator ~ (joins numbers together into vector, joins strings and lists)</value>
  </data>
  <data name="HelpPCN" xml:space="preserve">
    <value>Number of principal components of eigenvector</value>
  </data>
  <data name="HelpPeresInvariantG" xml:space="preserve">
    <value>Creates matrix with Poincaré section by the plane y = 0 for 2D system; contours are determined by time averaged Peres invariant</value>
  </data>
  <data name="HelpPi" xml:space="preserve">
    <value>Value of Pi number</value>
  </data>
  <data name="HelpPlus" xml:space="preserve">
    <value>Operator +</value>
  </data>
  <data name="HelpPoincare" xml:space="preserve">
    <value>Calculates a Poincaré section for given energy or trajectory given by its initial condition</value>
  </data>
  <data name="HelpPoint" xml:space="preserve">
    <value>Creates a point from two given numbers</value>
  </data>
  <data name="HelpPointVector" xml:space="preserve">
    <value>Converts given data to a pointvector</value>
  </data>
  <data name="HelpPoisson" xml:space="preserve">
    <value>Value of Poisson distribution</value>
  </data>
  <data name="HelpPolynom" xml:space="preserve">
    <value>Data of input vector interprets as coeficients of polynom and return its value</value>
  </data>
  <data name="HelpPolynomIntegrate" xml:space="preserve">
    <value>Data of input vector interprets as coeficients of polynom and return its integral</value>
  </data>
  <data name="HelpPotentialRoots" xml:space="preserve">
    <value>For GCM system solves the equation Potential == Given energy</value>
  </data>
  <data name="HelpPower" xml:space="preserve">
    <value>Operator ^ (power)</value>
  </data>
  <data name="HelpPowerItem" xml:space="preserve">
    <value>Operator ^^, power is calculated among the items of vectors and matrices</value>
  </data>
  <data name="HelpPrimes" xml:space="preserve">
    <value>Returns given number of primes</value>
  </data>
  <data name="HelpPrint" xml:space="preserve">
    <value>Writes a text (or variable) to the writer</value>
  </data>
  <data name="HelpPrintLine" xml:space="preserve">
    <value>Writes a text (or variable) to the writer and begins new line</value>
  </data>
  <data name="HelpPT1" xml:space="preserve">
    <value>Creates a class PT1 for studying quantum phase transitions</value>
  </data>
  <data name="HelpPT1Potential" xml:space="preserve">
    <value>Value of the potential of the system PT1</value>
  </data>
  <data name="HelpPT2" xml:space="preserve">
    <value>Creates a class PT2 for studying quantum phase transitions</value>
  </data>
  <data name="HelpPT2Potential" xml:space="preserve">
    <value>Value of the potential of the system PT2</value>
  </data>
  <data name="HelpRandomG" xml:space="preserve">
    <value>Generates Gaussian distributed random numbers with given variance and mean</value>
  </data>
  <data name="HelpRandomGOE" xml:space="preserve">
    <value>Value with Wigner GOE distribution</value>
  </data>
  <data name="HelpRandomGSE" xml:space="preserve">
    <value>Value with Wigner GSE distribution</value>
  </data>
  <data name="HelpRandomGUE" xml:space="preserve">
    <value>Value with Wigner GUE distribution</value>
  </data>
  <data name="HelpRandomMatrixSG" xml:space="preserve">
    <value>Generates a symmetric matrix with Gaussian distributed components (according to PRL 65, 529 (1990))</value>
  </data>
  <data name="HelpRandomPoisson" xml:space="preserve">
    <value>Value with Poisson distribution</value>
  </data>
  <data name="HelpRandomU" xml:space="preserve">
    <value>Generates uniformly distributed random numbers between given limits</value>
  </data>
  <data name="HelpRandomVectorG" xml:space="preserve">
    <value>Generates a vector with Gaussian distributed components</value>
  </data>
  <data name="HelpRandomVectorGOE" xml:space="preserve">
    <value>Generates a vector with Wigner GOE distributed components</value>
  </data>
  <data name="HelpRandomVectorGSE" xml:space="preserve">
    <value>Generates a vector with Wigner GSE distributed components</value>
  </data>
  <data name="HelpRandomVectorGUE" xml:space="preserve">
    <value>Generates a vector with Wigner GUE distributed components</value>
  </data>
  <data name="HelpRandomVectorPoisson" xml:space="preserve">
    <value>Generates a vector with Poisson distributed components</value>
  </data>
  <data name="HelpRandomVectorU" xml:space="preserve">
    <value>Generates a vector with uniformly distributed components</value>
  </data>
  <data name="HelpRegression" xml:space="preserve">
    <value>Polynomial regression of data</value>
  </data>
  <data name="HelpRemoveBadPoints" xml:space="preserve">
    <value>Removes bad points (NaN, Infinity) from Vector or PointVector</value>
  </data>
  <data name="HelpRepaceValue" xml:space="preserve">
    <value>Replaces a specified value with other one</value>
  </data>
  <data name="HelpReplaceBadPoints" xml:space="preserve">
    <value>Replaces bad points (NaN, Infinity) in Vector or PointVector by a given value</value>
  </data>
  <data name="HelpReplaceInterval" xml:space="preserve">
    <value>Replaces values from specified interval with new value</value>
  </data>
  <data name="HelpRWF5DLHO" xml:space="preserve">
    <value>Value of the radial part of basis wave function for 5D LHO</value>
  </data>
  <data name="HelpSafeValue" xml:space="preserve">
    <value>Gets the value of the variable from the context; If there the variable does not exist, returns default value.</value>
  </data>
  <data name="HelpSALI" xml:space="preserve">
    <value>Calculates SALI dependence on time for given trajectory</value>
  </data>
  <data name="HelpSALIG" xml:space="preserve">
    <value>Creates matrix with Poincaré section by the plane y = 0 for 2D system; contours are determined by SALI</value>
  </data>
  <data name="HelpIsRegularTrajectory" xml:space="preserve">
    <value>Distinguishes using SALI whether the trajectory is regular (1) or chaotic (0)</value>
  </data>
  <data name="HelpSave" xml:space="preserve">
    <value>Saves current document into a file</value>
  </data>
  <data name="HelpPeresInvariant" xml:space="preserve">
    <value>Returns the Peres invariant of a quantum system</value>
  </data>
  <data name="HelpSeparator" xml:space="preserve">
    <value>Operator ; (separator)</value>
  </data>
  <data name="HelpSetContext" xml:space="preserve">
    <value>Sets a new context</value>
  </data>
  <data name="HelpSetDiagonal" xml:space="preserve">
    <value>Given value or Vector of values put onto diagonal of square matrix</value>
  </data>
  <data name="HelpSetGlobalContext" xml:space="preserve">
    <value>Sets a new global context</value>
  </data>
  <data name="HelpSetGlobalVar" xml:space="preserve">
    <value>Sets a variable into the global context</value>
  </data>
  <data name="HelpSetGraphParams" xml:space="preserve">
    <value>Sets new parameters to a graph</value>
  </data>
  <data name="HelpSetNonDiagonal" xml:space="preserve">
    <value>Given value put onto nondiagonal elements of square matrix</value>
  </data>
  <data name="HelpShow" xml:space="preserve">
    <value>Shows a graph</value>
  </data>
  <data name="HelpSin" xml:space="preserve">
    <value>Sine of the value</value>
  </data>
  <data name="HelpSinh" xml:space="preserve">
    <value>Hyperbolic sine of the value</value>
  </data>
  <data name="HelpSmooth" xml:space="preserve">
    <value>Smooths a vector</value>
  </data>
  <data name="HelpSort" xml:space="preserve">
    <value>Ascending sort of the object (with keys according to the sorting will be done)</value>
  </data>
  <data name="HelpSortDesc" xml:space="preserve">
    <value>Descending sort of the object (with keys according to the sorting will be done)</value>
  </data>
  <data name="HelpSpacing" xml:space="preserve">
    <value>Calculates neighbour spacing of vector components v_{i+j} - v_{i}</value>
  </data>
  <data name="HelpSqrt" xml:space="preserve">
    <value>Square root of the value</value>
  </data>
  <data name="HelpSum" xml:space="preserve">
    <value>Sum of all elements in the object</value>
  </data>
  <data name="HelpSumAbs" xml:space="preserve">
    <value>Sum of absolute values of all elements in the object</value>
  </data>
  <data name="HelpSumSquare" xml:space="preserve">
    <value>Sum of squares of values of all elements in the object</value>
  </data>
  <data name="HelpTan" xml:space="preserve">
    <value>Tangent of the value</value>
  </data>
  <data name="HelpTanh" xml:space="preserve">
    <value>Hyperbolic tangent of the value</value>
  </data>
  <data name="HelpTestWWW" xml:space="preserve">
    <value>Tries to read text from specified URI</value>
  </data>
  <data name="HelpTime" xml:space="preserve">
    <value>Returns the duration of the calculation</value>
  </data>
  <data name="HelpTimeNow" xml:space="preserve">
    <value>Returns the current time</value>
  </data>
  <data name="HelpTimes" xml:space="preserve">
    <value>Operator *</value>
  </data>
  <data name="HelpTimesItem" xml:space="preserve">
    <value>Operator **, items of vectors and matrices are multiplied among one another</value>
  </data>
  <data name="HelpToArray" xml:space="preserve">
    <value>Given non-array object change to an array.</value>
  </data>
  <data name="HelpTrace" xml:space="preserve">
    <value>Trace of a given matrix</value>
  </data>
  <data name="HelpTrajectoryM" xml:space="preserve">
    <value>For given energy or a trajectory given by its initial condition calculates the trajectory; the result is returned by a matrix in the form (time, x, y, ..., px, py, ...)</value>
  </data>
  <data name="HelpTrajectoryP" xml:space="preserve">
    <value>    For given energy or a trajectory given by its initial condition calculates the trajectory; the x, y coordinates of the result is returned by a PointVector</value>
  </data>
  <data name="HelpType" xml:space="preserve">
    <value>Type of the value</value>
  </data>
  <data name="HelpUseContext" xml:space="preserve">
    <value>Uses the given context for specified calculations</value>
  </data>
  <data name="HelpVariance" xml:space="preserve">
    <value>Calculates variance of a vector</value>
  </data>
  <data name="HelpVector" xml:space="preserve">
    <value>Convert given data to a vector</value>
  </data>
  <data name="HelpVMatrix" xml:space="preserve">
    <value>cal_{V} matrix (PRL 98, 234301 (2007), expression (27))</value>
  </data>
  <data name="HelpVMatrixZero" xml:space="preserve">
    <value>For GCM system and given energy calculates the line where the given eigenvalue of V matrix is zero</value>
  </data>
  <data name="MsgBytes" xml:space="preserve">
    <value>{0} Bytes</value>
  </data>
  <data name="MsgParsing" xml:space="preserve">
    <value>Parsing...</value>
  </data>
  <data name="MsgReadingPage" xml:space="preserve">
    <value>Reading page...</value>
  </data>
  <data name="NuDatReadNucleusPage" xml:space="preserve">
    <value>Reading page of nucleus {0}...</value>
  </data>
  <data name="P1Assignment" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="P1AssignmentDescription" xml:space="preserve">
    <value>Variable name or indexed item</value>
  </data>
  <data name="P1Exclude" xml:space="preserve">
    <value>exc</value>
  </data>
  <data name="P1ExcludeDescription" xml:space="preserve">
    <value>Values to be excluded</value>
  </data>
  <data name="P1GraphDescription" xml:space="preserve">
    <value>Data for curves</value>
  </data>
  <data name="P1Histogram" xml:space="preserve">
    <value>bin</value>
  </data>
  <data name="P1HistogramDescription" xml:space="preserve">
    <value>Number of bins or an interval</value>
  </data>
  <data name="P1Integrate" xml:space="preserve">
    <value>curve</value>
  </data>
  <data name="P1IntegrateDescription" xml:space="preserve">
    <value>Curve</value>
  </data>
  <data name="P1JoinArray" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="P1JoinArrayDescription" xml:space="preserve">
    <value>Data to be joined</value>
  </data>
  <data name="P1Merge" xml:space="preserve">
    <value>l</value>
  </data>
  <data name="P1MergeDescription" xml:space="preserve">
    <value>Lists to be merged</value>
  </data>
  <data name="P1Norm" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="P1NormDescription" xml:space="preserve">
    <value>Vector which norm is calculated</value>
  </data>
  <data name="P1PointVector" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="P1PointVectorDescription" xml:space="preserve">
    <value>Values of the pointvector</value>
  </data>
  <data name="P1Regression" xml:space="preserve">
    <value>pv</value>
  </data>
  <data name="P1RegressionDescription" xml:space="preserve">
    <value>Input data for the regression</value>
  </data>
  <data name="P2Assignment" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="P2AssignmentDescription" xml:space="preserve">
    <value>Value to be assigned</value>
  </data>
  <data name="P2ContextDescription" xml:space="preserve">
    <value>Name of a variable that will be copied from actual context</value>
  </data>
  <data name="P2Graph" xml:space="preserve">
    <value>background</value>
  </data>
  <data name="P2GraphDescription" xml:space="preserve">
    <value>Data for background (mesh graph)</value>
  </data>
  <data name="P2Norm" xml:space="preserve">
    <value>normpow</value>
  </data>
  <data name="P2NormDescription" xml:space="preserve">
    <value>Power of items</value>
  </data>
  <data name="P2Poincare" xml:space="preserve">
    <value>ic</value>
  </data>
  <data name="P2PoincareDescription" xml:space="preserve">
    <value>Initial condition of a trajectory or energy if the trajectory is randomly chosen</value>
  </data>
  <data name="P2PointVector" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="P2PointVectorDescription" xml:space="preserve">
    <value>Y values of the pointvector</value>
  </data>
  <data name="P3Equipotential" xml:space="preserve">
    <value>points</value>
  </data>
  <data name="P3EquipotentialDescription" xml:space="preserve">
    <value>Number of points of the equipotential contour</value>
  </data>
  <data name="P3Graph" xml:space="preserve">
    <value>error</value>
  </data>
  <data name="P3GraphDescription" xml:space="preserve">
    <value>Error bars for data</value>
  </data>
  <data name="P3InitialCondition" xml:space="preserve">
    <value>param</value>
  </data>
  <data name="P3InitialConditionDescription" xml:space="preserve">
    <value>Additional parameter (angular momentum)</value>
  </data>
  <data name="P3LastEVElements" xml:space="preserve">
    <value>bindex</value>
  </data>
  <data name="P3LastEVElementsDescription" xml:space="preserve">
    <value>Order of the elements from the back</value>
  </data>
  <data name="PPSPoints" xml:space="preserve">
    <value>points</value>
  </data>
  <data name="PPSPointsDescription" xml:space="preserve">
    <value>Number of points of the final section</value>
  </data>
  <data name="P4Graph" xml:space="preserve">
    <value>pglobal</value>
  </data>
  <data name="P4GraphDescription" xml:space="preserve">
    <value>Parameters for the whole graph</value>
  </data>
  <data name="P4Poincare" xml:space="preserve">
    <value>sectionplane</value>
  </data>
  <data name="P4PoincareDescription" xml:space="preserve">
    <value>Plane of the section</value>
  </data>
  <data name="P5Graph" xml:space="preserve">
    <value>pgroups</value>
  </data>
  <data name="P5GraphDescription" xml:space="preserve">
    <value>Parameters for groups of data</value>
  </data>
  <data name="P5Poincare" xml:space="preserve">
    <value>c1</value>
  </data>
  <data name="P5PoincareDescription" xml:space="preserve">
    <value>First coordinate of the phase space which will be stored</value>
  </data>
  <data name="P6Graph" xml:space="preserve">
    <value>pcurves</value>
  </data>
  <data name="P6GraphDescription" xml:space="preserve">
    <value>Parameters for curves</value>
  </data>
  <data name="P6Poincare" xml:space="preserve">
    <value>c2</value>
  </data>
  <data name="P6PoincareDescription" xml:space="preserve">
    <value>Second coordinate of the phase space which will be stored</value>
  </data>
  <data name="PA" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="PA0" xml:space="preserve">
    <value>a0</value>
  </data>
  <data name="PA0Description" xml:space="preserve">
    <value>Stiffness of the harmonic basis</value>
  </data>
  <data name="PAddend" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="PAddendDescription" xml:space="preserve">
    <value>addend</value>
  </data>
  <data name="PADescription" xml:space="preserve">
    <value>A parameter of GCM</value>
  </data>
  <data name="PAssociatedOrder" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="PAssociatedOrderDetail" xml:space="preserve">
    <value>Associated order of the polynomial</value>
  </data>
  <data name="PB" xml:space="preserve">
    <value>b</value>
  </data>
  <data name="PBase" xml:space="preserve">
    <value>base</value>
  </data>
  <data name="PBaseDescription" xml:space="preserve">
    <value>Base of the logarithm</value>
  </data>
  <data name="PBDescription" xml:space="preserve">
    <value>B parameter of GCM</value>
  </data>
  <data name="PBool" xml:space="preserve">
    <value>b</value>
  </data>
  <data name="PBoolDescription" xml:space="preserve">
    <value>Boolean value</value>
  </data>
  <data name="PC" xml:space="preserve">
    <value>c</value>
  </data>
  <data name="PCDescription" xml:space="preserve">
    <value>C parameter of GCM</value>
  </data>
  <data name="PCoefficient" xml:space="preserve">
    <value>c</value>
  </data>
  <data name="PCoefficientDetail" xml:space="preserve">
    <value>coefficient</value>
  </data>
  <data name="PCommands" xml:space="preserve">
    <value>commands</value>
  </data>
  <data name="PCommandsDescription" xml:space="preserve">
    <value>Commands to be calculated</value>
  </data>
  <data name="PComputeMethod" xml:space="preserve">
    <value>method</value>
  </data>
  <data name="PComputeMethodDescription" xml:space="preserve">
    <value>Computing method (jacobi | LAPACKband)</value>
  </data>
  <data name="PContext" xml:space="preserve">
    <value>context</value>
  </data>
  <data name="PContext1Description" xml:space="preserve">
    <value>Commands that will be run on the new context</value>
  </data>
  <data name="PContextDescription" xml:space="preserve">
    <value>Given context</value>
  </data>
  <data name="PCount" xml:space="preserve">
    <value>c</value>
  </data>
  <data name="PCountDescription" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="PDefaultValue" xml:space="preserve">
    <value>default</value>
  </data>
  <data name="PDefaultValueDescription" xml:space="preserve">
    <value>Default value of the variable</value>
  </data>
  <data name="PDeflate" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="PDeflateDescription" xml:space="preserve">
    <value>Array to be deflated</value>
  </data>
  <data name="PDenominator" xml:space="preserve">
    <value>d</value>
  </data>
  <data name="PDenominatorDescription" xml:space="preserve">
    <value>Denominator</value>
  </data>
  <data name="PDiagonalValue" xml:space="preserve">
    <value>d</value>
  </data>
  <data name="PDiagonalValueDescription" xml:space="preserve">
    <value>Value(s) to be put onto diagonal</value>
  </data>
  <data name="PDividend" xml:space="preserve">
    <value>d1</value>
  </data>
  <data name="PDividendDescription" xml:space="preserve">
    <value>Dividend</value>
  </data>
  <data name="PDivisor" xml:space="preserve">
    <value>d2</value>
  </data>
  <data name="PDivisorDescription" xml:space="preserve">
    <value>Divisor</value>
  </data>
  <data name="PDynamicalSystem" xml:space="preserve">
    <value>dynamicalsystem</value>
  </data>
  <data name="PDynamicalSystemDescription" xml:space="preserve">
    <value>Dynamical system</value>
  </data>
  <data name="PEndingPoint" xml:space="preserve">
    <value>endx</value>
  </data>
  <data name="PEndingPointDetail" xml:space="preserve">
    <value>Ending point of the interval</value>
  </data>
  <data name="PEnergy" xml:space="preserve">
    <value>energy</value>
  </data>
  <data name="PEnergyDescription" xml:space="preserve">
    <value>Energy of the system</value>
  </data>
  <data name="PError" xml:space="preserve">
    <value>e</value>
  </data>
  <data name="PErrorDescription" xml:space="preserve">
    <value>Maximal error</value>
  </data>
  <data name="PEVectors" xml:space="preserve">
    <value>evectors</value>
  </data>
  <data name="PEvectorsDescription" xml:space="preserve">
    <value>True if the eigenvectors is to be calculated</value>
  </data>
  <data name="PEVIndex" xml:space="preserve">
    <value>evi</value>
  </data>
  <data name="PEVIndexDescription" xml:space="preserve">
    <value>Index of an eigenvalue (eigenvector) / quantum numbers</value>
  </data>
  <data name="PExponent" xml:space="preserve">
    <value>e</value>
  </data>
  <data name="PExponentDescription" xml:space="preserve">
    <value>Exponent</value>
  </data>
  <data name="PExpression" xml:space="preserve">
    <value>expression</value>
  </data>
  <data name="PExpressionDescription" xml:space="preserve">
    <value>Expression (or variable)</value>
  </data>
  <data name="PExtendedGCM" xml:space="preserve">
    <value>p</value>
  </data>
  <data name="PExtendedGCMDescription" xml:space="preserve">
    <value>Parameter extending mass coeficient</value>
  </data>
  <data name="PFileName" xml:space="preserve">
    <value>filename</value>
  </data>
  <data name="PFileNameDescription" xml:space="preserve">
    <value>Name of the file</value>
  </data>
  <data name="PFileType" xml:space="preserve">
    <value>filetype</value>
  </data>
  <data name="PFileTypeDescription" xml:space="preserve">
    <value>Type of the file ("binary" or "text")</value>
  </data>
  <data name="PFnName" xml:space="preserve">
    <value>fnname</value>
  </data>
  <data name="PFnNameDescription" xml:space="preserve">
    <value>Name of a function</value>
  </data>
  <data name="PFraction" xml:space="preserve">
    <value>frac</value>
  </data>
  <data name="PFractionDescription" xml:space="preserve">
    <value>Fraction</value>
  </data>
  <data name="PGamma" xml:space="preserve">
    <value>gamma</value>
  </data>
  <data name="PGammaDetail" xml:space="preserve">
    <value>Gamma coordinate of the GCM</value>
  </data>
  <data name="PGCM" xml:space="preserve">
    <value>gcm</value>
  </data>
  <data name="PGCMDescription" xml:space="preserve">
    <value>GCM class</value>
  </data>
  <data name="PGraph" xml:space="preserve">
    <value>graph</value>
  </data>
  <data name="PGraph1" xml:space="preserve">
    <value>data</value>
  </data>
  <data name="PGraphDescription" xml:space="preserve">
    <value>Graph object (created usually by graph command)</value>
  </data>
  <data name="PGraphName" xml:space="preserve">
    <value>graphname</value>
  </data>
  <data name="PGraphNameDescription" xml:space="preserve">
    <value>Name of the graph (will be shown in the graph caption)</value>
  </data>
  <data name="PHBar" xml:space="preserve">
    <value>hbar</value>
  </data>
  <data name="PHBarDescription" xml:space="preserve">
    <value>Planck constant</value>
  </data>
  <data name="PIBMChi" xml:space="preserve">
    <value>chi</value>
  </data>
  <data name="PIBMChiDescription" xml:space="preserve">
    <value>Chi parameter of IBM</value>
  </data>
  <data name="PIBMEta" xml:space="preserve">
    <value>eta</value>
  </data>
  <data name="PIBMEtaDescription" xml:space="preserve">
    <value>Eta parameter of IBM</value>
  </data>
  <data name="PIndexColumn" xml:space="preserve">
    <value>ic</value>
  </data>
  <data name="PIndexColumnDescription" xml:space="preserve">
    <value>Indexes of columns</value>
  </data>
  <data name="PIndexRow" xml:space="preserve">
    <value>ir</value>
  </data>
  <data name="PIndexRowDescription" xml:space="preserve">
    <value>Indexes of rows</value>
  </data>
  <data name="PItem" xml:space="preserve">
    <value>item</value>
  </data>
  <data name="PItemDescription" xml:space="preserve">
    <value>Item to be added to the end of the list</value>
  </data>
  <data name="PItemVectorDescription" xml:space="preserve">
    <value>Items of vector</value>
  </data>
  <data name="PK" xml:space="preserve">
    <value>k</value>
  </data>
  <data name="PKDescription" xml:space="preserve">
    <value>K (mass) parameter of GCM</value>
  </data>
  <data name="PLength" xml:space="preserve">
    <value>l</value>
  </data>
  <data name="PLengthDescription" xml:space="preserve">
    <value>Length of the vector</value>
  </data>
  <data name="PLHOOmega" xml:space="preserve">
    <value>omega</value>
  </data>
  <data name="PLHOOmegaDescription" xml:space="preserve">
    <value>Angular frequency of the LHO basis</value>
  </data>
  <data name="PLHOQuantumGCM" xml:space="preserve">
    <value>q</value>
  </data>
  <data name="PLHOQuantumGCMDescription" xml:space="preserve">
    <value>LHOQuantumGCM object</value>
  </data>
  <data name="PLowerBound" xml:space="preserve">
    <value>lb</value>
  </data>
  <data name="PLowerBoundDescription" xml:space="preserve">
    <value>Lower bound</value>
  </data>
  <data name="PMatrix" xml:space="preserve">
    <value>matrix</value>
  </data>
  <data name="PMatrixColumn" xml:space="preserve">
    <value>column</value>
  </data>
  <data name="PMatrixColumnDescription" xml:space="preserve">
    <value>Data for a column</value>
  </data>
  <data name="PMatrixDescription" xml:space="preserve">
    <value>Matrix</value>
  </data>
  <data name="PMatrixRow" xml:space="preserve">
    <value>row</value>
  </data>
  <data name="PMatrixRowDescription" xml:space="preserve">
    <value>Data for a row</value>
  </data>
  <data name="PMaxEnergy" xml:space="preserve">
    <value>emax</value>
  </data>
  <data name="PMaxEnergyDescription" xml:space="preserve">
    <value>Maximum energy of the eigenstate and additional parameters</value>
  </data>
  <data name="PMean" xml:space="preserve">
    <value>mean</value>
  </data>
  <data name="PMeanDescription" xml:space="preserve">
    <value>Mean of the distribution</value>
  </data>
  <data name="PMinuend" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="PMinuendDescription" xml:space="preserve">
    <value>Minuend</value>
  </data>
  <data name="PMixingParameter" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="PMixingParameterDescription" xml:space="preserve">
    <value>Mixing parameter of the two minima</value>
  </data>
  <data name="PMultiDimensions" xml:space="preserve">
    <value>item</value>
  </data>
  <data name="PMultiDimensionsDescription" xml:space="preserve">
    <value>Object with several dimensions</value>
  </data>
  <data name="PNewValue" xml:space="preserve">
    <value>new</value>
  </data>
  <data name="PNewValueDescription" xml:space="preserve">
    <value>New value</value>
  </data>
  <data name="PNonDiagonalValue" xml:space="preserve">
    <value>nd</value>
  </data>
  <data name="PNonDiagonalValueDescription" xml:space="preserve">
    <value>Value to be put instead of all nondiagonal elements</value>
  </data>
  <data name="PNucleus" xml:space="preserve">
    <value>nucleus</value>
  </data>
  <data name="PNucleusDescription" xml:space="preserve">
    <value>Labeling of a nucleus</value>
  </data>
  <data name="PNumberOfPoints" xml:space="preserve">
    <value>numx</value>
  </data>
  <data name="PNumberOfPointsDetail" xml:space="preserve">
    <value>Number of points in the interval</value>
  </data>
  <data name="PNumColumns" xml:space="preserve">
    <value>ncolumns</value>
  </data>
  <data name="PNumColumnsDescription" xml:space="preserve">
    <value>Number of columns in an array of graphs</value>
  </data>
  <data name="PNumerator" xml:space="preserve">
    <value>n</value>
  </data>
  <data name="PNumeratorDescription" xml:space="preserve">
    <value>Numerator</value>
  </data>
  <data name="PNumEV" xml:space="preserve">
    <value>numev</value>
  </data>
  <data name="PNumEVDescription" xml:space="preserve">
    <value>Number of computed eigenvalues (and eigenvectors)</value>
  </data>
  <data name="PNumSteps" xml:space="preserve">
    <value>steps</value>
  </data>
  <data name="PNumStepsDescription" xml:space="preserve">
    <value>Number of steps for numerical integration</value>
  </data>
  <data name="PObjectWithBadPoints" xml:space="preserve">
    <value>o</value>
  </data>
  <data name="PObjectWithBadPointsDescription" xml:space="preserve">
    <value>Object that contains bad points (NaN, Infinity)</value>
  </data>
  <data name="POldValue" xml:space="preserve">
    <value>old</value>
  </data>
  <data name="POldValueDescription" xml:space="preserve">
    <value>Old value</value>
  </data>
  <data name="POldValueMax" xml:space="preserve">
    <value>oldmax</value>
  </data>
  <data name="POldValueMaxDescription" xml:space="preserve">
    <value>Maximal value to be replaced</value>
  </data>
  <data name="POldValueMin" xml:space="preserve">
    <value>oldmin</value>
  </data>
  <data name="POldValueMinDescription" xml:space="preserve">
    <value>Minimal value to be replaced</value>
  </data>
  <data name="POrder" xml:space="preserve">
    <value>n</value>
  </data>
  <data name="POrderDetail" xml:space="preserve">
    <value>Order of the polynomial</value>
  </data>
  <data name="PParamName" xml:space="preserve">
    <value>pname</value>
  </data>
  <data name="PParamNameDescription" xml:space="preserve">
    <value>Parameter name</value>
  </data>
  <data name="PPhaseSpacePosition" xml:space="preserve">
    <value>psposition</value>
  </data>
  <data name="PPhaseSpacePositionDescription" xml:space="preserve">
    <value>Position in the phase space</value>
  </data>
  <data name="PPoint" xml:space="preserve">
    <value>p</value>
  </data>
  <data name="PPointDescription" xml:space="preserve">
    <value>Point-type object</value>
  </data>
  <data name="PPolynomCoef" xml:space="preserve">
    <value>pcoef</value>
  </data>
  <data name="PPolynomCoefDescription" xml:space="preserve">
    <value>Coeficients of polynom</value>
  </data>
  <data name="PPositionWindow" xml:space="preserve">
    <value>position</value>
  </data>
  <data name="PPositionWindowDescription" xml:space="preserve">
    <value>Position of the window</value>
  </data>
  <data name="PPrecision" xml:space="preserve">
    <value>precision</value>
  </data>
  <data name="PPrecisionDescription" xml:space="preserve">
    <value>Precision of the calculation</value>
  </data>
  <data name="PRoot" xml:space="preserve">
    <value>r</value>
  </data>
  <data name="PRootDescription" xml:space="preserve">
    <value>Root</value>
  </data>
  <data name="PRungeKuttaDescription" xml:space="preserve">
    <value>Method of Runge-Kutta calculation (Normal | Adapted | Energy)</value>
  </data>
  <data name="PRungeKuttaMethod" xml:space="preserve">
    <value>rungekutta</value>
  </data>
  <data name="PSamplingRate" xml:space="preserve">
    <value>sr</value>
  </data>
  <data name="PSamplingRateDescription" xml:space="preserve">
    <value>Sampling rate of the signal</value>
  </data>
  <data name="PSCoef" xml:space="preserve">
    <value>s</value>
  </data>
  <data name="PSCoefDescription" xml:space="preserve">
    <value>Parameter s</value>
  </data>
  <data name="PSignal" xml:space="preserve">
    <value>signal</value>
  </data>
  <data name="PSignalDescription" xml:space="preserve">
    <value>Sampled signal </value>
  </data>
  <data name="PMatrixSize" xml:space="preserve">
    <value>size</value>
  </data>
  <data name="PMatrixSizeDescription" xml:space="preserve">
    <value>Size of the matrix</value>
  </data>
  <data name="PSizeWindow" xml:space="preserve">
    <value>size</value>
  </data>
  <data name="PSizeWindowDescription" xml:space="preserve">
    <value>Size of the window</value>
  </data>
  <data name="PSizeX" xml:space="preserve">
    <value>sizex</value>
  </data>
  <data name="PSizeXDescription" xml:space="preserve">
    <value>Number of points in the X direction</value>
  </data>
  <data name="PSizeY" xml:space="preserve">
    <value>sizey</value>
  </data>
  <data name="PSizeYDescription" xml:space="preserve">
    <value>Number of points in the Y direction</value>
  </data>
  <data name="PSort1" xml:space="preserve">
    <value>item</value>
  </data>
  <data name="PSort1Description" xml:space="preserve">
    <value>Object to be sorted</value>
  </data>
  <data name="PSort2" xml:space="preserve">
    <value>keys</value>
  </data>
  <data name="PSort2Description" xml:space="preserve">
    <value>Keys for sorting</value>
  </data>
  <data name="PSpacing" xml:space="preserve">
    <value>spacing</value>
  </data>
  <data name="PSpacingDescription" xml:space="preserve">
    <value>Distance of the neigbour components</value>
  </data>
  <data name="PSquareMatrix" xml:space="preserve">
    <value>sqrmatrix</value>
  </data>
  <data name="PSquareMatrixDescription" xml:space="preserve">
    <value>Square matrix</value>
  </data>
  <data name="PStartingPoint" xml:space="preserve">
    <value>startx</value>
  </data>
  <data name="PStartingPointDetail" xml:space="preserve">
    <value>Starting point of the interval</value>
  </data>
  <data name="PStep" xml:space="preserve">
    <value>step</value>
  </data>
  <data name="PStepDescription" xml:space="preserve">
    <value>Step if the interval</value>
  </data>
  <data name="PSymmetricMatrix" xml:space="preserve">
    <value>smatrix</value>
  </data>
  <data name="PSymmetricMatrixDescription" xml:space="preserve">
    <value>Symmetrix matrix (in other hand the matrix will be symmetrized)</value>
  </data>
  <data name="PTime" xml:space="preserve">
    <value>time</value>
  </data>
  <data name="PTimeDescription" xml:space="preserve">
    <value>Time of the evaluation</value>
  </data>
  <data name="PTimeStep" xml:space="preserve">
    <value>timestep</value>
  </data>
  <data name="PTimeStepDescription" xml:space="preserve">
    <value>Time step for the result</value>
  </data>
  <data name="PToArray1" xml:space="preserve">
    <value>item</value>
  </data>
  <data name="PToArray1Description" xml:space="preserve">
    <value>Object to be converted to array</value>
  </data>
  <data name="PType" xml:space="preserve">
    <value>type</value>
  </data>
  <data name="PTypeDescription" xml:space="preserve">
    <value>Type of a variable</value>
  </data>
  <data name="PUpperBound" xml:space="preserve">
    <value>ub</value>
  </data>
  <data name="PUpperBoundDescription" xml:space="preserve">
    <value>Upper bound</value>
  </data>
  <data name="PURI" xml:space="preserve">
    <value>uri</value>
  </data>
  <data name="PURIDescription" xml:space="preserve">
    <value>URI (link)</value>
  </data>
  <data name="PValue" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="PValueDescription" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="PVariable" xml:space="preserve">
    <value>var</value>
  </data>
  <data name="PVariableDescription" xml:space="preserve">
    <value>Variable</value>
  </data>
  <data name="PVariance" xml:space="preserve">
    <value>var</value>
  </data>
  <data name="PVarianceDescription" xml:space="preserve">
    <value>Variance of the distribution</value>
  </data>
  <data name="PVarName" xml:space="preserve">
    <value>varname</value>
  </data>
  <data name="PVarNameDescription" xml:space="preserve">
    <value>Name of the variable</value>
  </data>
  <data name="PVector" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="PVectorDescription" xml:space="preserve">
    <value>Vector</value>
  </data>
  <data name="PX" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="PXDetail" xml:space="preserve">
    <value>Variable x</value>
  </data>
  <data name="PY" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="PYDescription" xml:space="preserve">
    <value>Variable y</value>
  </data>
  <data name="SMCC_file" xml:space="preserve">
    <value>If you do want to compute an effective interaction for coupled-cluster calculations you need to specify three files, one for the interaction itself, one for the kinetic energies of all sp orbits and one for sp data declarations. These files are in turn used as input to coupled-cluster calculations.</value>
  </data>
  <data name="SMCib_choice" xml:space="preserve">
    <value>Here you specify if you wish to exclude CIB.</value>
  </data>
  <data name="SMCoulomb_included" xml:space="preserve">
    <value>Determine if you wish to include the Coulomb interaction or not.</value>
  </data>
  <data name="SMCsb_choice" xml:space="preserve">
    <value>Here you specify if you wish to exclude CSB.</value>
  </data>
  <data name="SMHbar_omega" xml:space="preserve">
    <value>The oscillator energy in MeV (We can change a look, if there is some change)</value>
  </data>
  <data name="SMHf_iterations" xml:space="preserve">
    <value>Determine whether you want to do Hartree-Fock or not. Options are 1) hf_iterations = 0 or 2) hf_iterations = 1 or any number larger than 0.</value>
  </data>
  <data name="SMHFrenorminteraction_file" xml:space="preserve">
    <value>If you do Hartree-Fock, the new interaction is given by this file.</value>
  </data>
  <data name="SMHFspdata_file" xml:space="preserve">
    <value>The new single-particle in case you do a Hartree-Fock calculation.</value>
  </data>
  <data name="SMJminmax" xml:space="preserve">
    <value>For the NN interaction you need to define the min and max value of J for the partial waves. Typical values are 0 and 6. For the argonne interactions Jmax &lt;= 4. For waves greater than J_max, the Hamiltonian is set to zero in this version of the program.</value>
  </data>
  <data name="SMLab_lmax" xml:space="preserve">
    <value>Define the maximum values of l for the model space. For square the model space 2n+l is entirely defined by lab_lmax.</value>
  </data>
  <data name="SMLab_nmax" xml:space="preserve">
    <value>Define the maximum values of n for the model space. For square the model space 2n+l is entirely defined by lab_lmax.</value>
  </data>
  <data name="SMMass_nucleus" xml:space="preserve">
    <value>Give the number of nucleons, recall that for nocore the results depend on A.</value>
  </data>
  <data name="SMMax_space" xml:space="preserve">
    <value>If you do nocore, you need also to specify the cut in 2n+l for the huge space, use 200-300 for interactions like cdbonn or argonne  use 300.</value>
  </data>
  <data name="SMOrder_of_interaction" xml:space="preserve">
    <value>You can also compute results to a given order in many-body perturbation theory, in this case to third order. For coupled-cluster you have to stay with first order.</value>
  </data>
  <data name="SMOutput_run" xml:space="preserve">
    <value>output_run is prefixed to output file for optional printouts, tests etc.</value>
  </data>
  <data name="SMPauli_operator" xml:space="preserve">
    <value>Specify the type of model space, three choices: square, triangular or wings. For the nocore calculation you can only use the triangular choice</value>
  </data>
  <data name="SMRenorminteraction_fileI" xml:space="preserve">
    <value>Input file for the renormalized NN interaction.</value>
  </data>
  <data name="SMRenorminteraction_fileO" xml:space="preserve">
    <value>Output file for the renormalized NN interaction.</value>
  </data>
  <data name="SMSpdata_fileI" xml:space="preserve">
    <value>Input file for the set of single-particle orbits, this file can be further manipulated by the effective interaction part.</value>
  </data>
  <data name="SMSpdata_fileO" xml:space="preserve">
    <value>Output file for the set of single-particle orbits, this file can be further manipulated by the effective interaction part.</value>
  </data>
  <data name="SMStartenergy_g" xml:space="preserve">
    <value>If you do the g-matrix you need to specify the number of starting energies and their corresponding values. Typically you would use some 5 or more starting energies and they should all be smaller than the binding energy of the deuteron in order to avoid poles in the computation of G(w). The present code does not allow you to use positive starting energies. Typical start and end values are listed here. Based on the endpoints of the interval, the next values are generated by the simple algo first_value + interval*i where interval is just end-start/number of values.</value>
  </data>
  <data name="SMStartingEnergy" xml:space="preserve">
    <value>You can compute the various diagrams for a given starting energy and then sum folded diagrams to infinite order. Typical starting energies for calculation should correspond to roughly the two-body energy of the valence nucleons. It should be negative since you are dealing with bound systems. If you choose just one  starting energy, then no folded diagrams are summed up.</value>
  </data>
  <data name="SMType_of_interaction" xml:space="preserve">
    <value>Determine what kind of effective interaction you want and the type of calculation. If you type shell-model, the code will produce an effective interaction taylored to the Oslo shell-model code, separated in three files, one for the pp case, one for pn and one for nn. For coupled-cluster calculations you will produce a file containing the effective interaction, one containing the kinetic energy and one for the total single-particle energies. You can also compute the binding energy of various closed core nuclei. The options are thus  1) open-diagrams for shell-model, 2) coupled-cluster and 3) core-diagrams.</value>
  </data>
  <data name="SMType_of_pot" xml:space="preserve">
    <value>Specify the type of NN interaction, here you can use Idaho-A, Idaho-B, CD-bonn, argonnev18, n3lo, argonnev8. There is an important point concerning the different interaction models. Idaho-A and Idaho-B have NO charge-symmetry (CSB) or charge-independence breaking terms (ISB). The Argonne potentials run only with full CSB and CIB. The N3LO and CD-bonn models allow you to run with or without one or both of these terms. NO CSB means that for a given set of qauntum numbers ( a specific partial wave) the neutron-neutron and proton-proton parts are identical. NO CIB  means that the proton-proton, neutron-neutron and proton-neutron interactions are equal. Isospin symmetry.</value>
  </data>
  <data name="SMType_of_renormv" xml:space="preserve">
    <value>Determine the renormalization procedure you want to do, only one at the time.</value>
  </data>
  <data name="SMVeff_xx" xml:space="preserve">
    <value>If you wan to compute an effective interaction for the Oslo shell-model codes, you need to define the names of three files, one for the proton-proton case one for the proton-neutron case and finally one for the neutron-neutron case.</value>
  </data>
  <data name="SMVlowk" xml:space="preserve">
    <value>If you do Vlowk you need to specify the number of mesh points for the model space and the large space. You need also to define the cutoff for the model in space in fm^- 1 and the in principal infinite integration limit set it to 20 fm^-1.  Recall that the NN interactions is fitted up to 350 MeV.</value>
  </data>
  <data name="ToArrayEMNotTextFile" xml:space="preserve">
    <value>Given file must be a text file, not a binary one.</value>
  </data>
  <data name="HelpIsOdd" xml:space="preserve">
    <value>True if the number is odd</value>
  </data>
  <data name="PInteger" xml:space="preserve">
    <value>i</value>
  </data>
  <data name="PIntegerDescription" xml:space="preserve">
    <value>Integer number</value>
  </data>
  <data name="HelpIsEven" xml:space="preserve">
    <value>True if the number is even</value>
  </data>
  <data name="HelpIsRegularPS" xml:space="preserve">
    <value>Returns true if the Poincare section on the given energy is fully regular; otherwise returns false</value>
  </data>
  <data name="HelpRegularityBreakSALI" xml:space="preserve">
    <value>Returns the energy for which the regular behavior starts breaking into the chaotic</value>
  </data>
  <data name="PEnergyMax" xml:space="preserve">
    <value>emax</value>
  </data>
  <data name="PEnergyMaxDescription" xml:space="preserve">
    <value>Maximum considered energy (energy for which the system is chaotic)</value>
  </data>
  <data name="PEnergyMin" xml:space="preserve">
    <value>emin</value>
  </data>
  <data name="PEnergyMinDescription" xml:space="preserve">
    <value>Minimum considered energy (energy for which the system is fully regular)</value>
  </data>
  <data name="PPrecisionEnergy" xml:space="preserve">
    <value>precisione</value>
  </data>
  <data name="PPrecisionEnergyDescription" xml:space="preserve">
    <value>Precision of the determination of the energy</value>
  </data>
  <data name="HelpEnergyMin" xml:space="preserve">
    <value>For given dynamical system returns the minimum possible energy</value>
  </data>
  <data name="MsgRegularityBreak" xml:space="preserve">
    <value>Searching for the break of regularity on the interval E=({0}, {1}).</value>
  </data>
  <data name="MsgStartTime" xml:space="preserve">
    <value>Start time: {0}</value>
  </data>
  <data name="EMArrayInFile" xml:space="preserve">
    <value>There must be an array in the file.</value>
  </data>
  <data name="EMArrayInFileDetail" xml:space="preserve">
    <value>Object type in the file: '{0}'.</value>
  </data>
  <data name="EMTypeInFile" xml:space="preserve">
    <value>Type of the items of the array cannot be '{0}'.</value>
  </data>
  <data name="HelpArrayFileToColumns" xml:space="preserve">
    <value>Text file of an array reform is such way that the items will be in the columns</value>
  </data>
  <data name="HelpPT3" xml:space="preserve">
    <value>Creates a class PT3 for studying quantum phase transitions (CASP potential)</value>
  </data>
  <data name="HelpPT3Potential" xml:space="preserve">
    <value>Value of the potential of the system PT3</value>
  </data>
  <data name="HelpDensityMatrix" xml:space="preserve">
    <value>Returns a vector or a matrix with the probability density of the wave function(s)</value>
  </data>
  <data name="HelpPAX" xml:space="preserve">
    <value>Returns the probability amplitude of the wave function in the required point (only 1D systems)</value>
  </data>
  <data name="HelpProbabilityAmplitude" xml:space="preserve">
    <value>Returns the probability amplitude of the wave function in the required point</value>
  </data>
  <data name="PEVIndexes" xml:space="preserve">
    <value>evn</value>
  </data>
  <data name="PEVIndexesDescription" xml:space="preserve">
    <value>Index of an eigenvector or eigenvectors (Array) </value>
  </data>
  <data name="PInterval" xml:space="preserve">
    <value>interval</value>
  </data>
  <data name="PIntervalDescription" xml:space="preserve">
    <value>Interval in the format (min, max, num)</value>
  </data>
  <data name="PQuantumSystem" xml:space="preserve">
    <value>q</value>
  </data>
  <data name="PQuantumSystemDescription" xml:space="preserve">
    <value>Quantum system</value>
  </data>
  <data name="HelpArrayFileToColumnsY" xml:space="preserve">
    <value>Text file of an array reform is such way that the items will be in the columns</value>
  </data>
  <data name="PNumberXItems" xml:space="preserve">
    <value>numx</value>
  </data>
  <data name="PNumberXItemsDescription" xml:space="preserve">
    <value>Number of items with independent x values</value>
  </data>
  <data name="HelpPV2DToMatrix" xml:space="preserve">
    <value>Convert an array of pointvectors into a matrix</value>
  </data>
  <data name="PIntervalX" xml:space="preserve">
    <value>intervalx</value>
  </data>
  <data name="PIntervalXDescription" xml:space="preserve">
    <value>Interval in the format (minx, maxx, numx)</value>
  </data>
  <data name="PIntervalY" xml:space="preserve">
    <value>intervaly</value>
  </data>
  <data name="PIntervalYDescription" xml:space="preserve">
    <value>Interval in the format (miny, maxy, numy)</value>
  </data>
  <data name="PIntervalZ" xml:space="preserve">
    <value>intervalz</value>
  </data>
  <data name="PIntervalZDescription" xml:space="preserve">
    <value>Interval in the format (minz, maxz, numz)</value>
  </data>
  <data name="PPVArray" xml:space="preserve">
    <value>pva</value>
  </data>
  <data name="PPVArrayDescription" xml:space="preserve">
    <value>Array or list of pointvectors</value>
  </data>
  <data name="HelpCrop" xml:space="preserve">
    <value>Removes values from a vector or pointvector that are larger or smaller than given bounds</value>
  </data>
  <data name="PXMaxBound" xml:space="preserve">
    <value>xmax</value>
  </data>
  <data name="PXMaxBoundDescription" xml:space="preserve">
    <value>Maximum x bound</value>
  </data>
  <data name="PXMinBound" xml:space="preserve">
    <value>xmin</value>
  </data>
  <data name="PXMinBoundDescription" xml:space="preserve">
    <value>Minimum x bound</value>
  </data>
  <data name="PYMaxBound" xml:space="preserve">
    <value>ymax</value>
  </data>
  <data name="PYMaxBoundDescription" xml:space="preserve">
    <value>Maximum y bound</value>
  </data>
  <data name="PYMinBound" xml:space="preserve">
    <value>ymin</value>
  </data>
  <data name="PYMinBoundDescription" xml:space="preserve">
    <value>Minimum y bound</value>
  </data>
  <data name="HelpD2" xml:space="preserve">
    <value>Returns the second derivative</value>
  </data>
  <data name="HelpPTSumLn" xml:space="preserve">
    <value>Returns sum of logarithms of differences between E_i and other energies</value>
  </data>
  <data name="PPT" xml:space="preserve">
    <value>ppt</value>
  </data>
  <data name="PPTDescription" xml:space="preserve">
    <value>Phase transition object</value>
  </data>
  <data name="GPAMajorTicksX" xml:space="preserve">
    <value>amajorticksx</value>
  </data>
  <data name="GPAMajorTicksXDescription" xml:space="preserve">
    <value>Distance between major ticks on the x-axis; negative value for default distance</value>
  </data>
  <data name="GPAMajorTicksY" xml:space="preserve">
    <value>amajorticksy</value>
  </data>
  <data name="GPAMajorTicksYDescription" xml:space="preserve">
    <value>Distance between major ticks on the y-axis; negative value for default distance</value>
  </data>
  <data name="GPAMinorTicksX" xml:space="preserve">
    <value>aminorticksx</value>
  </data>
  <data name="GPAMinorTicksXDescription" xml:space="preserve">
    <value>Number of minor ticks between major ticks on the x-axis; negative value for default minor ticks</value>
  </data>
  <data name="GPAMinorTicksY" xml:space="preserve">
    <value>aminorticksy</value>
  </data>
  <data name="GPAMinorTicksYDescription" xml:space="preserve">
    <value>Number of minor ticks between major ticks on the y-axis; negative value for default minor ticks</value>
  </data>
  <data name="GPAShowTicksB" xml:space="preserve">
    <value>ashowticksb</value>
  </data>
  <data name="GPAShowTicksBDescription" xml:space="preserve">
    <value>True if the ticks on the bottom axis are to be shown</value>
  </data>
  <data name="GPAShowTicksL" xml:space="preserve">
    <value>ashowticksl</value>
  </data>
  <data name="GPAShowTicksLDescription" xml:space="preserve">
    <value>True if the ticks on the left axis are to be shown</value>
  </data>
  <data name="GPAShowTicksR" xml:space="preserve">
    <value>ashowticksr</value>
  </data>
  <data name="GPAShowTicksRDescription" xml:space="preserve">
    <value>True if the ticks on the right axis are to be shown</value>
  </data>
  <data name="GPAShowTicksT" xml:space="preserve">
    <value>ashowtickst</value>
  </data>
  <data name="GPAShowTicksTDescription" xml:space="preserve">
    <value>True if the ticks on the top axis are to be shown</value>
  </data>
  <data name="HelpExportMatrix" xml:space="preserve">
    <value>Export a matrix in three columns format: (x, y, value)</value>
  </data>
  <data name="PMaxX" xml:space="preserve">
    <value>maxx</value>
  </data>
  <data name="PMaxXDescription" xml:space="preserve">
    <value>Maximum x value</value>
  </data>
  <data name="PMaxY" xml:space="preserve">
    <value>maxy</value>
  </data>
  <data name="PMaxYDescription" xml:space="preserve">
    <value>Maximum y value</value>
  </data>
  <data name="PMinX" xml:space="preserve">
    <value>minx</value>
  </data>
  <data name="PMinXDescription" xml:space="preserve">
    <value>Minimum x value</value>
  </data>
  <data name="PMinY" xml:space="preserve">
    <value>miny</value>
  </data>
  <data name="PMinYDescription" xml:space="preserve">
    <value>Minimum y value</value>
  </data>
  <data name="HelpBrody" xml:space="preserve">
    <value>Value of Brody distribution</value>
  </data>
  <data name="HelpCumulBrody" xml:space="preserve">
    <value>Value of cumulative Brody distribution</value>
  </data>
  <data name="HelpCumulBrodyFit" xml:space="preserve">
    <value>Returns the best Brody fit according to chi square test</value>
  </data>
  <data name="HelpCumulHistogram" xml:space="preserve">
    <value>Creates a cumulative histogram of a vector with a given binning</value>
  </data>
  <data name="HelpRandomBrody" xml:space="preserve">
    <value>Value with Brody distribution</value>
  </data>
  <data name="HelpRandomVectorBrody" xml:space="preserve">
    <value>Generates a vector with Brody distributed components</value>
  </data>
  <data name="P1CumulBrodyFit" xml:space="preserve">
    <value>s</value>
  </data>
  <data name="P1CumulBrodyFitDescription" xml:space="preserve">
    <value>Pointvector with cumulative spacings</value>
  </data>
  <data name="PBrody" xml:space="preserve">
    <value>omega</value>
  </data>
  <data name="PBrodyDescription" xml:space="preserve">
    <value>Brody parameter</value>
  </data>
  <data name="HelpGamma" xml:space="preserve">
    <value>Gamma function</value>
  </data>
  <data name="EMBadPMasses" xml:space="preserve">
    <value>Vector of masses must have {0} components. You have input {1} components.</value>
  </data>
  <data name="HelpThreeBody" xml:space="preserve">
    <value>Creates ThreeBody class</value>
  </data>
  <data name="PMasses" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="PMassesDescription" xml:space="preserve">
    <value>Masses of the bodies</value>
  </data>
  <data name="HelpTwoBody" xml:space="preserve">
    <value>Creates TwoBody class</value>
  </data>
  <data name="PPeresOperatorType" xml:space="preserve">
    <value>ptype</value>
  </data>
  <data name="PPeresOperatorTypeDescription" xml:space="preserve">
    <value>Type of Peres operator (0...L2, 1...H', 2...Hosc)</value>
  </data>
  <data name="HelpBenford" xml:space="preserve">
    <value>Returns a histogram according to Benford's law</value>
  </data>
  <data name="HelpTSIntegrate" xml:space="preserve">
    <value>Integrates a time series S_{i}=sum_{j=1}^{i}(s_{j}-&lt;s&gt;)</value>
  </data>
  <data name="PBenfordFirstDigit" xml:space="preserve">
    <value>fdigit</value>
  </data>
  <data name="PBenfordFirstDigitDescription" xml:space="preserve">
    <value>First digit for the Benford's law</value>
  </data>
  <data name="PBenfordNumDigitDescription" xml:space="preserve">
    <value>Number of digits taken into account in the Benford's law</value>
  </data>
  <data name="PBenfordNumDigits" xml:space="preserve">
    <value>ndigits</value>
  </data>
  <data name="GPCommentDescription" xml:space="preserve">
    <value>Comment of a graph</value>
  </data>
  <data name="GPComment" xml:space="preserve">
    <value>comment</value>
  </data>
  <data name="HelpExportVector3D" xml:space="preserve">
    <value>Export three vectors in three columns format: (v, x, y)</value>
  </data>
  <data name="EMNotEqualLengthDetail3" xml:space="preserve">
    <value>Length of the first object: {0}
Length of the second object: {1}
Length of the third object: {2}</value>
  </data>
  <data name="HelpConvexConcave" xml:space="preserve">
    <value>For GCM system returns the negative energy for which the border changes from convex to concave shape</value>
  </data>
  <data name="P2ConvexConcave" xml:space="preserve">
    <value>cctype</value>
  </data>
  <data name="P2ConvexConcaveDescription" xml:space="preserve">
    <value>0...Change of island shape, 1...Change of outer shape</value>
  </data>
  <data name="HelpIntersection" xml:space="preserve">
    <value>Finds all intersection points of two pointvectors</value>
  </data>
  <data name="PPointVector" xml:space="preserve">
    <value>pv</value>
  </data>
  <data name="PPointVectorDescription" xml:space="preserve">
    <value>pointvector</value>
  </data>
  <data name="HelpNegation" xml:space="preserve">
    <value>Operator ! (boolean NOT)</value>
  </data>
  <data name="HelpRegularityBreakCurvature" xml:space="preserve">
    <value>Returns the energy for which there should be, according to the geometrical theory of chaos, the transition between regular and chaotic behaviour</value>
  </data>
  <data name="PXSection" xml:space="preserve">
    <value>xsection</value>
  </data>
  <data name="PXSectionDescription" xml:space="preserve">
    <value>True if the section at x == 0 should be computed</value>
  </data>
  <data name="POneOrientation" xml:space="preserve">
    <value>oneorientation</value>
  </data>
  <data name="POneOrientationDescription" xml:space="preserve">
    <value>True if only one orientation of the crossing of the plane shall be considered</value>
  </data>
  <data name="HelpPeresInvariantT" xml:space="preserve">
    <value>Calculates the dependence of classical Peres invariant on time for given trajectory</value>
  </data>
  <data name="PDivision" xml:space="preserve">
    <value>div</value>
  </data>
  <data name="PDivisionDescription" xml:space="preserve">
    <value>Number of points dividing the 2pi interval</value>
  </data>
  <data name="HelpList" xml:space="preserve">
    <value>Creates a list of all parameters</value>
  </data>
  <data name="P3PointVector" xml:space="preserve">
    <value>p</value>
  </data>
  <data name="P3PointVectorDescription" xml:space="preserve">
    <value>Other points</value>
  </data>
  <data name="HelpArrayFileToColumn" xml:space="preserve">
    <value>Text file of an array reform is such way that the items will be in one column separated by an empty line</value>
  </data>
  <data name="HelpStairsX" xml:space="preserve">
    <value>Creates stairs from a pointvector</value>
  </data>
  <data name="HelpSwapXY" xml:space="preserve">
    <value>Swaps X and Y coordinates</value>
  </data>
  <data name="P1SwapXY" xml:space="preserve">
    <value>xy</value>
  </data>
  <data name="P1SwapXYDescription" xml:space="preserve">
    <value>Object with x and y coordinates</value>
  </data>
  <data name="EMBadArrayItemType" xml:space="preserve">
    <value>Objects in the arrays must have the same type.</value>
  </data>
  <data name="EMBadArrayItemTypeDetail" xml:space="preserve">
    <value>First differing type: {0}
Second differing type: {1}</value>
  </data>
  <data name="EMBadFunctionName" xml:space="preserve">
    <value>Unknown function '{0}'.</value>
  </data>
  <data name="EMFunctionExists" xml:space="preserve">
    <value>Function '{0}' already exists in the dictionary and cannot be added.</value>
  </data>
  <data name="EMContext" xml:space="preserve">
    <value>Context error:</value>
  </data>
  <data name="HelpCHO" xml:space="preserve">
    <value>Creates a Coupled harmonic oscillator class</value>
  </data>
  <data name="PCouplingConstant" xml:space="preserve">
    <value>lambda</value>
  </data>
  <data name="PCouplingConstantDescription" xml:space="preserve">
    <value>Coupling constant</value>
  </data>
  <data name="PMass" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="PMassDescription" xml:space="preserve">
    <value>Mass</value>
  </data>
  <data name="PRigidity" xml:space="preserve">
    <value>k</value>
  </data>
  <data name="PRigidityDescription" xml:space="preserve">
    <value>Rigidity</value>
  </data>
  <data name="POrderOfSquareRoot" xml:space="preserve">
    <value>n</value>
  </data>
  <data name="POrderOfSquareRootDescription" xml:space="preserve">
    <value>Order of square root</value>
  </data>
  <data name="HelpMaxima" xml:space="preserve">
    <value>Returns maxima of a given function</value>
  </data>
  <data name="HelpMinima" xml:space="preserve">
    <value>Returns minima of a given function</value>
  </data>
  <data name="HelpAvoidedCrossings" xml:space="preserve">
    <value>Finds points of all avoided crossings for PT3</value>
  </data>
  <data name="PLevel" xml:space="preserve">
    <value>n</value>
  </data>
  <data name="PLevelDescription" xml:space="preserve">
    <value>Index of eigenstate</value>
  </data>
  <data name="HelpAvoidedCrossing" xml:space="preserve">
    <value>Finds precise position of the avoided crossing of two levels (minimum of their distance)</value>
  </data>
  <data name="P2AvoidedCrossing" xml:space="preserve">
    <value>n1</value>
  </data>
  <data name="P2AvoidedCrossingDescription" xml:space="preserve">
    <value>Index of the first level</value>
  </data>
  <data name="P3AvoidedCrossing" xml:space="preserve">
    <value>n2</value>
  </data>
  <data name="P3AvoidedCrossingDescription" xml:space="preserve">
    <value>Index of the second level</value>
  </data>
  <data name="P4AvoidedCrossing" xml:space="preserve">
    <value>bmin</value>
  </data>
  <data name="P4AvoidedCrossingDescription" xml:space="preserve">
    <value>Minimal b for the calculation</value>
  </data>
  <data name="P5AvoidedCrossing" xml:space="preserve">
    <value>bmax</value>
  </data>
  <data name="P5AvoidedCrossingDescription" xml:space="preserve">
    <value>Maximal b for the calculation</value>
  </data>
  <data name="HelpBTW" xml:space="preserve">
    <value>Bak-Tang-Wiesenfeld sandpile celular automaton</value>
  </data>
  <data name="PCriticalValue" xml:space="preserve">
    <value>c</value>
  </data>
  <data name="PCriticalValueDescription" xml:space="preserve">
    <value>Critical value</value>
  </data>
  <data name="HelpCM" xml:space="preserve">
    <value>Calculates correlation matrix</value>
  </data>
  <data name="HelpCorrelatedSignal" xml:space="preserve">
    <value>Creates correlated signal according to the article PRE 71, 046116 (2005)</value>
  </data>
  <data name="HelpSymmetryParameter" xml:space="preserve">
    <value>Symmetry parameter of eigenvector</value>
  </data>
  <data name="HelpTranspose" xml:space="preserve">
    <value>Transposition of a matrix</value>
  </data>
  <data name="MsgCorrelatedSignalRegion1Start" xml:space="preserve">
    <value>Creating time matrix in the region 1</value>
  </data>
  <data name="MsgCorrelatedSignalRegion2Start" xml:space="preserve">
    <value>Creating time matrix in the transitional region 2</value>
  </data>
  <data name="MsgCorrelatedSignalRegion3Start" xml:space="preserve">
    <value>Creating time matrix in the region 3</value>
  </data>
  <data name="P1CorrelatedSignal" xml:space="preserve">
    <value>f</value>
  </data>
  <data name="P1CorrelatedSignalDescription" xml:space="preserve">
    <value>Frequencies of the signals</value>
  </data>
  <data name="P2CM" xml:space="preserve">
    <value>normalize</value>
  </data>
  <data name="P2CMDescription" xml:space="preserve">
    <value>True if the signal should be normalized</value>
  </data>
  <data name="P2CorrelatedSignal" xml:space="preserve">
    <value>delta1</value>
  </data>
  <data name="P2CorrelatedSignalDescription" xml:space="preserve">
    <value>Phase shifts in the first region</value>
  </data>
  <data name="P3CorrelatedSignal" xml:space="preserve">
    <value>t1</value>
  </data>
  <data name="P3CorrelatedSignalDescription" xml:space="preserve">
    <value>Time length of the first region</value>
  </data>
  <data name="P4CorrelatedSignal" xml:space="preserve">
    <value>t2</value>
  </data>
  <data name="P4CorrelatedSignalDescription" xml:space="preserve">
    <value>Time length of the second (transitional) region</value>
  </data>
  <data name="P5CorrelatedSignal" xml:space="preserve">
    <value>delta3</value>
  </data>
  <data name="P5CorrelatedSignalDescription" xml:space="preserve">
    <value>Phase shifts in the third region</value>
  </data>
  <data name="P6CorrelatedSignal" xml:space="preserve">
    <value>t3</value>
  </data>
  <data name="P6CorrelatedSignalDescription" xml:space="preserve">
    <value>Time length of the third region</value>
  </data>
  <data name="P7CorrelatedSignal" xml:space="preserve">
    <value>tbase</value>
  </data>
  <data name="P7CorrelatedSignalDescription" xml:space="preserve">
    <value>Time base constant</value>
  </data>
  <data name="PShift" xml:space="preserve">
    <value>shift</value>
  </data>
  <data name="PShiftDescription" xml:space="preserve">
    <value>Time shift of the signals</value>
  </data>
  <data name="HelpMatrixUnit" xml:space="preserve">
    <value>Creates a unit matrix</value>
  </data>
  <data name="PLinesOmit" xml:space="preserve">
    <value>omit</value>
  </data>
  <data name="PLinesOmitDescription" xml:space="preserve">
    <value>How many lines to omit</value>
  </data>
  <data name="HelpFullSmooth" xml:space="preserve">
    <value>Smooths a vector in such a manner that all components before computed position are used for averaging</value>
  </data>
  <data name="HelpTrajectoryLength" xml:space="preserve">
    <value>For given energy or a trajectory given by its initial condition calculates the length of the trajectory</value>
  </data>
  <data name="EMMaxIterationIC" xml:space="preserve">
    <value>Generation of initial conditions has not been successful. The maximun number of iteration was exceeded.</value>
  </data>
  <data name="PHistogramType" xml:space="preserve">
    <value>htype</value>
  </data>
  <data name="PHistogramTypeDescription" xml:space="preserve">
    <value>Type of histogram ("point" | "line" | "bar")</value>
  </data>
  <data name="HelpBinMean" xml:space="preserve">
    <value>Calculates mean of a PointVector in each of a defined bin</value>
  </data>
  <data name="HelpGetIndex" xml:space="preserve">
    <value>Returns indices of items which are in given relation with given number</value>
  </data>
  <data name="PComparisonOperator" xml:space="preserve">
    <value>operator</value>
  </data>
  <data name="PComparisonOperatorDescription" xml:space="preserve">
    <value>Comparison operator ("==" | "!=" | "&gt;" | "&lt;" | "&gt;=" | "&lt;=");</value>
  </data>
  <data name="HelpVMatrixG" xml:space="preserve">
    <value>Creates matrix with value of the eigenvalue of cal{V} matrix</value>
  </data>
  <data name="PEigenValueIndex" xml:space="preserve">
    <value>ei</value>
  </data>
  <data name="PEigenValueIndexDescription" xml:space="preserve">
    <value>Index of the eigenvalue (0 is the highest one)</value>
  </data>
  <data name="PInitialCondition" xml:space="preserve">
    <value>ic</value>
  </data>
  <data name="PInitialConditionDescription" xml:space="preserve">
    <value>Initial conditions</value>
  </data>
  <data name="PMinimumPointsCircle" xml:space="preserve">
    <value>minCircle</value>
  </data>
  <data name="PMinimumPointsCircleDescription" xml:space="preserve">
    <value>Minimum points of the circle</value>
  </data>
  <data name="HelpQuantumDP" xml:space="preserve">
    <value>The quantum double pendulum system</value>
  </data>
  <data name="HelpHamiltonianMatrix" xml:space="preserve">
    <value>Returns Hamiltonian matrix of the given quantum system</value>
  </data>
  <data name="PDoublePendulumGamma" xml:space="preserve">
    <value>gamma</value>
  </data>
  <data name="PDoublePendulumGammaDescription" xml:space="preserve">
    <value>gamma parameter (gravity parameter)</value>
  </data>
  <data name="PDoublePendulumLambda" xml:space="preserve">
    <value>lambda</value>
  </data>
  <data name="PDoublePendulumLambdaDescription" xml:space="preserve">
    <value>lambda parameter (ratio of lengths)</value>
  </data>
  <data name="PDoublePendulumMu" xml:space="preserve">
    <value>mu</value>
  </data>
  <data name="PDoublePendulumMuDescription" xml:space="preserve">
    <value>mu parameter (ratio of masses)</value>
  </data>
  <data name="HelpHamiltonianMatrixSize" xml:space="preserve">
    <value>Dimensions of the Hamiltonian matrix</value>
  </data>
  <data name="HelpClassicalDP" xml:space="preserve">
    <value>The classical double pendulum system</value>
  </data>
  <data name="HelpDPXY" xml:space="preserve">
    <value>Transforms angles of DoublePendulum system to (X, Y) coordinates of each body</value>
  </data>
  <data name="PDoublePendulum" xml:space="preserve">
    <value>dp</value>
  </data>
  <data name="PDoublePendulumDescription" xml:space="preserve">
    <value>Double pendulum system</value>
  </data>
  <data name="PFileTypeImport" xml:space="preserve">
    <value>filetype</value>
  </data>
  <data name="PFileTypeImportDescription" xml:space="preserve">
    <value>Type of the file ("binary" | "text" | "matlab" | "digits" | "mathmat" | "wav")</value>
  </data>
  <data name="PNumberOfDigits" xml:space="preserve">
    <value>dn</value>
  </data>
  <data name="PNumberOfDigitsDescription" xml:space="preserve">
    <value>Number of digits to be imported</value>
  </data>
  <data name="HelpPSTimes" xml:space="preserve">
    <value>Calculates times of crossing of the plane of Poincaré section for given energy or trajectory given by its initial condition</value>
  </data>
  <data name="HelpOrbit" xml:space="preserve">
    <value>Finds a periodic orbit using Poincare sections</value>
  </data>
  <data name="HelpIntialConditionX" xml:space="preserve">
    <value>For given dynamical system and energy generates missing coordinate / momentum in the initial condition</value>
  </data>
  <data name="HelpInitialConditionX" xml:space="preserve">
    <value>For given dynamical system and energy generates missing coordinate / momentum in the initial condition</value>
  </data>
  <data name="PComponentIndex" xml:space="preserve">
    <value>i</value>
  </data>
  <data name="PComponentIndexDescription" xml:space="preserve">
    <value>Index of the component of the vector</value>
  </data>
  <data name="HelpTraffic" xml:space="preserve">
    <value>Creates a Traffic class</value>
  </data>
  <data name="HelpTrafficIC" xml:space="preserve">
    <value>Generates initial conditions for the traffic system</value>
  </data>
  <data name="HelpTrafficStep" xml:space="preserve">
    <value>Makes a step of the traffic system</value>
  </data>
  <data name="PTraffic" xml:space="preserve">
    <value>t</value>
  </data>
  <data name="PTrafficDescription" xml:space="preserve">
    <value>Traffic class</value>
  </data>
  <data name="P1TrafficIC" xml:space="preserve">
    <value>ic</value>
  </data>
  <data name="P1TrafficICDescription" xml:space="preserve">
    <value>Value for initial condition</value>
  </data>
  <data name="P2TrafficIC" xml:space="preserve">
    <value>ictype</value>
  </data>
  <data name="P2TrafficICDescription" xml:space="preserve">
    <value>Type of the initial condition ("probability" | "total" | "street")</value>
  </data>
  <data name="PStreetLengthX" xml:space="preserve">
    <value>slx</value>
  </data>
  <data name="PStreetLengthXDescription" xml:space="preserve">
    <value>Length of the street in the X direction</value>
  </data>
  <data name="PStreetLengthY" xml:space="preserve">
    <value>sly</value>
  </data>
  <data name="PStreetLengthYDescription" xml:space="preserve">
    <value>Length of the street in the Y direction</value>
  </data>
  <data name="PTrafficTopology" xml:space="preserve">
    <value>topology</value>
  </data>
  <data name="PTrafficTopologyDescription" xml:space="preserve">
    <value>Topology of the traffic system (boundary conditions) ("cyclic" | "SingleMoebius" | "SimpleMoebius")</value>
  </data>
  <data name="HelpTrafficMatrix" xml:space="preserve">
    <value>Returns a matrix showing the state of the traffic system</value>
  </data>
  <data name="HelpTrafficParams" xml:space="preserve">
    <value>Sets the parameters of the traffic system</value>
  </data>
  <data name="HelpTrafficRun" xml:space="preserve">
    <value>Runs the traffic system for several time steps</value>
  </data>
  <data name="P1TrafficParams" xml:space="preserve">
    <value>sensordistance</value>
  </data>
  <data name="P1TrafficParamsDescription" xml:space="preserve">
    <value>The distance of the sensor from the crossing</value>
  </data>
  <data name="P2TrafficParams" xml:space="preserve">
    <value>shortdistance</value>
  </data>
  <data name="P2TrafficParamsDescription" xml:space="preserve">
    <value>The short distance for the incomming cars</value>
  </data>
  <data name="P3TrafficParams" xml:space="preserve">
    <value>shortdistancestopped</value>
  </data>
  <data name="P3TrafficParamsDescription" xml:space="preserve">
    <value>The short distance for the outgoing cars (outgoing street stopped)</value>
  </data>
  <data name="P4TrafficParams" xml:space="preserve">
    <value>mingreen</value>
  </data>
  <data name="P4TrafficParamsDescription" xml:space="preserve">
    <value>Minimum green time of the traffic lights</value>
  </data>
  <data name="P5TrafficParams" xml:space="preserve">
    <value>maxtolerance</value>
  </data>
  <data name="P5TrafficParamsDescription" xml:space="preserve">
    <value>Maximum tolerance for the incomming cars</value>
  </data>
  <data name="P6TrafficParams" xml:space="preserve">
    <value>cutplatoon</value>
  </data>
  <data name="P6TrafficParamsDescription" xml:space="preserve">
    <value>Maximum number of cars in the short distance that will pass the lights</value>
  </data>
  <data name="HelpCumul" xml:space="preserve">
    <value>Returns a vector of cumulations sum_{i=0}^{k} s_{k}</value>
  </data>
  <data name="HelpDeterminant" xml:space="preserve">
    <value>Calculates a determinant of the matrix</value>
  </data>
  <data name="HelpSimplexVolume" xml:space="preserve">
    <value>Calculates the volume of a simplex given by the vectors of the matrix</value>
  </data>
  <data name="HelpShotNoise" xml:space="preserve">
    <value>Generates a vector with shot noise values</value>
  </data>
  <data name="PAmplitudes" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="PAmplitudesDescription" xml:space="preserve">
    <value>Amplitudes of the individual processess</value>
  </data>
  <data name="PPoissonianIntensity" xml:space="preserve">
    <value>lambda</value>
  </data>
  <data name="PPoissonianIntensityDescription" xml:space="preserve">
    <value>Poissonian intensity</value>
  </data>
  <data name="PRelaxationRate" xml:space="preserve">
    <value>r</value>
  </data>
  <data name="PRelaxationRateDescription" xml:space="preserve">
    <value>Relaxation rate</value>
  </data>
  <data name="HelpSample" xml:space="preserve">
    <value>Samples the pointvector in the points of the given vector</value>
  </data>
  <data name="PSamplingPoints" xml:space="preserve">
    <value>sp</value>
  </data>
  <data name="PSamplingPointsDescription" xml:space="preserve">
    <value>Sapmpling points</value>
  </data>
  <data name="HelpDFA" xml:space="preserve">
    <value>Detrended fluctuation analysis of a given time series</value>
  </data>
  <data name="HelpLogLog" xml:space="preserve">
    <value>From both x and y values of a pointvector calculates log_10</value>
  </data>
  <data name="PScaleParameter" xml:space="preserve">
    <value>s</value>
  </data>
  <data name="PScaleParameterDescription" xml:space="preserve">
    <value>Scale parameter</value>
  </data>
  <data name="PAllPoints" xml:space="preserve">
    <value>allp</value>
  </data>
  <data name="PAllPointsDescription" xml:space="preserve">
    <value>True if you want to include all points</value>
  </data>
  <data name="CDFENucleusPage" xml:space="preserve">
    <value>Reading nucleus Z={0}, A={1}</value>
  </data>
  <data name="PMassNumber" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="PMassNumberDescription" xml:space="preserve">
    <value>Mass number</value>
  </data>
  <data name="PProtonNumber" xml:space="preserve">
    <value>Z</value>
  </data>
  <data name="PProtonNumberDescription" xml:space="preserve">
    <value>Proton number</value>
  </data>
  <data name="HelpCDFE" xml:space="preserve">
    <value>Reads all accessible pieces of information about an izotope from http://cdfe.sinp.msu.ru/cgi-bin/muh/radchartnucl.cgi</value>
  </data>
  <data name="HelpCDFEMaxBeta" xml:space="preserve">
    <value>Find the maximum value of the deformation parameter</value>
  </data>
  <data name="PCDFE" xml:space="preserve">
    <value>cdfe</value>
  </data>
  <data name="PCDFEBeta" xml:space="preserve">
    <value>beta</value>
  </data>
  <data name="PCDFEBetaDescription" xml:space="preserve">
    <value>Which values of beta is going to be taken (0...Qmom, 1...B(E2), 2...Theory)</value>
  </data>
  <data name="PCDFEDescription" xml:space="preserve">
    <value>Result of the function CDFE</value>
  </data>
  <data name="HelpCDFEMaxQ" xml:space="preserve">
    <value>Find the maximum and minimum value of the quadrupole deformation with its errors</value>
  </data>
  <data name="HelpMatrixZAToNA" xml:space="preserve">
    <value>Transforms the matrix with indices (Z, A) to (Z, N)</value>
  </data>
  <data name="GPBColorFnc" xml:space="preserve">
    <value>bcolorfnc</value>
  </data>
  <data name="GPBColorFncDescription" xml:space="preserve">
    <value>Name of the background color function</value>
  </data>
  <data name="PDoublePendulumQuantization" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="PDoublePendulumQuantizationDescription" xml:space="preserve">
    <value>Parameter of the ambiguity of the L_2^2 term in the kinetic term (usually 0...1)</value>
  </data>
  <data name="HelpBasisVectorTimeEvolution" xml:space="preserve">
    <value>Time evolution of a given basis vector</value>
  </data>
  <data name="HelpGetDiagonal" xml:space="preserve">
    <value>Gets the diagonal of a square matrix</value>
  </data>
  <data name="HelpHamiltonianAction" xml:space="preserve">
    <value>Action of a Hamiltonian on a given ket</value>
  </data>
  <data name="HelpOperatorAction" xml:space="preserve">
    <value>Action of an operator on a given ket</value>
  </data>
  <data name="HelpTimeEvolution" xml:space="preserve">
    <value>Time evolution of a given ket</value>
  </data>
  <data name="PKet" xml:space="preserve">
    <value>ket</value>
  </data>
  <data name="PKetDescription" xml:space="preserve">
    <value>Ket vector</value>
  </data>
  <data name="POperatorType" xml:space="preserve">
    <value>o</value>
  </data>
  <data name="POperatorTypeDescription" xml:space="preserve">
    <value>Type of the operator</value>
  </data>
  <data name="HelpBasisVectorHamiltonianAction" xml:space="preserve">
    <value>Action of a Hamiltonian on a given ket</value>
  </data>
  <data name="PSquared" xml:space="preserve">
    <value>squared</value>
  </data>
  <data name="PSquaredDescription" xml:space="preserve">
    <value>True if the square of the operator is to be applied</value>
  </data>
  <data name="HelpOperatorExpectDiagonal" xml:space="preserve">
    <value>Expectation value of the diagonal elements &lt;m1 m2|L|m1 m2&gt;</value>
  </data>
  <data name="HelpBasisQuantumNumber" xml:space="preserve">
    <value>Transforms the index of the basis vector into its quantum numbers and vice versa</value>
  </data>
  <data name="HelpBasisToEV" xml:space="preserve">
    <value>Transforms given state vector represented in basis components to a vector expressed in components of eigenvectors</value>
  </data>
  <data name="HelpBasisVector" xml:space="preserve">
    <value>Returns a basis vector</value>
  </data>
  <data name="HelpEVToBasis" xml:space="preserve">
    <value>Transforms given state vector expanded in eigenvectors components to a vector expressed in components of the basis</value>
  </data>
  <data name="HelpQuantumTemperature" xml:space="preserve">
    <value>Calculates a temperature using expression Tr(Ro H) = K</value>
  </data>
  <data name="PMeanEnergy" xml:space="preserve">
    <value>e</value>
  </data>
  <data name="PMeanEnergyDescription" xml:space="preserve">
    <value>Mean energy</value>
  </data>
  <data name="HelpTDMeanOperator" xml:space="preserve">
    <value>Thermodynamical mean value of a Peres operator</value>
  </data>
  <data name="PTemperature" xml:space="preserve">
    <value>T</value>
  </data>
  <data name="PTemperatureDescription" xml:space="preserve">
    <value>Temperature</value>
  </data>
  <data name="HelpLevelToNumber" xml:space="preserve">
    <value>Transforms the string value of the level angular momentum 1/2- and parity into the numerical form -0.5 and vice versa</value>
  </data>
  <data name="PNuclearLevel" xml:space="preserve">
    <value>level</value>
  </data>
  <data name="PNuclearLevelDescription" xml:space="preserve">
    <value>Level labeling (string format 1/2- or numerical format -0.5)</value>
  </data>
  <data name="HelpIsNull" xml:space="preserve">
    <value>True if a given expression is null</value>
  </data>
  <data name="HelpModulo" xml:space="preserve">
    <value>Modulo operator</value>
  </data>
  <data name="HelpEvaluate" xml:space="preserve">
    <value>Evaluates a user function</value>
  </data>
  <data name="HelpFunction" xml:space="preserve">
    <value>Creates a user function using the given text</value>
  </data>
  <data name="PFnc" xml:space="preserve">
    <value>fnc</value>
  </data>
  <data name="PFncDescription" xml:space="preserve">
    <value>User function</value>
  </data>
  <data name="PFncText" xml:space="preserve">
    <value>fnc</value>
  </data>
  <data name="PFncTextDescription" xml:space="preserve">
    <value>Text with the function content</value>
  </data>
  <data name="PParam" xml:space="preserve">
    <value>p</value>
  </data>
  <data name="PParamDescription" xml:space="preserve">
    <value>Parameter of the function</value>
  </data>
  <data name="HelpFunctionText" xml:space="preserve">
    <value>Returns the text of the function</value>
  </data>
  <data name="HelpBoxSpectrum" xml:space="preserve">
    <value>Computes spectrum the infinite-well box potential E=sum_i (omega*ni^2) for integer frequencies omega</value>
  </data>
  <data name="P2BoxSpectrum" xml:space="preserve">
    <value>omega</value>
  </data>
  <data name="P2BoxSpectrumDescription" xml:space="preserve">
    <value>Frequency in the distinct directions</value>
  </data>
  <data name="MsgLevelNumber" xml:space="preserve">
    <value>Total number of levels: {0}</value>
  </data>
  <data name="PBoundaryCut" xml:space="preserve">
    <value>b</value>
  </data>
  <data name="PBoundaryCutDescription" xml:space="preserve">
    <value>Number of points from each side to cut the boundary</value>
  </data>
  <data name="HelpBoxSpectrum3D" xml:space="preserve">
    <value>Computes spectrum the 3D infinite-well box potential  E = (hbar^2 pi^2)/(2ML^2)[(nx^2+ny^2)e^2a + nz^2 e^-4a] (with a volume conservation condition)</value>
  </data>
  <data name="PDeformation" xml:space="preserve">
    <value>def</value>
  </data>
  <data name="PDeformationDescription" xml:space="preserve">
    <value>Deformation</value>
  </data>
  <data name="HelpBesselJ" xml:space="preserve">
    <value>Returns the value of the Bessel function J (Bessel function of the first kind)</value>
  </data>
  <data name="HelpBesselJd" xml:space="preserve">
    <value>Returns the derivative of the Bessel function J</value>
  </data>
  <data name="HelpBesselY" xml:space="preserve">
    <value>Returns the value of the Bessel function Y (Bessel function of the second kind)</value>
  </data>
  <data name="HelpBesselYd" xml:space="preserve">
    <value>Returns the derivative of the Bessel function Y</value>
  </data>
  <data name="HelpSphericalBesselJ" xml:space="preserve">
    <value>Returns the value of the Spherical Bessel function j</value>
  </data>
  <data name="HelpSphericalBesselJd" xml:space="preserve">
    <value>Returns the value of the derivative of the Spherical Bessel function j</value>
  </data>
  <data name="HelpSphericalBesselY" xml:space="preserve">
    <value>Returns the value of the Spherical Bessel function y (Spherical Neumann function)</value>
  </data>
  <data name="HelpSphericalBesselYd" xml:space="preserve">
    <value>Returns the value of the derivative of the Spherical Bessel function y</value>
  </data>
  <data name="HelpSphericalBesselJZero" xml:space="preserve">
    <value>Returns a given number of zeros of the spherical Bessel function j</value>
  </data>
  <data name="PZeroNumber" xml:space="preserve">
    <value>nz</value>
  </data>
  <data name="PZeroNumberDescription" xml:space="preserve">
    <value>Number of zeros</value>
  </data>
  <data name="HelpQuantumSpheroid" xml:space="preserve">
    <value>Creates Quantum Spheroid class</value>
  </data>
  <data name="HelpGaussianSmooth" xml:space="preserve">
    <value>Data of input pointvector interprets as mean values and standard deviations of a set of Gaussian functions</value>
  </data>
  <data name="PGaussianCoef" xml:space="preserve">
    <value>gcoef</value>
  </data>
  <data name="PGaussianCoefDescription" xml:space="preserve">
    <value>Coefficients of Gaussians</value>
  </data>
  <data name="PWeight" xml:space="preserve">
    <value>w</value>
  </data>
  <data name="PWeightDescription" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="HelpTestARPack" xml:space="preserve">
    <value>Generates randomly a symmetric sparse matrix and diagonalizes it</value>
  </data>
  <data name="PNonZeros" xml:space="preserve">
    <value>nz</value>
  </data>
  <data name="PNonZerosDescription" xml:space="preserve">
    <value>Number of nonzero elements</value>
  </data>
  <data name="PInfo" xml:space="preserve">
    <value>info</value>
  </data>
  <data name="PInfoDescription" xml:space="preserve">
    <value>Additional informations</value>
  </data>
  <data name="HelpStrutinsky" xml:space="preserve">
    <value>Returns an object dealing with Strutinsky corrections</value>
  </data>
  <data name="PRange" xml:space="preserve">
    <value>r</value>
  </data>
  <data name="PRangeDescription" xml:space="preserve">
    <value>Range of the interaction</value>
  </data>
  <data name="HelpChemicalPotential" xml:space="preserve">
    <value>Returns the chemical potential of the Strutinsky method for a given mass number</value>
  </data>
  <data name="HelpOccupationNumber" xml:space="preserve">
    <value>Returns the occupation numbers of the Strutinsky method for a given mass number</value>
  </data>
  <data name="HelpSmoothLevelDensity" xml:space="preserve">
    <value>Returns the smooth level density by the Strutinsky method</value>
  </data>
  <data name="PStrutinsky" xml:space="preserve">
    <value>s</value>
  </data>
  <data name="PStrutinskyDescription" xml:space="preserve">
    <value>Strutinsky object</value>
  </data>
  <data name="HelpShellCorrection" xml:space="preserve">
    <value>Returns the shell corrections of the Strutinsky method for a given mass number</value>
  </data>
  <data name="HelpPlateau" xml:space="preserve">
    <value>Returns the plateau condition of the Strutinsky method for a given mass number (must be zero)</value>
  </data>
  <data name="HelpCumulHistogramStep" xml:space="preserve">
    <value>Creates an exact cumulative histogram as a step function</value>
  </data>
  <data name="HelpUnfolding" xml:space="preserve">
    <value>Unfolds given data</value>
  </data>
  <data name="PEnergies" xml:space="preserve">
    <value>e</value>
  </data>
  <data name="PEnergiesDescription" xml:space="preserve">
    <value>Energy levels of a system</value>
  </data>
  <data name="PUnfoldingType" xml:space="preserve">
    <value>utype</value>
  </data>
  <data name="PUnfoldingTypeDescription" xml:space="preserve">
    <value>Type of the unfolding procedure ("cpolynom")</value>
  </data>
  <data name="HelpDelta3" xml:space="preserve">
    <value>Calculates the Delta3 spectral rigidity</value>
  </data>
  <data name="HelpNumberVariance" xml:space="preserve">
    <value>Calculates the number variance</value>
  </data>
  <data name="HelpEulerGamma" xml:space="preserve">
    <value>Value of the Euler-Mascheroni gamma constant</value>
  </data>
  <data name="HelpNormalizeDensity" xml:space="preserve">
    <value>Normalizes the level density of a given vector into the form (0, ..., length - 1)</value>
  </data>
  <data name="HelpSpline" xml:space="preserve">
    <value>Creates a spline object</value>
  </data>
  <data name="HelpSplineValue" xml:space="preserve">
    <value>Value of the Spline interpolation</value>
  </data>
  <data name="PSpline" xml:space="preserve">
    <value>spline</value>
  </data>
  <data name="PSplineDescription" xml:space="preserve">
    <value>Spline object</value>
  </data>
  <data name="EMBadWavAudioFormat" xml:space="preserve">
    <value>Program can read only PCM linear coded WAV files (AudioFormat = 1). Current AudioFormat = {0}.</value>
  </data>
  <data name="EMBadWavBitRate" xml:space="preserve">
    <value>Program can read only PCM with BitRate = (8, 16, 32). Entered BitRate = {0}.</value>
  </data>
  <data name="EMBadWavFormat" xml:space="preserve">
    <value>Incorrect WAV format. Error in the parameter {0}.</value>
  </data>
  <data name="PSound" xml:space="preserve">
    <value>sound</value>
  </data>
  <data name="PSoundDescription" xml:space="preserve">
    <value>Channels of the sound to play</value>
  </data>
  <data name="PSoundParams" xml:space="preserve">
    <value>sp</value>
  </data>
  <data name="PSoundParamsDescription" xml:space="preserve">
    <value>Parameters of the sound (sampleRate = 44100; bitsPerSample = 16)</value>
  </data>
  <data name="HelpPlay" xml:space="preserve">
    <value>Plays a given vector</value>
  </data>
  <data name="HelpSolve" xml:space="preserve">
    <value>Solves an equation "the user function == zero"</value>
  </data>
  <data name="HelpIMF" xml:space="preserve">
    <value>Calculates one Intrinsic Mode Function</value>
  </data>
  <data name="HelpHOSpectrum3D" xml:space="preserve">
    <value>Computes spectrum the 3D harmonic oscillator potential</value>
  </data>
  <data name="HelpQuantumSturmCoulomb" xml:space="preserve">
    <value>Creates a quantum SturmCoulomb class</value>
  </data>
  <data name="PIntensityMagneticField" xml:space="preserve">
    <value>H</value>
  </data>
  <data name="PIntensityMagneticFieldDescription" xml:space="preserve">
    <value>Intensity of the magnetic field</value>
  </data>
  <data name="PFlat" xml:space="preserve">
    <value>flat</value>
  </data>
  <data name="PFlatDescription" xml:space="preserve">
    <value>True if the flat parts of the level density is going to be considered as a source of maxima / minima</value>
  </data>
  <data name="P2EMD" xml:space="preserve">
    <value>s</value>
  </data>
  <data name="P2EMDDescription" xml:space="preserve">
    <value>Number of iterations after the condition |#max - #min| &lt;= 1 is reached</value>
  </data>
  <data name="P3EMD" xml:space="preserve">
    <value>delta</value>
  </data>
  <data name="P3EMDDescription" xml:space="preserve">
    <value>A special parameter for the symmetry condition |U+L|/|U,L| leq delta</value>
  </data>
  <data name="PEMDBoundary" xml:space="preserve">
    <value>emdb</value>
  </data>
  <data name="PEMDBoundaryDescription" xml:space="preserve">
    <value>Boundary condition for the EMD calculation ("reflection" | "first")</value>
  </data>
  <data name="HelpQuantumEP" xml:space="preserve">
    <value>The quantum extensible pendulum system</value>
  </data>
  <data name="HelpClassicalEP" xml:space="preserve">
    <value>The classical extensible pendulum system</value>
  </data>
  <data name="PExtensiblePendulumNu" xml:space="preserve">
    <value>nu</value>
  </data>
  <data name="PExtensiblePendulumNuDescription" xml:space="preserve">
    <value>nu parameter</value>
  </data>
  <data name="HelpSaveNow" xml:space="preserve">
    <value>Saves current document into a file (in current thread)</value>
  </data>
  <data name="HelpFillMatrix" xml:space="preserve">
    <value>Fills a matrix with points that correspond to a given PointVector</value>
  </data>
  <data name="HelpStandardMapping" xml:space="preserve">
    <value>Creates a time series of the standard mapping with given initial conditions</value>
  </data>
  <data name="P1StandardMapping" xml:space="preserve">
    <value>k</value>
  </data>
  <data name="P1StandardMappingDescription" xml:space="preserve">
    <value>Stochasticity parameter</value>
  </data>
  <data name="P3StandardMapping" xml:space="preserve">
    <value>r</value>
  </data>
  <data name="P3StandardMappingDescription" xml:space="preserve">
    <value>Initial value of the variable r</value>
  </data>
  <data name="P4StandardMapping" xml:space="preserve">
    <value>theta</value>
  </data>
  <data name="P4StandardMappingDescription" xml:space="preserve">
    <value>Initial value of the variable theta</value>
  </data>
  <data name="P5FillMatrix" xml:space="preserve">
    <value>type</value>
  </data>
  <data name="P5FillMatrixDescription" xml:space="preserve">
    <value>How to deal with already filled values ("keep" | "overwrite" | "average")</value>
  </data>
  <data name="PBounds" xml:space="preserve">
    <value>bounds</value>
  </data>
  <data name="PBoundsDescription" xml:space="preserve">
    <value>Bounds of the accessible region</value>
  </data>
  <data name="HelpHilbertTransform" xml:space="preserve">
    <value>Hilbert Transform of a time series</value>
  </data>
  <data name="HelpPhase" xml:space="preserve">
    <value>Phase between two numbers or vectors</value>
  </data>
  <data name="PImmaginary" xml:space="preserve">
    <value>im</value>
  </data>
  <data name="PImmaginaryDescription" xml:space="preserve">
    <value>Immaginary part of a number</value>
  </data>
  <data name="PReal" xml:space="preserve">
    <value>re</value>
  </data>
  <data name="PRealDescription" xml:space="preserve">
    <value>Real part of a number</value>
  </data>
  <data name="HelpInstantaneousFrequency" xml:space="preserve">
    <value>Instantaneous frequency between two vectors</value>
  </data>
  <data name="HelpAutocorrelation" xml:space="preserve">
    <value>Returns the autocorrelation function of a vector up to a given lag t</value>
  </data>
  <data name="HelpGetFileContext" xml:space="preserve">
    <value>Returns the context from a file</value>
  </data>
  <data name="HelpFullHelpHTML" xml:space="preserve">
    <value>Full help for all functions (including names and types of the parameters) in the HTML format</value>
  </data>
  <data name="HelpLipkinF" xml:space="preserve">
    <value>Creates a Lipkin model class diagonalized in the full SU(2) basis</value>
  </data>
  <data name="PAlpha" xml:space="preserve">
    <value>alpha</value>
  </data>
  <data name="PAlphaDescription" xml:space="preserve">
    <value>Parameter alpha</value>
  </data>
  <data name="POmega" xml:space="preserve">
    <value>omega</value>
  </data>
  <data name="POmegaDescription" xml:space="preserve">
    <value>Parameter omega</value>
  </data>
  <data name="HelpPartialTrace" xml:space="preserve">
    <value>Calculates a partial trace for an eigenstate (returns it as a density matrix)</value>
  </data>
  <data name="PCombinedSystem" xml:space="preserve">
    <value>cs</value>
  </data>
  <data name="PCombinedSystemDescription" xml:space="preserve">
    <value>Combined system</value>
  </data>
  <data name="HelpLipkinOne" xml:space="preserve">
    <value>Creates a Lipkin model class diagonalized in the full SU(2) basis + one single spin</value>
  </data>
  <data name="HelpLipkinTwo" xml:space="preserve">
    <value>Creates a Lipkin model class diagonalized in the full SU(2) basis, divided into two interacting subsystems</value>
  </data>
  <data name="HelpExpandBasis" xml:space="preserve">
    <value>Expand a specified eigenvector in basis components</value>
  </data>
  <data name="PLipkin" xml:space="preserve">
    <value>lipkin</value>
  </data>
  <data name="PLipkinDescription" xml:space="preserve">
    <value>Lipkin model class</value>
  </data>
  <data name="HelpJC" xml:space="preserve">
    <value>Jaynes-Cummings model class</value>
  </data>
  <data name="PLambda" xml:space="preserve">
    <value>lambda</value>
  </data>
  <data name="PLambdaDescription" xml:space="preserve">
    <value>Parameter Lambda</value>
  </data>
  <data name="POmega0" xml:space="preserve">
    <value>omega0</value>
  </data>
  <data name="POmega0Description" xml:space="preserve">
    <value>Parameter Omega0</value>
  </data>
  <data name="HelpLipkinOneOne" xml:space="preserve">
    <value>Creates a Lipkin model class diagonalized in the full SU(2) basis + two single spins</value>
  </data>
  <data name="HelpEigenSystemSymmetric" xml:space="preserve">
    <value>Eigensystem of a matrix calculated using LAPACK library; before the calculation the matrix is symmetrized</value>
  </data>
  <data name="HelpConcurrence" xml:space="preserve">
    <value>Calculates the concurrence of the LipkinOneOne system</value>
  </data>
  <data name="HelpContain" xml:space="preserve">
    <value>Returns true if the given vector contains the given value within given error</value>
  </data>
  <data name="HelpEntanglementEntropy" xml:space="preserve">
    <value>Calculates the entanglement entropy of a combined system</value>
  </data>
  <data name="HelpECG" xml:space="preserve">
    <value>Analysis of the ECG signal</value>
  </data>
  <data name="PAverageInterval" xml:space="preserve">
    <value>interval</value>
  </data>
  <data name="PAverageIntervalDescription" xml:space="preserve">
    <value>Interval of averaging</value>
  </data>
  <data name="HelpNoiseGenerator" xml:space="preserve">
    <value>Generates a vector with a 1/f^beta noise</value>
  </data>
  <data name="PBeta" xml:space="preserve">
    <value>beta</value>
  </data>
  <data name="PBetaDescription" xml:space="preserve">
    <value>Beta parameter</value>
  </data>
  <data name="PPhase" xml:space="preserve">
    <value>phi</value>
  </data>
  <data name="PPhaseDescription" xml:space="preserve">
    <value>Phases</value>
  </data>
  <data name="PAllIterations" xml:space="preserve">
    <value>alli</value>
  </data>
  <data name="PAllIterationsDescription" xml:space="preserve">
    <value>True if all iterations will be stored</value>
  </data>
  <data name="HelpCreateByCopy" xml:space="preserve">
    <value>Put a given vector at each of the given times</value>
  </data>
  <data name="PIndex" xml:space="preserve">
    <value>i</value>
  </data>
  <data name="PIndexDescription" xml:space="preserve">
    <value>Indexes</value>
  </data>
  <data name="HelpCumul0" xml:space="preserve">
    <value>Returns a vector of cumulations sum_{i=0}^{k} s_{k}, where the first element is 0;</value>
  </data>
  <data name="HelpGPS" xml:space="preserve">
    <value>Calculates distances from GPS coordinates</value>
  </data>
  <data name="PZ" xml:space="preserve">
    <value>z</value>
  </data>
  <data name="PZDescription" xml:space="preserve">
    <value>Variable z</value>
  </data>
  <data name="HelpGPSPOI" xml:space="preserve">
    <value>Finds the Points of Interest that are near the given path</value>
  </data>
  <data name="PDistanceOnePoint" xml:space="preserve">
    <value>d</value>
  </data>
  <data name="PDistanceOnePointDescription" xml:space="preserve">
    <value>Distance that must be passed in order to visit the same point (in meters)</value>
  </data>
  <data name="PMaxDistance" xml:space="preserve">
    <value>maxd</value>
  </data>
  <data name="PMaxDistanceDescription" xml:space="preserve">
    <value>Maximum distance between the points and the track (in meters)</value>
  </data>
  <data name="PPOI" xml:space="preserve">
    <value>poi</value>
  </data>
  <data name="PPOIDescription" xml:space="preserve">
    <value>Points of interest</value>
  </data>
  <data name="PTrack" xml:space="preserve">
    <value>track</value>
  </data>
  <data name="PTrackDescription" xml:space="preserve">
    <value>Track</value>
  </data>
  <data name="HelpLipkinTwoSpectator" xml:space="preserve">
    <value>Creates a Lipkin model class diagonalized in the full SU(2) basis, divided into two interacting subsystems consisting of the environment + spectator</value>
  </data>
  <data name="PAlphaS" xml:space="preserve">
    <value>alphaS</value>
  </data>
  <data name="PAlphaSDescription" xml:space="preserve">
    <value>Parameter alpha of the Spectator</value>
  </data>
  <data name="PG" xml:space="preserve">
    <value>g</value>
  </data>
  <data name="PGDescription" xml:space="preserve">
    <value>Parameter g of the interaction</value>
  </data>
  <data name="POmegaS" xml:space="preserve">
    <value>omegaS</value>
  </data>
  <data name="POmegaSDescription" xml:space="preserve">
    <value>Parameter omega of the Spectator</value>
  </data>
  <data name="HelpLipkinTwoSpectatorSimple" xml:space="preserve">
    <value>Creates a Lipkin model consisting of the environment diagonalized in the full SU(2) basis + one simply interacting spin</value>
  </data>
  <data name="PEpsilon" xml:space="preserve">
    <value>epsilon</value>
  </data>
  <data name="PEpsilonDescription" xml:space="preserve">
    <value>Parameter epsilon</value>
  </data>
  <data name="HelpLHOQGCM1" xml:space="preserve">
    <value>LHOQuantumGCM1 function (Hamiltonian with 1 minimum in Gamma and with a potential given by an expansion of Cos(bx))</value>
  </data>
  <data name="HelpShiftX" xml:space="preserve">
    <value>Shifts the X values of a PointVector so that the first auxiliary PointVector fits the second auxiliary PointVector</value>
  </data>
  <data name="PSource" xml:space="preserve">
    <value>source</value>
  </data>
  <data name="PSourceDescription" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="PTarget" xml:space="preserve">
    <value>target</value>
  </data>
  <data name="PTargetDescription" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="HelpClassicalCW" xml:space="preserve">
    <value>Creates classical Creagh-Whelan class</value>
  </data>
  <data name="PMu" xml:space="preserve">
    <value>mu</value>
  </data>
  <data name="PMuDescription" xml:space="preserve">
    <value>Parameter mu</value>
  </data>
  <data name="PPower" xml:space="preserve">
    <value>power</value>
  </data>
  <data name="PPowerDescription" xml:space="preserve">
    <value>Power of the calculation</value>
  </data>
  <data name="HelpQuantumCW" xml:space="preserve">
    <value>Quantum Creagh-Whelan potential</value>
  </data>
  <data name="HelpQCWPolar" xml:space="preserve">
    <value>Creates quantum Creagh-Whelan class, diagonalized in the polar coordinates</value>
  </data>
  <data name="HelpGaussianSample" xml:space="preserve">
    <value>Calculates the convolution of the input vector with the Gaussian function of a given standard deviation and sample it at the values of a given vector</value>
  </data>
  <data name="EMBadDerivativeOrder" xml:space="preserve">
    <value>Wrong order {0} of the derivative.</value>
  </data>
  <data name="HelpD1" xml:space="preserve">
    <value>Returns the first derivative</value>
  </data>
  <data name="HelpStr" xml:space="preserve">
    <value>Converts the argument into string</value>
  </data>
  <data name="HelpLinearSample" xml:space="preserve">
    <value>Calculates the mean value of a given pointvector on an interval</value>
  </data>
  <data name="HelpLevelDensity" xml:space="preserve">
    <value>Semiclassical level density</value>
  </data>
  <data name="HelpSVD" xml:space="preserve">
    <value>Singular Value Decomposition</value>
  </data>
  <data name="HelpOuterProduct" xml:space="preserve">
    <value>Outer product of two vectors</value>
  </data>
  <data name="HelpShiftMatrix" xml:space="preserve">
    <value>Create a matrix of shifted vector (with a circle boundary conditions)</value>
  </data>
  <data name="HelpRotate" xml:space="preserve">
    <value>Rotates the elements of the vector</value>
  </data>
  <data name="PRotationOffset" xml:space="preserve">
    <value>r</value>
  </data>
  <data name="PRotationOffsetDescription" xml:space="preserve">
    <value>Offset for rotation</value>
  </data>
  <data name="GPLColorFnc" xml:space="preserve">
    <value>lcolorfnc</value>
  </data>
  <data name="GPLColorFncDescription" xml:space="preserve">
    <value>Name of the line color function</value>
  </data>
  <data name="GPLWidthFnc" xml:space="preserve">
    <value>lwidthfnc</value>
  </data>
  <data name="GPLWidthFncDescription" xml:space="preserve">
    <value>Name of the line width function</value>
  </data>
  <data name="HelpIsConvex" xml:space="preserve">
    <value>For the Creagh-Whelan system returns true if the equipotential surface at the given energy is convex</value>
  </data>
  <data name="PCW" xml:space="preserve">
    <value>cw</value>
  </data>
  <data name="PCWDescription" xml:space="preserve">
    <value>Creagh-Whelan system</value>
  </data>
  <data name="EMInvalidRank" xml:space="preserve">
    <value>Invalid rank of the input array.</value>
  </data>
  <data name="EMInvalidRankDetail" xml:space="preserve">
    <value>The rank must be {0} instead of {1}.</value>
  </data>
  <data name="HelpCopy" xml:space="preserve">
    <value>Copies a given object i-times and returns as TArray</value>
  </data>
  <data name="HelpInvertArray" xml:space="preserve">
    <value>From an array f[i][j] makes array f[j][i]</value>
  </data>
  <data name="PArray" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="PArrayDescription" xml:space="preserve">
    <value>array</value>
  </data>
  <data name="PObject" xml:space="preserve">
    <value>o</value>
  </data>
  <data name="PObjectDescription" xml:space="preserve">
    <value>Object</value>
  </data>
  <data name="HelpPotentialMeanCW" xml:space="preserve">
    <value>For the Creagh-Whelan system returns the mean of the potential well at given energies</value>
  </data>
  <data name="HelpExtreemes" xml:space="preserve">
    <value>For given dynamical system returns all local extreemes and energy at them</value>
  </data>
  <data name="HelpGetNonDiagonal" xml:space="preserve">
    <value>Get the nondiagonal elements of a square matrix and returns it as a vector</value>
  </data>
  <data name="HelpCorrelationShift" xml:space="preserve">
    <value>Calculates the position of the maximum correlation</value>
  </data>
  <data name="HelpClassicalDicke" xml:space="preserve">
    <value>Creates a classical Dicke class</value>
  </data>
  <data name="PDelta" xml:space="preserve">
    <value>delta</value>
  </data>
  <data name="PDeltaDescription" xml:space="preserve">
    <value>0 for the Tavis-Cummings model, 1 for the Dicke model</value>
  </data>
  <data name="PJ" xml:space="preserve">
    <value>j</value>
  </data>
  <data name="PJDescription" xml:space="preserve">
    <value>Parameter j</value>
  </data>
  <data name="HelpAMFM" xml:space="preserve">
    <value>Calculates the AM-FM decomposition of a IMF</value>
  </data>
  <data name="HelpInterpolate3D" xml:space="preserve">
    <value>Interpolates a 3D function on a given set of points</value>
  </data>
  <data name="PRadius" xml:space="preserve">
    <value>r</value>
  </data>
  <data name="PRadiusDescription" xml:space="preserve">
    <value>radius</value>
  </data>
  <data name="HelpContour" xml:space="preserve">
    <value>Calculates a contour of a given value</value>
  </data>
  <data name="HelpGCE" xml:space="preserve">
    <value>Creates a system to check the Geometrical curvature method</value>
  </data>
  <data name="HelpQuantumDicke" xml:space="preserve">
    <value>Creates the quantum Dicke class</value>
  </data>
  <data name="HelpCombineVector" xml:space="preserve">
    <value>Returns a vector containing all the possible sums of elements of given vectors</value>
  </data>
  <data name="PLimit" xml:space="preserve">
    <value>l</value>
  </data>
  <data name="PLimitDescription" xml:space="preserve">
    <value>Limit</value>
  </data>
  <data name="PMax" xml:space="preserve">
    <value>max</value>
  </data>
  <data name="PMaxDescription" xml:space="preserve">
    <value>Maximum value</value>
  </data>
  <data name="PMin" xml:space="preserve">
    <value>min</value>
  </data>
  <data name="PMinDescription" xml:space="preserve">
    <value>Minimum value</value>
  </data>
  <data name="HelpCombineVectorCH" xml:space="preserve">
    <value>Returns cumulative histogram of the series which contains all the possible sums of elements of given vectors</value>
  </data>
  <data name="PWidth" xml:space="preserve">
    <value>width</value>
  </data>
  <data name="PWidthDescription" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="PNormalize" xml:space="preserve">
    <value>n</value>
  </data>
  <data name="PNormalizeDescription" xml:space="preserve">
    <value>True if the result should be normalized</value>
  </data>
  <data name="HelpPCR3BP" xml:space="preserve">
    <value>Poincaré circular restricted Three-body problem</value>
  </data>
  <data name="HelpWalkerFord" xml:space="preserve">
    <value>Creates Walker-Ford class</value>
  </data>
  <data name="PMaxJ" xml:space="preserve">
    <value>maxJ</value>
  </data>
  <data name="PMaxJDescription" xml:space="preserve">
    <value>Maximum value of the action variable</value>
  </data>
  <data name="HelpDistanceMatrix" xml:space="preserve">
    <value>Creates a matrix filled with distances of a given set of points</value>
  </data>
  <data name="HelpSpinZ" xml:space="preserve">
    <value>Calculates the Partition Function of a 2D Spin system of length L</value>
  </data>
  <data name="HelpIsing2D" xml:space="preserve">
    <value>Creates an Ising2D class</value>
  </data>
  <data name="P2Ising2D" xml:space="preserve">
    <value>isP</value>
  </data>
  <data name="P2Ising2DDescription" xml:space="preserve">
    <value>Is polynomial method?</value>
  </data>
  <data name="PIsing2D" xml:space="preserve">
    <value>ising2D</value>
  </data>
  <data name="PIsing2DDescription" xml:space="preserve">
    <value>Ising2D class</value>
  </data>
  <data name="HelpSpinZZero" xml:space="preserve">
    <value>Calculates the zeros of the partition function of a 2D Spin system</value>
  </data>
  <data name="PCyclicBoundary" xml:space="preserve">
    <value>cb</value>
  </data>
  <data name="PCyclicBoundaryDescription" xml:space="preserve">
    <value>Cyclic boundary conditions</value>
  </data>
  <data name="HelpReadAME" xml:space="preserve">
    <value>Reads Atomic Mass Evaluation from a graph</value>
  </data>
  <data name="HelpAME2NSE" xml:space="preserve">
    <value>Two-neutron separation energies</value>
  </data>
  <data name="PAME" xml:space="preserve">
    <value>ame</value>
  </data>
  <data name="PAMEDescription" xml:space="preserve">
    <value>Atomic Mass Evaluation</value>
  </data>
  <data name="PAMEExperiment" xml:space="preserve">
    <value>exp</value>
  </data>
  <data name="PAMEExperimentDescription" xml:space="preserve">
    <value>Data only from experiment</value>
  </data>
  <data name="HelpAMEIsotope" xml:space="preserve">
    <value>Returns a matrix with known isotopes</value>
  </data>
  <data name="HelpCellContour" xml:space="preserve">
    <value>Returns borders of all values bigger than given value of a given matrix</value>
  </data>
  <data name="HelpSMJacobi" xml:space="preserve">
    <value>Jacobi matrix of the Standard Mapping</value>
  </data>
  <data name="PModulo" xml:space="preserve">
    <value>mod</value>
  </data>
  <data name="PModuloDescription" xml:space="preserve">
    <value>Modulo</value>
  </data>
  <data name="HelpConvolutionP" xml:space="preserve">
    <value>Returns a convolution of functions defined for x &gt; 0</value>
  </data>
  <data name="HelpConvolutionA" xml:space="preserve">
    <value>Returns all possible convolutions of functions defined for x &gt; 0 of depth d</value>
  </data>
  <data name="PDepth" xml:space="preserve">
    <value>depth</value>
  </data>
  <data name="PDepthDescription" xml:space="preserve">
    <value>Depth</value>
  </data>
  <data name="HelpFindX" xml:space="preserve">
    <value>From the Y value finds the best X value (using linear interpolation and multiplicity)</value>
  </data>
  <data name="HelpResultant" xml:space="preserve">
    <value>Resultant of a matrix in the form A + lambda B</value>
  </data>
  <data name="HelpParameterMatrix" xml:space="preserve">
    <value>Returns matrices for the calculation of exceptional points</value>
  </data>
  <data name="HelpEP" xml:space="preserve">
    <value>Exceptional points of a matrix in the form A + l B (+ l^2 C)</value>
  </data>
  <data name="HelpLipkinFullL" xml:space="preserve">
    <value>Creates a class of the Lipkin model with control parameters as of PRE 2017, diagonalized in the full SU(2) basis</value>
  </data>
  <data name="HelpEPIntersection" xml:space="preserve">
    <value>Finds all intersection points of lines given in the form y = y0 + k x</value>
  </data>
  <data name="HelpRandomC" xml:space="preserve">
    <value>Generates a random number with semicircle distribution between -R and R</value>
  </data>
  <data name="HelpRandomPermutation" xml:space="preserve">
    <value>Generates an array of random permutated numbers</value>
  </data>
  <data name="HelpRandomVectorC" xml:space="preserve">
    <value>Generates a vector with Wigner semicircle distributed components</value>
  </data>
  <data name="PIsLinear" xml:space="preserve">
    <value>linear</value>
  </data>
  <data name="PIsLinearDescription" xml:space="preserve">
    <value>True for the linearized version </value>
  </data>
  <data name="HelpExactEPDistribution" xml:space="preserve">
    <value>Value of the exact EP distribution according to PRE 2017</value>
  </data>
  <data name="HelpQuench" xml:space="preserve">
    <value>Returns the survival probability and LDS of a quench</value>
  </data>
  <data name="PFinalSystem" xml:space="preserve">
    <value>fs</value>
  </data>
  <data name="PFinalSystemDescription" xml:space="preserve">
    <value>Final state of the system</value>
  </data>
  <data name="PInitialState" xml:space="preserve">
    <value>i</value>
  </data>
  <data name="PInitialStateDescription" xml:space="preserve">
    <value>Initial state of the system</value>
  </data>
  <data name="PInitialSystem" xml:space="preserve">
    <value>is</value>
  </data>
  <data name="PInitialSystemDescription" xml:space="preserve">
    <value>Initial state of the system</value>
  </data>
  <data name="HelpDickeQmn" xml:space="preserve">
    <value>Calculates the expectation value of the q operator in the Dicke model</value>
  </data>
  <data name="HelpAMEMass" xml:space="preserve">
    <value>Returns a matrix with masses of known isotopes</value>
  </data>
  <data name="HelpOTOC" xml:space="preserve">
    <value>Calculates the microcanonical OTOC</value>
  </data>
  <data name="PIsVariance" xml:space="preserve">
    <value>isvar</value>
  </data>
  <data name="PIsVarianceDescription" xml:space="preserve">
    <value>Variance calculated (needs time, returned in the third argument)</value>
  </data>
  <data name="HelpIIBM" xml:space="preserve">
    <value>Creates the intrinsic IBM class</value>
  </data>
  <data name="PBeta0" xml:space="preserve">
    <value>beta0</value>
  </data>
  <data name="PBeta0Description" xml:space="preserve">
    <value>Position of the deformed local minimum</value>
  </data>
  <data name="PRho" xml:space="preserve">
    <value>rho</value>
  </data>
  <data name="PRhoDescription" xml:space="preserve">
    <value>External parameter (for rho in (0; 1/beta0) Hamiltonian 1, for rho &gt; 1/beta0 or rho &lt; 0 Hamiltonian 2)</value>
  </data>
  <data name="HelpReduceSize" xml:space="preserve">
    <value>Reduces the size of a matrix by a given factor</value>
  </data>
  <data name="PFactor" xml:space="preserve">
    <value>fx</value>
  </data>
  <data name="PFactorDescription" xml:space="preserve">
    <value>Number of reduced points in direction x</value>
  </data>
  <data name="HelpSeparate" xml:space="preserve">
    <value>Separates a set of points into lines</value>
  </data>
  <data name="HelpLipkinG" xml:space="preserve">
    <value>Creates a class of the Lipkin model with all possible two-body terms</value>
  </data>
  <data name="PJx" xml:space="preserve">
    <value>jx</value>
  </data>
  <data name="PJx2" xml:space="preserve">
    <value>jx2</value>
  </data>
  <data name="PJx2Description" xml:space="preserve">
    <value>Parameter of the Jx^2 term</value>
  </data>
  <data name="PJxDescription" xml:space="preserve">
    <value>Parameter of the Jx term</value>
  </data>
  <data name="PJxz" xml:space="preserve">
    <value>jxz</value>
  </data>
  <data name="PJxzDescription" xml:space="preserve">
    <value>Parameter of the Jxz term</value>
  </data>
  <data name="PJz" xml:space="preserve">
    <value>jz</value>
  </data>
  <data name="PJz2" xml:space="preserve">
    <value>jz2</value>
  </data>
  <data name="PJz2Description" xml:space="preserve">
    <value>Parameter of the Jz^2 term</value>
  </data>
  <data name="PJzDescription" xml:space="preserve">
    <value>Parameter of the Jz term</value>
  </data>
  <data name="HelpAddRange" xml:space="preserve">
    <value>Adds a range of elements to the the list</value>
  </data>
</root>